akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    warn-about-java-serializer-usage = off

    serializers {
      kryo = "io.altoo.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      "ch.epfl.bluebrain.nexus.sourcing.Command" = kryo
      "ch.epfl.bluebrain.nexus.sourcing.Event" = kryo
      "ch.epfl.bluebrain.nexus.sourcing.Rejection" = kryo
      "ch.epfl.bluebrain.nexus.sourcing.State" = kryo
    }
  }

  extensions += "akka.cluster.ddata.DistributedData"

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = on
  loglevel = DEBUG

  cluster {
    jmx.multi-mbeans-in-same-jvm = on
  }

  persistence {
    journal.plugin = "inmemory-journal"
    snapshot-store.plugin = "inmemory-snapshot-store"
  }

  test {
    timefactor = 5.0
  }

  remote {
    artery {
      transport = tcp # See Selecting a transport below
      canonical.hostname = "127.0.0.1"
      canonical.port = 0
    }
  }
}

akka-kryo-serialization {
  id-strategy = "automatic"
  implicit-registration-logging = true
  resolve-subclasses = false
}


inmemory-read-journal {
  # Absolute path to the write journal plugin configuration section to get the event adapters from
  write-plugin = "inmemory-journal"

  # there are two modes; sequence or uuid. If set to "sequence" and NoOffset will be requested, then
  # the query will return Sequence offset types. If set to "uuid" and NoOffset will be requested, then
  # the query will return TimeBasedUUID offset types. When the query is called with Sequence then
  # the query will return Sequence offset types and if the query is called with TimeBasedUUID types then
  # the query will return TimeBasedUUID offset types.
  offset-mode = "sequence"

  # ask timeout on Futures
  ask-timeout = "10s"

  # New events are retrieved (polled) with this interval.
  refresh-interval = "50ms"

  # How many events to fetch in one query (replay) and keep buffered until they
  # are delivered downstreams.
  max-buffer-size = "100"
}