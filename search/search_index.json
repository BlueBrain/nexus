{"docs":[{"location":"/paradox.json","text":"","title":""},{"location":"/docs/tutorial/shacl-in-a-nutshell/cleaning-movielens.html","text":"","title":"SHACL Overview"},{"location":"/docs/tutorial/shacl-in-a-nutshell/cleaning-movielens.html#shacl-overview","text":"","title":"SHACL Overview"},{"location":"/docs/tutorial/shacl-in-a-nutshell/cleaning-movielens.html#shacl-core-components","text":"","title":"SHACL Core Components"},{"location":"/docs/tutorial/shacl-in-a-nutshell/cleaning-movielens.html#a-validation-language-for-a-graph-data-model","text":"","title":"A validation language for a graph data model"},{"location":"/docs/tutorial/shacl-in-a-nutshell/cleaning-movielens.html#basic-definitions","text":"","title":"Basic definitions"},{"location":"/docs/api/iam/permissions-api.html","text":"","title":""},{"location":"/docs/tutorial/index.html","text":"","title":"Blue Brain Nexus tutorials"},{"location":"/docs/tutorial/index.html#blue-brain-nexus-tutorials","text":"","title":"Blue Brain Nexus tutorials"},{"location":"/docs/tutorial/index.html#overview","text":"This documentation contains a set of pages and notebooks demonstrating Blue Brain Nexus features and capabilities.","title":"Overview"},{"location":"/docs/tutorial/getting-started/index.html","text":"","title":"Getting Started"},{"location":"/docs/tutorial/getting-started/index.html#getting-started","text":"","title":"Getting Started"},{"location":"/docs/tutorial/getting-started/index.html#overview","text":"This Getting Started tutorial introduces basic Blue Brain Nexus features and capabilities.","title":"Overview"},{"location":"/docs/tutorial/getting-started/index.html#what-youll-build","text":"A project within a Blue Brain Nexus deployment where a subset of the MovieLens dataset is ingested and queriable.","title":"What you’ll build"},{"location":"/docs/tutorial/getting-started/index.html#what-youll-learn","text":"How to set up the Nexus CLI How to create a project in Nexus How to ingest data How to access data How to share data","title":"What you’ll learn"},{"location":"/docs/tutorial/getting-started/index.html#what-youll-need","text":"A Python 3.5 or higher with support of Jupyter notebook","title":"What you’ll need"},{"location":"/docs/tutorial/getting-started/quick-start/index.html","text":"","title":"Quick Start"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#quick-start","text":"","title":"Quick Start"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#overview","text":"This example-driven tutorial presents 5 steps to get started with Blue Brain Nexus to build and query a simple knowledge graph. The goal is to go over some capabilities of Blue Brain Nexus enabling:\nThe creation of a project as a protected data space to work with An easy ingestion of dataset and management of it’s lifecycle Querying a dataset to retrieve various information Sharing a dataset by making it public\nFor that we will work with the small version of the MovieLens dataset containing a set of movies (movies.csv) along with their ratings (ratings.csv) and tags (tags.csv) made by users. An overview of this dataset can be found here but it’s not required to read it to follow this quick start tutorial.\nNote This tutorial makes use of an AWS deployment of Blue Brain Nexus available at https://nexus-sandbox.io/v1. We will be using Nexus CLI, a python client, to interact with the deployment.\nLet’s get started.","title":"Overview"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#set-up","text":"","title":"Set up"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#install-and-setup-the-nexus-cli","text":"Since the CLI is written in python, you may want to create a virtual env for a clean set up. To do so, Conda can be used. If you don’t have it installed follow the instructions here.\nconda create -n nexus-cli python=3.5\nconda activate nexus-cli\npip install git+https://github.com/BlueBrain/nexus-cli","title":"Install and setup the Nexus CLI"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#create-and-select-a-profile","text":"To ease the usage of the CLI, we will create a profile named ‘tutorial’ storing locally various configurations such as the the Nexus deployment url.\nCommand nexus profiles create tutorial https://nexus-sandbox.io/v1 && nexus profiles listFull source at GitHub Output Profile created.\n+------------+----------+-------------------------------------+-------+\n| Profile    | Selected | URL                                 | Token |\n+------------+----------+-------------------------------------+-------+\n| tutorial   |   Yes    | https://nexus-sandbox.io/v1         |  None |\n+------------+----------+-------------------------------------+-------+Full source at GitHub\nLet select the tutorial profile we just created.\nCommand nexus profiles select tutorialFull source at GitHub Output Selected profile: tutorial\n+------------+----------+-------------------------------------+-------+\n| Profile    | Selected | URL                                 | Token |\n+------------+----------+-------------------------------------+-------+\n| tutorial   |   Yes    | https://nexus-sandbox.io/v1         |  None |\n+------------+----------+-------------------------------------+-------+Full source at GitHub","title":"Create and select a ‘tutorial’ profile"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#login","text":"A bearer token is needed to authenticate to Nexus. For the purpose of this tutorial, you’ll login using your github account.\nNote If you don’t have a github account, please follow the instructions on this page to create one.\nThe following command will open a browser window from where you can login using your github account.\nCommand nexus auth loginFull source at GitHub Output A browser window will now open, please login, copy your token and use the auth set-token command to store it in the CLI\nPress ENTER to continue...Full source at GitHub\nFrom the opened web page, click on the login button on the right corner and follow the instructions.\nAt the end you’ll see a token button on the right corner. Click on it to copy the token.\nThe token can now be added to the tutorial profile. In the output of the following command you should see that the token column has now an expiry date.\nCommand nexus auth set-token $TOKEN && nexus profiles listFull source at GitHub Output +--------------+----------+-------------------------------------+-----------------------------+\n| Profile      | Selected | URL                                 |            Token            |\n+--------------+----------+-------------------------------------+-----------------------------+\n| tutorial     |   Yes    | https://nexus-sandbox.io/v1         | Expiry: YYYY-MM-DD HH:mm:s |\n+--------------+----------+-------------------------------------+-----------------------------+Full source at GitHub","title":"Login"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#create-a-project","text":"Projects in BlueBrain Nexus are spaces where data can be:\nmanaged: created, updated, deprecated, validated, secured, accessed: directly by ids or through various search interfaces. shared: through fine grain Access Control List\nA project is always created within an organization just like a git repository is created in a github organization. Organizations can be understood as accounts hosting multiple projects.","title":"Create a project"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#select-an-organization","text":"Note A public organization named tutorialnexus is already created for the purpose of this tutorial. All projects will be created under this organization.\nThe following command should list the organizations you have access to. The tutorialnexus orgnization should be listed and tagged as non deprecated in the output.\nCommand nexus orgs listFull source at GitHub Output +----------------+-------------------+-----------------------------------------------------+------------+\n| Name           | Description       | Id                                                  | Deprecated |\n+----------------+-------------------+-----------------------------------------------------+------------+\n| tutorialnexus  | Nexus sandbox     | https://nexus-sandbox.io/v1/tutorialnexus     | False      |Full source at GitHub\nLet select the tutorialnexus organization.\nCommand nexus orgs select tutorialnexusFull source at GitHub Output tutorialnexus organization selected.Full source at GitHub","title":"Select an organization"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#create-a-project","text":"A project is created with a label and within an organization. The label should be made of alphanumerical characters and its length should be between 3 and 32 (it should match the regex: [a-zA-Z0-9-_]{3,32}).\nPick a label (hereafter referred to as $PROJECTLABEL) and create a project using the following command. It is recommended to use your username to avoid collision of projects labels within an organization.\nCommand nexus projects create $PROJECTLABEL && nexus projects listFull source at GitHub Output Project created (id: https://nexus-sandbox.io/v1/projects/tutorialnexus/$PROJECTLABEL)\n+---------------+-------------+------------------------------------------------------------------------+------------+\n| Label         | Description | Id                                                                     | Deprecated |\n+---------------+-------------+------------------------------------------------------------------------+------------+\n| $PROJECTLABEL |             | https://nexus-sandbox.io/v1/projects/tutorialnexus/$PROJECTLABEL | False      |\n+---------------+-------------+------------------------------------------------------------------------+------------+Full source at GitHub\nBy default created projects are private meaning that only the project creator (you) has read and write access to it. We’ll see below how to make a project public.\nThe output of the previous command shows the list of projects you have read access to. The project you just created should be the only one listed at this point. Let select it.\nCommand nexus projects select $PROJECTLABEL && nexus projects listFull source at GitHub Output $PROJECTLABEL project selected\n+---------------+-------------+------------------------------------------------------------------------+------------+\n| Label         | Description | Id                                                                     | Deprecated |\n+---------------+-------------+------------------------------------------------------------------------+------------+\n| $PROJECTLABEL |             | https://nexus-sandbox.io/v1/projects/tutorialnexus/$PROJECTLABEL | False      |\n+---------------+-------------+------------------------------------------------------------------------+------------+Full source at GitHub\nWe are all set to bring some data within the project we just created.","title":"Create a project"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#ingest-data","text":"","title":"Ingest data"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#download-the-dataset","text":"The MovieLens dataset can be downloaded either directly on a browser or using a curl command as shown below.\nThe following command download, unzip the dataset in the folder ~/ml-latest-small and list the files. The downloaded MovieLens dataset is made of four csv files as shown in the output tab.\nCommand cd ~ && curl -s -O http://files.grouplens.org/datasets/movielens/ml-latest-small.zip && unzip -qq ml-latest-small.zip && cd ml-latest-small && lsFull source at GitHub Output README.txt\tlinks.csv\tmovies.csv\tratings.csv\ttags.csvFull source at GitHub","title":"Download the dataset"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#load-the-dataset","text":"Let first load the movies and merge them with the links.\nnexus resources create -f ~/ml-latest-small/movies.csv -t Movie --format csv --idcolumn movieId --mergewith ~/ml-latest-small/links.csv --mergeon movieId --thread 4\nThen we can load the tags.\nnexus resources create -f ~/ml-latest-small/tags.csv -t Tag --format csv --thread 4\nAnd finally load the ratings. Loading 100837 resources might take some time.\nnexus resources create -f ~/ml-latest-small/ratings.csv -t Rating --format csv --thread 4","title":"Load the dataset"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#access-data","text":"","title":"Access data"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#view-data-in-nexus-web","text":"Nexus is deployed with a web application allowing to browse organizations, projects, data and schemas you have access to. You can go to the address https://nexus-sandbox.io/web and browse the data you just loaded.","title":"View data in Nexus Web"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#list-data","text":"The simplest way to accessed data within Nexus is by listing them. The following command lists 5 resources:\nCommand nexus resources list --size 5Full source at GitHub Output +------------------------------------------------------------------------------------+----------------------------------------------------------------------------+----------+------------+\n| Id                                                                                 | Type                                                                       | Revision | Deprecated |\n+------------------------------------------------------------------------------------+----------------------------------------------------------------------------+----------+------------+\n| https://nexus-sandbox.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Movie_1  | https://nexus-sandbox.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Movie | 1        | False      |\n| https://nexus-sandbox.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Movie_9  | https://nexus-sandbox.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Movie | 1        | False      |\n| https://nexus-sandbox.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Movie_12 | https://nexus-sandbox.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Movie | 1        | False      |\n| https://nexus-sandbox.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Movie_7  | https://nexus-sandbox.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Movie | 1        | False      |\n| https://nexus-sandbox.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Movie_8  | https://nexus-sandbox.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Movie | 1        | False      |\n+------------------------------------------------------------------------------------+----------------------------------------------------------------------------+----------+------------+Full source at GitHub\nThe full payload of the resources are not retrieved when listing them: only identifier, type as well as Nexus added metadata are. But the result list can be scrolled and each resource fetched by identifier.\nCommand nexus resources fetch https://nexus-sandbox.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Movie_1Full source at GitHub Output {\n  \"@context\": [\n    {\n      \"@base\": \"https://nexus-sandbox.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/\",\n      \"@vocab\": \"https://nexus-sandbox.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/\"\n    },\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"Movie_1\",\n  \"@type\": \"Movie\",\n  \"genres\": \"Adventure|Animation|Children|Comedy|Fantasy\",\n  \"imdbId\": 114709,\n  \"movieId\": 1,\n  \"title\": \"Toy Story (1995)\",\n  \"tmdbId\": 862.0,\n  \"_self\": \"../../resource/https%3A%2F%2Fbbp.epfl.ch%2Fnexus%2Fv1%2Fresources%2Ftutorialnexus%2F$PROJECTLABEL%2F_%2FMovie_1\",\n  \"_constrainedBy\": \"nxs:resource.json\",\n  \"_project\": \"../../../../../projects/tutorialnexus/$PROJECTLABEL\",\n  \"_createdAt\": \"2019-01-17T10:32:02.221Z\",\n  \"_createdBy\": \"....\",\n  \"_updatedAt\": \"2019-01-17T10:32:02.221Z\",\n  \"_updatedBy\": \"....\",\n  \"_rev\": 1,\n  \"_deprecated\": false\n}Full source at GitHub\nWhenever a resource is created, Nexus injects some useful metadata. The table below details some of them:\nMetadata Description Value Type @id Generated resource identifier. The user can provide its own identifier. URI @type The type of the resource if provided by the user. URI _self The resource address within Nexus. It contains the resource management details such as the organization, the project and the schema. URI _createdAt The resource creation date. DateTime _createdBy The resource creator. DateTime\nNote that Nexus uses JSON-LD as data exchange format.\nFilters are available to list specific resources. For example a list of resources of type Rating can be retrieved by running the following command:\nCommand nexus resources list --type Rating --size 5Full source at GitHub Output +------------------------------------------------------------------------------------+----------------------------------------------------------------------------+----------+------------+\n| Id                                                                                 | Type                                                                       | Revision | Deprecated |\n+------------------------------------------------------------------------------------+----------------------------------------------------------------------------+----------+------------+\n| https://nexus-sandbox.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Rating_1  | https://nexus-sandbox.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Rating | 1        | False      |\n| https://nexus-sandbox.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Rating_9  | https://nexus-sandbox.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Rating | 1        | False      |\n| https://nexus-sandbox.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Rating_12 | https://nexus-sandbox.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Rating | 1        | False      |\n| https://nexus-sandbox.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Rating_7  | https://nexus-sandbox.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Rating | 1        | False      |\n| https://nexus-sandbox.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Rating_8  | https://nexus-sandbox.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Rating | 1        | False      |\n+------------------------------------------------------------------------------------+----------------------------------------------------------------------------+----------+------------+Full source at GitHub\nListing with various filters using the CLI As an exercise try to filter by tag to only retrieve resources of type Tag.","title":"List data"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#query-data","text":"Listing is usually not enough to select specific subset of the data. Data ingested within each project can be searched through two complementary search interfaces called views.\nView Description ElasticSearchView Exposes data in ElasticSearch a document oriented search engine and provide access to it using the ElasticSearch query langugage. SparqlView Exposes data as a graph and allows to navigate and explore the data using the W3C Sparql query langugage.","title":"Query data"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#query-data-using-the-elasticsearchview","text":"The ElasticSearchView URL is available at the address https://nexus-sandbox.io/v1/views/tutorialnexus/$PROJECTLABEL/documents/_search.\nSelect queries # Select 5 ratings sorted by creation date in descending order\nnexus views query-es --data \\\n'{\n     \"size\":5,\n     \"sort\" : [\n       {\n        \"_createdAt\" : {\"order\" : \"desc\"}\n       }\n     ],\n     \"query\": {\n     \t\"terms\" : {\"@type\":[\"https://nexus-sandbox.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Rating\"]}\n     }\n }'\nFull source at GitHub Graph navigation queries # Not possible by default.\n# Relationships handling needs to be made explicit to ElasticSearch through a mapping.\n\nFull source at GitHub","title":"Query data using the ElasticSearchView"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#query-data-using-the-sparqlview","text":"The SparqlView is available at the address https://nexus-sandbox.io/v1/views/tutorialnexus/$PROJECTLABEL/graph/sparql\nSelect queries # Select 5 ratings sorted by creation date in descending order\nnexus views query-sparql --data \\\n'\nPREFIX vocab: <https://nexus-sandbox.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/>\nPREFIX nxv: <https://bluebrain.github.io/nexus/vocabulary/>\n\nSelect ?userId ?moviedId ?rating ?createdAt\n WHERE  {\n\n    ?ratingNode a vocab:Rating.\n    ?ratingNode nxv:createdAt ?createdAt.\n    ?ratingNode vocab:userId  ?userId.\n    ?ratingNode vocab:movieId ?moviedId.\n    ?ratingNode vocab:rating  ?rating.\n}\nORDER BY DESC (?creationDate)\nLIMIT 5'Full source at GitHub Graph navigation queries # Average rating score for movies tagged as funny\nnexus views query-sparql --data \\\n'\nPREFIX vocab: <https://nexus-sandbox.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/>\nPREFIX nxv: <https://bluebrain.github.io/nexus/vocabulary/>\n\nSelect  DISTINCT ?movieId (AVG(?rating) AS ?score)\n WHERE  {\n    # Select movies\n    ?movie a vocab:Movie.\n\n    # Select their movieId value\n    ?movie vocab:movieId ?movieId.\n\n    # Keep movies with 'funny' tags\n    ?tagnode vocab:movieId ?movieId.\n    ?tagnode vocab:tag \"funny\".\n\n    # Keep movies with ratings\n    ?ratingNode vocab:movieId ?movidId.\n    ?ratingNode vocab:rating ?rating.\n\n}\nGROUP BY ?movieId\nLIMIT 5'Full source at GitHub","title":"Query data using the SparqlView"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#share-data","text":"Making a dataset public means granting read permissions to “anonymous” user.\n$ nexus acls make-public\nTo check that the dataset is now public:\nAsk the person next to you to list resources in your project. Or create and select another profile named public-tutorial (following the instructions in the Set up. You should see the that the public-tutorial is selected and its corresponding token column is None.\nOutput Selected profile: tutorial\n+-------------------+----------+-------------------------------------+------------------+\n| Profile           | Selected | URL                                 |       Token      |\n+-------------------+----------+-------------------------------------+------------------+\n| tutorial          |          | https://nexus-sandbox.io/v1         |  Expiry: 2019... |\n| public-tutorial   |   Yes    | https://nexus-sandbox.io/v1         |       None       |\n+-------------------+----------+-------------------------------------+------------------+Full source at GitHub\nResources in your project should be listed with the command even though you are not authenticated.\nCommand nexus resources list --size 5 -o tutorialnexus -p $PROJECTLABELFull source at GitHub","title":"Share data"},{"location":"/docs/tutorial/getting-started/dataset/index.html","text":"","title":"The MovieLens Dataset"},{"location":"/docs/tutorial/getting-started/dataset/index.html#the-movielens-dataset","text":"","title":"The MovieLens Dataset"},{"location":"/docs/tutorial/getting-started/dataset/index.html#overview","text":"The picture below describes the structure of the 4 files contained in the MovieLens dataset:\nOnce you have downloaded and unpacked the archive, you will find 4 CSV files, below is the top 10 lines of each to give you a feel for the data it contains. As you can see the movieId column of each of these files will be instrumental to linking the data together.\n$ head *.csv\n\n==> links.csv <==\nmovieId,imdbId,tmdbId\n1,0114709,862\n2,0113497,8844\n3,0113228,15602\n4,0114885,31357\n5,0113041,11862\n6,0113277,949\n7,0114319,11860\n8,0112302,45325\n9,0114576,9091\n\n==> movies.csv <==\nmovieId,title,genres\n1,Toy Story (1995),Adventure|Animation|Children|Comedy|Fantasy\n2,Jumanji (1995),Adventure|Children|Fantasy\n3,Grumpier Old Men (1995),Comedy|Romance\n4,Waiting to Exhale (1995),Comedy|Drama|Romance\n5,Father of the Bride Part II (1995),Comedy\n6,Heat (1995),Action|Crime|Thriller\n7,Sabrina (1995),Comedy|Romance\n8,Tom and Huck (1995),Adventure|Children\n9,Sudden Death (1995),Action\n\n==> ratings.csv <==\nuserId,movieId,rating,timestamp\n1,1,4.0,964982703\n1,3,4.0,964981247\n1,6,4.0,964982224\n1,47,5.0,964983815\n1,50,5.0,964982931\n1,70,3.0,964982400\n1,101,5.0,964980868\n1,110,4.0,964982176\n1,151,5.0,964984041\n\n==> tags.csv <==\nuserId,movieId,tag,timestamp\n2,60756,funny,1445714994\n2,60756,Highly quotable,1445714996\n2,60756,will ferrell,1445714992\n2,89774,Boxing story,1445715207\n2,89774,MMA,1445715200\n2,89774,Tom Hardy,1445715205\n2,106782,drugs,1445715054\n2,106782,Leonardo DiCaprio,1445715051\n2,106782,Martin Scorsese,1445715056","title":"Overview"},{"location":"/docs/tutorial/knowledge-graph/index.html","text":"","title":"Understanding knowledge graphs"},{"location":"/docs/tutorial/knowledge-graph/index.html#understanding-knowledge-graphs","text":"","title":"Understanding knowledge graphs"},{"location":"/docs/tutorial/knowledge-graph/index.html#overview","text":"How does Google display information card like in the following search ? Well they use the Google Knowledge Graph. Knowledge graphs are now ubiquitous and serves as data integration hub to integrate and connect data of different types, formats and sources.","title":"Overview"},{"location":"/docs/tutorial/knowledge-graph/index.html#what-youll-build","text":"Queries to explore and navigate a knowledge graph using Sparql","title":"What you’ll build"},{"location":"/docs/tutorial/knowledge-graph/index.html#what-youll-learn","text":"An understanding of what is a knowledge graph Understanding RDF and JSON-LD data model","title":"What you’ll learn"},{"location":"/docs/tutorial/knowledge-graph/index.html#what-youll-need","text":"A Python 3.5 or higher with support of Jupyter notebook","title":"What you’ll need"},{"location":"/docs/tutorial/knowledge-graph/thinking-in-graph.html","text":"","title":"Thinking in graph"},{"location":"/docs/tutorial/knowledge-graph/thinking-in-graph.html#thinking-in-graph","text":"","title":"Thinking in graph"},{"location":"/docs/tutorial/knowledge-graph/thinking-in-graph.html#what-is-a-knowledge-graph-","text":"In this section, we will explain what a Knowledge Graph and some of the advantages of using them.","title":"What is a Knowledge Graph ?"},{"location":"/docs/tutorial/knowledge-graph/thinking-in-graph.html#it-is-a-graph-structure","text":"A knowledge graph uses a graph data structure to represent information, it uses the concept of nodes and edges to represent respectively entities and their relations. An entity could be a person, a company, a product. Each entity can have properties that describes it, for example, a person could have a first name, last name, address, birth date and age. These properties are also refered to as the entity’s metadata.\nRelations between entities are first class citizen, consequently, it becomes easy to traverse and discover related entities. Examples of relations could be a person is friend with an other person (john –friend–> Ann) or a person works for a company (Eric –works for–> EPFL).\nFurthermore, a graph data structure makes it easy to merge new data in existing graph.","title":"It is a graph structure"},{"location":"/docs/tutorial/knowledge-graph/thinking-in-graph.html#it-is-semantic","text":"The metadata definition is encoded, alongside the metadata, in an ontology This is a formal description that both a human and a computer can understand and process. The metadata is said to be self descriptive.\nIn the example below, you can see that the entity Bob is a Person (also known as the type of the entity) and he has a property was born on for this the value is 14 July 1990.","title":"It is semantic"},{"location":"/docs/tutorial/knowledge-graph/thinking-in-graph.html#it-is-smart","text":"Since all this information is representd in an ontologies, it enables us to run a tool called an inference engine on the data and derive new information from explicitly asserted data. This inference can make information easier to discover.\nIn the example below, we have Bob, he has parents (using the relation called parent) and we have asserted that his father also has parents. Having define this, we can now define a rule that instructs the inference engine to create new relations grand parent whenever we find the parent of a parent. This enables us to query the graph and directly get Bob’s grand parents without having to navigate through his parents first.","title":"It is smart"},{"location":"/docs/tutorial/knowledge-graph/thinking-in-graph.html#it-is-alive","text":"A graph is a flexible data structure, and an ontology can evolve as new data comes in. As a result, Data can be continually be added to help serve new usecases.\nThe illustration below shows how the initial graph representing Bob can be augmented to capture many other related domains such as:\nBob’s social network (e.g. Friends) People’s tourism destinations (e.g. Eifel Tower) Towns and tourism lamdmarks (e.g. Louvre) Pieces of arts and where they are located (e.g. Mona Lisa)","title":"It is alive"},{"location":"/docs/tutorial/knowledge-graph/understanding-jsonld.html","text":"","title":"Understanding JSON-LD"},{"location":"/docs/tutorial/knowledge-graph/understanding-jsonld.html#understanding-json-ld","text":"","title":"Understanding JSON-LD"},{"location":"/docs/tutorial/knowledge-graph/understanding-jsonld.html#rdf","text":"RDF (Resource Description Framework) is a (extremely simple and truly schemaless) data model where every piece of knowledge is broken down in (subject, predicate and object) called triple.","title":"RDF"},{"location":"/docs/tutorial/knowledge-graph/understanding-jsonld.html#json-ld","text":"JSON-LD (JSON for Linking Data) can be seen in two ways:","title":"JSON-LD"},{"location":"/docs/tutorial/knowledge-graph/understanding-jsonld.html#more-than-a-json-format","text":"A simple json example:\n{\n  [\n  \t {\n  \t\t“name”:”python”,\n  \t\t“loadedFrom”:”java”\n  \t },\n  \t{\n  \t\t“name”:”java”,\n  \t\t“testedFrom”:”java”\n  \t }\n\n  ]\n}\nWhat this data is about ? Programming languages or particular snake type and coffee you would find in the Java Indonesia ? There is clearly a lack of context resulting in an ambiguity. JSON-LD allows to solve the ambiguity problem by enabling a semantic-preserving data exchange. It does that by adding to a json document a @context object where every key is associated with an identifier.\nFor example with the payload below machine and human agents can look up the context to find out which JAVA are this data talking about.\n{\n  [\n  \t {\n  \t    \"@context\":\"https://json-ld.org/contexts/programminglanguage.jsonld\",\n  \t\t“name”:”python”,\n  \t\t“loadedFrom”:”java”\n  \t },\n  \t{\n  \t    \"@context\":\"https://json-ld.org/contexts/programminglanguage.jsonld\",\n  \t\t“name”:”java”,\n  \t\t“testedFrom”:”java”\n  \t }\n\n  ]\n}\nLet go the JSON-LD playground to have a closer look at its data model.","title":"More than a JSON format"},{"location":"/docs/tutorial/knowledge-graph/querying-knowledge-graph.html","text":"","title":"Querying knowledge graph"},{"location":"/docs/tutorial/knowledge-graph/querying-knowledge-graph.html#querying-knowledge-graph","text":"","title":"Querying knowledge graph"},{"location":"/docs/tutorial/knowledge-graph/querying-knowledge-graph.html#overview","text":"This tutorial introduces the basics of SPARQL and shows how to query a Nexus SparqlView.","title":"Overview"},{"location":"/docs/tutorial/knowledge-graph/querying-knowledge-graph.html#what-youll-build","text":"Queries to explore and navigate a knowledge graph using SPARQL and Nexus","title":"What you’ll build"},{"location":"/docs/tutorial/knowledge-graph/querying-knowledge-graph.html#what-youll-learn","text":"Basics of the SPARQL query language How to connect to and query a SparqlView in Nexus","title":"What you’ll learn"},{"location":"/docs/tutorial/knowledge-graph/querying-knowledge-graph.html#what-youll-need","text":"A Python 3.5 or higher with support of Jupyter notebook","title":"What you’ll need"},{"location":"/docs/tutorial/knowledge-graph/querying-knowledge-graph.html#get-the-tutorial-code","text":"This tutorial code is available:\nat Github on Google Colab","title":"Get the tutorial code"},{"location":"/docs/tutorial/linking-data/index.html","text":"","title":"Linking data on the web"},{"location":"/docs/tutorial/linking-data/index.html#linking-data-on-the-web","text":"","title":"Linking data on the web"},{"location":"/docs/tutorial/linking-data/index.html#overview","text":"In this tutorial, we demonstrate how to consume structured data published on the web according to the Linked data principles to extend and enrich a knowledge graph.","title":"Overview"},{"location":"/docs/tutorial/linking-data/index.html#what-youll-build","text":"A simple pipeline to query entities managed within Blue Brain Nexus, connect them with entities available on the web as structured data and extend and enrich their metadata.","title":"What you’ll build"},{"location":"/docs/tutorial/linking-data/index.html#what-youll-learn","text":"An understanding of linked data principles How to query data stored in a Nexus SparqlView. How to query structured data on the web. How to extend the metadata of entities managed within Blue Brain Nexus with external structured data on the web. We target Wikidata as an example. How to update entities within Blue Brain Nexus using the SDK and enrich their metadata","title":"What you’ll learn"},{"location":"/docs/tutorial/linking-data/index.html#what-youll-need","text":"A Python 3.5 or higher environment with support of Jupyter notebook","title":"What you’ll need"},{"location":"/docs/tutorial/linking-data/index.html#get-the-tutorial-code","text":"This tutorial code is available:\nat Github on Google Colab","title":"Get the tutorial code"},{"location":"/docs/tutorial/build-recommender/index.html","text":"","title":"Building a Data Pipeline for a Recommender System"},{"location":"/docs/tutorial/build-recommender/index.html#building-a-data-pipeline-for-a-recommender-system","text":"","title":"Building a Data Pipeline for a Recommender System"},{"location":"/docs/tutorial/build-recommender/index.html#overview","text":"Recommendation engines are among the most well known, widely used and highest-value use cases for applying machine learning. Despite this, while there are many resources available for the basics of training a recommendation model, there are relatively few that explain how to use Nexus to build a data pipeline, actually deploy these models to create a production-level machine learning eco-system for a recommender system.","title":"Overview"},{"location":"/docs/tutorial/build-recommender/index.html#what-youll-build","text":"You will use a Jupyter notebook to build a pipeline to train a recommendation system.","title":"What you’ll build"},{"location":"/docs/tutorial/build-recommender/index.html#what-youll-learn","text":"Set up a Nexus environment. Query the data from Nexus using SPARQL. Prepare the data into a good shape for collaborative filtering. Perform a classical collaborative filtering algorithm - matrix factorization Push the training output to Nexus Recommend movies by querying the output from Nexus","title":"What you’ll learn"},{"location":"/docs/tutorial/build-recommender/index.html#what-youll-need","text":"A Python environment with support of Jupyter notebook","title":"What you’ll need"},{"location":"/docs/tutorial/build-recommender/index.html#get-the-tutorial-code","text":"This tutorial code is available at Github","title":"Get the tutorial code"},{"location":"/docs/tutorial/build-recommender/prepare-data.html","text":"","title":"Prepare data"},{"location":"/docs/tutorial/build-recommender/prepare-data.html#prepare-data","text":"","title":"Prepare data"},{"location":"/docs/tutorial/build-recommender/prepare-data.html#overview","text":"","title":"Overview"},{"location":"/docs/tutorial/build-recommender/prepare-data.html#what-youll-build","text":"","title":"What you’ll build"},{"location":"/docs/tutorial/build-recommender/prepare-data.html#what-youll-learn","text":"","title":"What you’ll learn"},{"location":"/docs/tutorial/build-recommender/prepare-data.html#what-youll-need","text":"","title":"What you’ll need"},{"location":"/docs/tutorial/build-recommender/prepare-data.html#get-the-tutorial-code","text":"","title":"Get the tutorial code"},{"location":"/docs/tutorial/knowledge-graph/little-semantic.html","text":"","title":"Little semantic goes a long way"},{"location":"/docs/tutorial/knowledge-graph/little-semantic.html#little-semantic-goes-a-long-way","text":"","title":"Little semantic goes a long way"},{"location":"/docs/tutorial/knowledge-graph/little-semantic.html#overview","text":"","title":"Overview"},{"location":"/docs/tutorial/build-recommender/train-recommender-model.html","text":"","title":"Build Model"},{"location":"/docs/tutorial/build-recommender/train-recommender-model.html#build-model","text":"","title":"Build Model"},{"location":"/docs/tutorial/build-recommender/train-recommender-model.html#overview","text":"","title":"Overview"},{"location":"/docs/tutorial/build-recommender/train-recommender-model.html#what-youll-build","text":"","title":"What you’ll build"},{"location":"/docs/tutorial/build-recommender/train-recommender-model.html#what-youll-learn","text":"","title":"What you’ll learn"},{"location":"/docs/tutorial/build-recommender/train-recommender-model.html#what-youll-need","text":"","title":"What you’ll need"},{"location":"/docs/tutorial/build-recommender/train-recommender-model.html#get-the-tutorial-code","text":"","title":"Get the tutorial code"},{"location":"/docs/tutorial/nexus-nutshell/index.html","text":"","title":"Nexus in a nutshell"},{"location":"/docs/tutorial/nexus-nutshell/index.html#nexus-in-a-nutshell","text":"","title":"Nexus in a nutshell"},{"location":"/docs/tutorial/nexus-nutshell/index.html#overview","text":"","title":"Overview"},{"location":"/docs/tutorial/nexus-nutshell/index.html#what-youll-build","text":"","title":"What you’ll build"},{"location":"/docs/tutorial/nexus-nutshell/index.html#what-youll-learn","text":"","title":"What you’ll learn"},{"location":"/docs/tutorial/nexus-nutshell/index.html#what-youll-need","text":"","title":"What you’ll need"},{"location":"/docs/tutorial/nexus-nutshell/index.html#get-the-tutorial-code","text":"","title":"Get the tutorial code"},{"location":"/docs/tutorial/shacl-in-a-nutshell/index.html","text":"","title":"Data Quality with SHACL"},{"location":"/docs/tutorial/shacl-in-a-nutshell/index.html#data-quality-with-shacl","text":"","title":"Data Quality with SHACL"},{"location":"/docs/tutorial/shacl-in-a-nutshell/index.html#what-youll-build","text":"A cleaned and improved version of the movielens dataset","title":"What you’ll build"},{"location":"/docs/tutorial/shacl-in-a-nutshell/index.html#what-youll-learn","text":"Challenges for validating data How to define and enforce constraints on a knowledge graph using the W3C SHACL specification. Advantages of using human readable and machine actionable declarative language as a medium for constraining data","title":"What you’ll learn"},{"location":"/docs/tutorial/shacl-in-a-nutshell/index.html#what-youll-need","text":"nexus-sdk","title":"What you’ll need"},{"location":"/docs/tutorial/shacl-in-a-nutshell/index.html#get-the-tutorial-code","text":"","title":"Get the tutorial code"},{"location":"/docs/tutorial/shacl-in-a-nutshell/data-quality-motivation.html","text":"","title":"Motivation"},{"location":"/docs/tutorial/shacl-in-a-nutshell/data-quality-motivation.html#motivation","text":"We’ve loaded entities (movies, ratings, tags) from the small version of the MovieLens dataset during the Quick start tutorial. Let now have closer look at the different properties of the loaded entities.\nThe following payloads show respectively the shape of a movie entity from the MovieLens dataset and as retrieved from Nexus.\nmovieId,title,genres\n1,Toy Story (1995),Adventure|Animation|Children|Comedy|Fantasy\n{\n    \"@context\": [\n        {\n            \"@base\": \"$NEXUS-URL/resources/amld2019/$USERNAME/_/\",\n            \"@vocab\": \"$NEXUS-URL/vocabs/amld2019/$USERNAME/\"\n        },\n        \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n    ],\n    \"@id\": \"Movie_1\",\n    \"@type\": \"Movie\",\n    \"genres\": \"Adventure|Animation|Children|Comedy|Fantasy\",\n    \"movieId\": 1,\n    \"title\": \"Toy Story (1995)\"\n    \"_rev\": 1,\n    \"_deprecated\": false\n}\nAs we can see, there is a year value (1995) as part of the movie title (Toy Story (1995)). What’s the meaing of this year ? A release year? If yes in which country? With the shape above, movies clearly can’t be easily filtered by release date as that information is not explicitly asserted. Freshness is known to play an important role in search and recommendation relevance for users so it might be beneficial to have release date as separate information.\nAlso the movie genres value is not trivial to use because of the | character as genre value delimiter. Filtering movies by genre is also tricky in this case.\nHow can the movie data be managed in a knowledge graph within Nexus with the guarantee that:\nthe release year is explicitly asserted as a first class citizen attribute of a movie entity rather than being hidden in the title ? the genres are splitted ? No movie payload gets in the knowledge graph unless it conforms to some quality criteria ?\nThat’s where the W3C Shape Constraint Language (SHACL) comes into play.","title":"Motivation"},{"location":"/docs/tutorial/shacl-in-a-nutshell/shacl-overview.html","text":"","title":"What is SHACL ?"},{"location":"/docs/tutorial/shacl-in-a-nutshell/shacl-overview.html#what-is-shacl-","text":"","title":"What is SHACL ?"},{"location":"/docs/tutorial/shacl-in-a-nutshell/shacl-overview.html#overview","text":"SHACL is a powerful language allowing to define a wide range of constraints on graph data and enforce them. It is for RDF based knowledge graphs what Json Schema is for json data.\nBecause of the graph nature of the data they apply to, SHACL constraints are relative to graph nodes, their relations and attributes rather than a whole json tree and this is a fundamental difference. A json document has a root element from which the validation process can start while defining the root node for a graph is at best tricky and certainly an ambiguous notion.\nIn the following ‘Movie JSON Tree’ representation below, there is a root element (“Root”) for all properties within the movie json document and a json schema validation engine will navigate the tree from the root down to some elements.\nThe graph figure represents the same data within a knowledge graph and there is no default and obvious node to start with as many paths can lead to the movie entity. For example, all the following three constraints apply to movies even though the paths to get to the movie vary.\nmovie entities are of type Movie (value of the property @type) the subject of the property imdbId should be of type Movie the subject of the property genres should be of type Movie\nmovie_json_tree movie_graph !\nSo it is important for any validation specification to enable the definition of one or many starting points and one or many paths to follow to navigate down to the data elements to check. In json the start point is the root of the json document and the data is navigated as a tree and there is no user control on that process. SHACL on the other hand allows to specify where to start in a graph and from there which paths to follow.\nIn Blue Brain Nexus, validation using SHACL involves two types of resources:\nA schema: defining in a set of shapes the constraints the data should conform to. A schema can define one or more shapes. The data to be validated against the shapes of a schema.","title":"Overview"},{"location":"/docs/tutorial/shacl-in-a-nutshell/shacl-overview.html#shacl-validation-flow","text":"Here is an example of a simple SHACL schema.\n{\n  \"context\":\"https://bluebrain.github.io/nexus/contexts/shacl-20170720.json\",\n  \"@id\":\"schemaId_uri\",\n  \"@type\" : \"nxv:Schema\",\n  \"shapes\": [\n    {\n        \"@id\":\"MovieShape\", \"targetClass\" : \":Movie\",\n        \"property\":[\n              {\"path\":\"movieId\", \"datatype\":\"xsd:string\"},\n              {\"path\":\"title\",   \"datatype\":\"xsd:string\"},\n              {\"path\":\"genres\",  \"datatype\":\"xsd:string\"}\n        ]\n    }\n  ],\n}\nGiven a shape and a data as inputs, a SHACL processor starts by selecting what part of the data to focus on and then validate whether that part conforms to the shape graph or not.","title":"SHACL Validation Flow"},{"location":"/docs/tutorial/shacl-in-a-nutshell/shacl-overview.html#data-selection","text":"A shape can specify the nodes it will validate within a data graph by using one or many target declarations. A shape can target:\na specific node nodes of a given type nodes that are subject of a given property nodes that are object of a given property","title":"Data selection"},{"location":"/docs/tutorial/shacl-in-a-nutshell/shacl-overview.html#data-validation","text":"When focused nodes to validate against a shape are identified then the validation can occurs. A SHACL processor will check if a node conform to the constraints defined in a shape that selects it. A validation report is produced at the end.\nShwo example.\nThe following shape assesses that, to be valid, each movie data must satisfy the following constraints:\nit must have exactly one title which must be of type string it has zero, one or more genre. If it has a genre associated then the value must be of type string it has at most one (zero or one) release date\n{\n  \"context\":\"http://example.org/shaclcontext\",\n  \"@id\" : \"ex:PersonShape\",\n  \"targetClass\" : \"schema:Person\",\n  \"property\":[\n      {\"path\":\"schema:name\",      \"datatype\":\"xsd:string\", \"maxCount\":1, \"minCount\":1},\n      {\"path\":\"schema:jobTitle\",  \"datatype\":\"xsd:string\"},\n      {\"path\":\"schema:birthDate\", \"datatype\":\"xsd:date\",   \"maxCount\":1}\n  ]\n}\nThe term shape will be used from now on to refer to the W3C SHACL shapes.","title":"Data validation"},{"location":"/docs/tutorial/shacl-in-a-nutshell/shacl-overview.html#schema-vs-shape","text":"The W3C SHACL recommendation only defines SHACL shapes as well as ways to logically related them using boolean operators (AND, OR, NOT, XONE). But shapes are almost never developed alone in production settings. It is useful to be able to:\nreuse an already defined shape for modularity purpose: an import mechanism telling a SHACL validator where to lookup and fetch an already existing shape is needed. This is equivalent to the notion of class import in programming language like JAVA. group and identify a collection of shapes in order to document and manage them (by mean of CRUD operations: Create, Read, Update, Deprecate/DELETE). This can be seen as an (not perfect) equivalent of the notion of package in programming languages like JAVA.\nIn Neuroshapes a schema is an object of type nxv:Schema and enables the above capabilities by using the following json syntax:\n{\n  \"context\":\"http://example.org/shaclcontext\",\n  \"@id\" : \"ex:SchemaID\",\n  \"@type\":\"nxv:Schema\",\n  \"imports\":\"ex:AnImportedShape\",\n  \"shapes\" : [\n      {\"@id\" : \"ex:AShape\",      \"@type\":\"sh:Shape\"},\n      {\"@id\" : \"ex:AnOtherShape\",\"@type\":\"sh:Shape\"}\n  ]\n}\nThe table below details main schema property. The complete list of mandatory and recommended schema properties can be found here.\nkey Description URI @id The identifier of the schema @type The type of the schema. By default it is nxv:Schema http://www.w3.org/1999/02/22-rdf-syntax-ns#Type imports The resources (schema, ontologies,…) to import and to bring in the scope of the current schema http://www.w3.org/2002/07/owl#imports shapes The collection of SHACL shapes defined within the current schema. http://www.w3.org/2000/01/rdf-schema#isDefinedBy\nTo illustrate the usage of schemas, let add an affiliation information in the professor instance above. The professor Jane Doe is affiliated to EPFL which is an organization (identified by grid.5333.6 in the Global Research Identifier Database - GRID).\n{\n  \"@context\": \"http://schema.org/\",\n  \"@type\": \"schema:Person\",\n  \"@id\":\"https://orcid.org/0000-0002-3843-3472\",\n  \"name\": \"Jane Doe\",\n  \"jobTitle\": \"Professor\",\n  \"birthDate\": \"1984-06-01\",\n  \"affiliation\": {\n    \"@id\":\"http://www.grid.ac/institutes/grid.5333.6\",\n    \"@type\":\"schema:Organization\",\n    \"name\":\"EPFL\"\n  }\n}\nThe affiliation must satisfy the following constraints:\nit must be of type schema:Organization (not a Person nor a Process) it must have exactly one human readable name\nThe following json payload defines a ex:PersonShape (lines 6 to 13) and a ex:OrganizationShape (lines 14 to 17) in a ex:PersonSchema and adds the constraints about affiliation in line 12:\nto enforce schema:Organization as affiliation’s type using the property class: the value of class must be either a URI or a CURIE. to enforce the ex:OrganizationShape through the node property: every value of a person’s affiliation must conform to the ex:OrganizationShape which enforces a name property.\n{\n  \"context\":\"http://example.org/shaclcontext\",\n  \"@id\" : \"ex:PersonSchema\",\n  \"@type\":\"nxv:Schema\",\n  \"shapes\" : [{\n    \"@id\" : \"ex:PersonShape\",\n    \"targetClass\" : \"schema:Person\",\n    \"property\":[\n      {\"path\":\"schema:name\",       \"datatype\":\"xsd:string\", \"maxCount\":1, \"minCount\":1},\n      {\"path\":\"schema:jobTitle\",   \"datatype\":\"xsd:string\"},\n      {\"path\":\"schema:birthDate\",  \"datatype\":\"xsd:date\",   \"maxCount\":1},\n      {\"path\":\"schema:affiliation\",\"class\":\"schema:Organization\",\"node\":\"ex:OrganizationShape\"}\n    ]},{\n    \"@id\" : \"ex:OrganizationShape\",\n    \"property\":[\n      {\"path\":\"schema:name\",\"datatype\":\"xsd:string\",\"maxCount\":1, \"minCount\":1}\n    ]}\n  ]\n}\nIt is possible to organize the ex:PersonShape and the ex:OrganizationShape differently by defining the latter in a different shape and import it within the ex:PersonSchema using the imports property.\n{\n  \"context\":\"http://example.org/shaclcontext\",\n  \"@id\" : \"ex:PersonSchema\",\n  \"@type\":\"nxv:Schema\",\n  \"imports\":\"ex:OrganizationShape\",\n  \"shapes\" : [{\n    \"@id\" : \"ex:PersonShape\",\n    \"targetClass\" : \"schema:Person\",\n    \"property\":[\n      {\"path\":\"schema:name\",       \"datatype\":\"xsd:string\", \"maxCount\":1, \"minCount\":1},\n      {\"path\":\"schema:jobTitle\",   \"datatype\":\"xsd:string\"},\n      {\"path\":\"schema:birthDate\",  \"datatype\":\"xsd:date\",   \"maxCount\":1},\n      {\"path\":\"schema:affiliation\",\"class\":\"schema:Organization\",\"node\":\"ex:OrganizationShape\"}\n    ]}\n  ]\n}\nPractically speaking a shape is a schema. After all, schema means shape in greek. The difference between the two in Neuroshapes has more to do about syntax. The schema syntax allows to defines multiple shapes and relies on the the owl:imports mechanism to enable modular development of shapes. Ontology engineers will recognize that a schema as defined in this document adopts an owl ontology syntax. Indeed the domain of the owl:imports property is of type owl:Ontology.\nFrom this point, a Neuroshapes schema will be indifferently referred to as a SHACL schema or just schema.","title":"Schema vs Shape"},{"location":"/docs/tutorial/shacl-in-a-nutshell/shacl-overview.html#shape-vs-type","text":"","title":"Shape vs type"},{"location":"/docs/index.html","text":"","title":"Blue Brain Nexus"},{"location":"/docs/index.html#blue-brain-nexus","text":"The BlueBrain Nexus is a provenance based, semantic enabled data management platform enabling the definition of an arbitrary domain of application for which there is a need to create and manage entities as well as their relations (e.g. provenance). For example, the domain of application managed by the Nexus platform deployed at Blue Brain is to digitally reconstruct and simulate the brain.\nAt the heart of the BlueBrain Nexus platform lies the Knowledge Graph; at BlueBrain, it will allow scientists to:\nRegister and manage neuroscience relevant entity types through schemas that can reuse or extend community defined schemas (e.g. schema.org, bioschema.org, W3C-PROV) and ontologies (e.g. brain parcellation schemes, cell types, taxonomy). Submit data to the platform and describe their provenance using the W3C PROV model. Provenance is about how data or things are generated (e.g. protocols, methods used…), when (e.g. timeline) and by whom (e.g. people, software…). Provenance supports the data reliability and quality assessment as well as enables workflow reproducibility. Platform users can submit data either through web forms or programmatic interfaces. Search, discover, reuse and derive high-quality neuroscience data generated within and outside the platform for the purpose of driving their own scientific endeavours. Data can be examined by species, contributing laboratory, methodology, brain region, and data type, thereby allowing functionality not currently available elsewhere. The data are predominantly organized into atlases (e.g. Allen CCF, Waxholm) and linked to the KnowledgeSpace – a collaborative community-based encyclopedia linking brain research concepts to the latest data, models and literature.\nIt is to be noted that many other scientific fields (Astronomy, Agriculture, Bioinformatics, Pharmaceutical Industry, …) are in need of such a technology. Consequently, BlueBrain Nexus core technology is being developed to be agnostic of the domain it might be applied to.","title":"Blue Brain Nexus"},{"location":"/docs/index.html#nexus-components","text":"The Nexus platform is made up of a collection of services and web applications that work together to manage data stored within the system. The services and web applications are powered by a collection of libraries and tools built specifically to address the needs of the platform. Underneath it all there are popular open source technologies that we all know and love.","title":"Nexus Components"},{"location":"/docs/index.html#nexus-services","text":"","title":"Nexus Services"},{"location":"/docs/index.html#nexus-knowledgegraph","text":"This service is the heart of the BlueBrain Nexus platform. It allows users to define their domain, populate the knowledge graph with data, attach files to data. It also provides semantic search facilities to discover similar and relevant data in the platform.\nSource Code | Documentation","title":"Nexus KnowledgeGraph"},{"location":"/docs/index.html#nexus-admin","text":"This service manages the platform wide scopes for data and their configuration (i.e.: the API mapping).\nSource Code | Documentation","title":"Nexus Admin"},{"location":"/docs/index.html#nexus-iam","text":"This service manages the access to data within the platform. It makes use of configurable downstream OpenID Connect compliant identity providers to authenticate clients and manages the access controls for the entire platform.\nSource Code | Documentation","title":"Nexus IAM"},{"location":"/docs/index.html#nexus-web-applications","text":"","title":"Nexus Web Applications"},{"location":"/docs/index.html#nexus-search","text":"This web application allows users of the nexus platform to search in the knowledge graph. Beyond searching and inspecting data stored in the platform, its purpose is to enable the discovery of similar and related data.\nSource Code","title":"Nexus Search"},{"location":"/docs/index.html#nexus-explorer","text":"This web application allows users to browse the data within the system.\nSource Code","title":"Nexus Explorer"},{"location":"/docs/index.html#nexus-docs","text":"Generated documentation for the platform (this website).\nSource Code | Website","title":"Nexus Docs"},{"location":"/docs/index.html#domains-schemas-vocabularies-","text":"","title":"Domains (Schemas, Vocabularies)"},{"location":"/docs/index.html#nexus-core-schemas","text":"","title":"Nexus Core Schemas"},{"location":"/docs/index.html#nexus-schemaorg","text":"SHACL version of a subset of schemas defined by schema.org that are commonly used in Blue Brain Nexus.\nSource Code","title":"nexus-schemaorg"},{"location":"/docs/index.html#nexus-prov","text":"Data management oriented SHACL version of W3C PROV-O.\nSource Code","title":"nexus-prov"},{"location":"/docs/index.html#nexus-domain-specific-components","text":"","title":"Nexus domain specific components"},{"location":"/docs/index.html#nexus-bbp-data-models","text":"Data models that Blue Brain has developed in order to facilitate the integration of specific neuroscience data.\nSource Code","title":"Nexus BBP Data models"},{"location":"/docs/index.html#neuroshapes","text":"A community effort to develop open SHACL schemas for FAIR (Findable, Accessible, Interoperable, Reproducible) neuroscience data.\nSource Code","title":"Neuroshapes"},{"location":"/docs/index.html#nexus-tools","text":"","title":"Nexus tools"},{"location":"/docs/index.html#nexus-cli","text":"A command line interface (CLI) to operate basic operation on a Nexus deployment.\nSource Code","title":"Nexus CLI"},{"location":"/docs/index.html#nexus-python-sdk","text":"The Human Brain Project has developed an open source library called Pyxus to facilitate the use of Nexus with Python. This library will help Python users to integrate their tools with the Blue Brain Nexus platform. Initially, it will mainly enable the interface with the Knowledge Graph service.\nSource Code","title":"Nexus Python SDK"},{"location":"/docs/getting-started/index.html","text":"","title":"Getting Started Guide"},{"location":"/docs/getting-started/index.html#getting-started-guide","text":"Blue Brain Nexus is an open source, data and knowledge management platform designed to enable open data-driven science by enabling the FAIR principles, tracking data provenance and supporting data longevity in a secure and scalable manner.\nA key component of the platform is the Knowledge Graph, which acts as a data repository and metadata catalog. The data ingested by Knowledge Graph is structured in a semantically meaningful way and linked to other data through provenance. This allow users to assess the quality of data, and consequently enables them to build trust.","title":"Getting Started Guide"},{"location":"/docs/getting-started/running-nexus/index.html","text":"","title":"Running Nexus"},{"location":"/docs/getting-started/running-nexus/index.html#running-nexus","text":"TBC.","title":"Running Nexus"},{"location":"/docs/getting-started/running-nexus/index.html#using-the-public-sandbox","text":"TBC.","title":"Using the public sandbox"},{"location":"/docs/getting-started/running-nexus/docker.html","text":"","title":"Run Nexus locally with Docker"},{"location":"/docs/getting-started/running-nexus/docker.html#run-nexus-locally-with-docker","text":"","title":"Run Nexus locally with Docker"},{"location":"/docs/getting-started/running-nexus/docker.html#requirements","text":"","title":"Requirements"},{"location":"/docs/getting-started/running-nexus/docker.html#docker","text":"Regardless of your OS, make sure to run a recent version of Docker (community edition). This was tested with versions 18.03.1 and above. You might need to get installation packages directly from the official Docker website if the one provided by your system package manager is outdated.\nCommand docker --version\n Example $ docker version\nDocker version 18.03.1-ce, build 9ee9f40","title":"Docker"},{"location":"/docs/getting-started/running-nexus/docker.html#memory-and-cpu-limits","text":"On macOS and Windows, Docker effectively runs containers inside a VM created by the system hypervisor. Nexus requires at least 2 CPUs and 8 GiB of memory in total. You can increase the limits in Docker settings in the menu Preferences > Advanced.","title":"Memory and CPU limits"},{"location":"/docs/getting-started/running-nexus/docker.html#initialize-docker-swarm","text":"If you’ve never used Docker Swarm or Docker Stacks before, you first need to create a swarm cluster on your local machine:\nCommand docker swarm init\n Example $ docker swarm init\nSwarm initialized: current node (***) is now a manager.\n \nTo add a worker to this swarm, run the following command:\n \ndocker swarm join --token {token} 128.178.97.243:2377\n \nTo add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.","title":"Initialize Docker Swarm"},{"location":"/docs/getting-started/running-nexus/docker.html#deployment","text":"Download the Docker Compose template and the Nginx router configuration into a directory of your choice. For instance ~/docker/nexus/.","title":"Deployment"},{"location":"/docs/getting-started/running-nexus/docker.html#starting-nexus","text":"Create a nexus deployment with Docker Stacks:\nCommand docker stack deploy nexus --compose-file=docker-compose.yaml\n Example $ cd ~/docker/nexus\n$ docker stack deploy nexus --compose-file=docker-compose.yaml\nCreating network nexus_default\nCreating config nexus_nginx\nCreating service nexus_iam\nCreating service nexus_admin\nCreating service nexus_elasticsearch\nCreating service nexus_cassandra\nCreating service nexus_kafka\nCreating service nexus_blazegraph\nCreating service nexus_router\nCreating service nexus_kg\nWait about one minute and you should be able to access Nexus locally, on the port 80:\nCommand curl http://localhost\n Example $ curl http://localhost\n{\"name\":\"kg\",\"version\":\"0.10.11\"}\nTo list running services or access logs, please refer to the documentation.","title":"Starting Nexus"},{"location":"/docs/getting-started/running-nexus/docker.html#stopping-nexus","text":"You can stop and delete the entire deployment with:\nCommand docker stack rm nexus\n Example $ docker stack rm nexus\nRemoving service nexus_admin\nRemoving service nexus_blazegraph\nRemoving service nexus_cassandra\nRemoving service nexus_elasticsearch\nRemoving service nexus_iam\nRemoving service nexus_kafka\nRemoving service nexus_kg\nRemoving service nexus_router\nRemoving config nexus_nginx\nRemoving network nexus_default\nNote As no data is persisted outside the containers, everyting will be lost once you remove the Nexus deployment. If you’d like help with creating persistent volumes, feel free to contact us on our Gitter channel.","title":"Stopping Nexus"},{"location":"/docs/getting-started/running-nexus/minikube.html","text":"","title":"Run Nexus locally with Minikube"},{"location":"/docs/getting-started/running-nexus/minikube.html#run-nexus-locally-with-minikube","text":"Minikube is a tool that makes it easy to run Kubernetes locally. Minikube runs a single-node Kubernetes cluster inside a VM on your laptop for users looking to try out Kubernetes or develop with it day-to-day.\nNote This section makes use of static assets hosted on this website; to remove the clutter please export the base of the documentation to $MINI env var: export MINI=\"https://bluebrain.github.io/nexus/docs/getting-started/running-nexus/minikube\"\nNote This page presents the necessary commands to deploy Nexus with Minikube but also examples the show the expected output. Some of the examples on this page make use of curl (https://curl.haxx.se/) and jq (https://stedolan.github.io/jq/) for formatting the json output when interacting with the services. Please install these command line tools if you’d like to run the commands in the examples. On macOS you can run: brew install curl jq","title":"Run Nexus locally with Minikube"},{"location":"/docs/getting-started/running-nexus/minikube.html#install-minikube","text":"Follow the installation instructions posted on the Minikube project page.","title":"Install Minikube"},{"location":"/docs/getting-started/running-nexus/minikube.html#minikube-install-instructions-for-macos","text":"An example for installing and running Minikube on macOS using Hyperkit after installing Docker for Mac:\nbrew install kubectl\nbrew cask install minikube\ncurl -Lo docker-machine-driver-hyperkit https://storage.googleapis.com/minikube/releases/latest/docker-machine-driver-hyperkit \\\n    && chmod +x docker-machine-driver-hyperkit \\\n    && sudo cp docker-machine-driver-hyperkit /usr/local/bin/ \\\n    && rm docker-machine-driver-hyperkit \\\n    && sudo chown root:wheel /usr/local/bin/docker-machine-driver-hyperkit \\\n    && sudo chmod u+s /usr/local/bin/docker-machine-driver-hyperkit\nTo start Minikube run (notice the cpu and memory flags, the setup requires a minimum of --cpus=2 --memory=8196):\nminikube start --cpus 6 --memory 10240 --vm-driver=hyperkit\nIf the installation is successful you can run the following command to open the Kubernetes Dashboard:\nminikube dashboard\nTo stop Minikube run:\nminikube stop\nNote After stopping minikube the vm still exists on the system; starting minikube again will preserve the deployed services. To permanently remove minikube vm run: minikube delete","title":"Minikube install instructions for macOS"},{"location":"/docs/getting-started/running-nexus/minikube.html#enable-the-ingress-addon","text":"Minikube comes with a collection of addons like the Kubernetes Dashboard but not all are enabled by default. An important one is the ingress addon which enables routing http traffic from the host into the cluster.\nTo enable the ingress addon run:\nCommand minikube addons enable ingress\n Example $ minikube addons enable ingress\ningress was successfully enabled\n$\nTo get the external IP of the cluster (to be used later in accessing services) run:\nCommand minikube addons open ingress --url | awk -F / '{print $3}' | awk -F : '{print $1}'\n Example $ minikube addons open ingress --url | awk -F / '{print $3}' | awk -F : '{print $1}'\n192.168.64.3\n$","title":"Enable the ingress addon"},{"location":"/docs/getting-started/running-nexus/minikube.html#setup-a-separate-namespace","text":"Kubernetes namespaces are logical groupings of resources which allow segregating various deployments in “virtual clusters”.\nThe default installation of Minikube creates three namespaces: kube-system, kube-public and default. This example uses a separate namespace to group Nexus specific resources.\nGet the list of available namespaces:\nCommand kubectl get namespaces\n Example $ kubectl get namespaces\nNAME          STATUS    AGE\ndefault       Active    1h\nkube-public   Active    1h\nkube-system   Active    1h\n$\nCreate the nexus namespace:\nCommand kubectl apply -f $MINI/namespace.yaml\n Example $ kubectl apply -f $MINI/namespace.yaml\nnamespace/nexus created\n$ kubectl get namespaces\nNAME          STATUS    AGE\ndefault       Active    1h\nkube-public   Active    1h\nkube-system   Active    1h\nnexus         Active    1m\n$\nDefault the kubectl to the nexus namespace:\nCommand kubectl config set-context minikube --namespace=nexus\n Example $ kubectl config set-context minikube --namespace=nexus\nContext \"minikube\" modified.\n$\nNote Every time Minikube is stopped and started again, the context and its configuration is lost. Remember to run the following commands every time you start minikube: kubectl config use-context minikube && kubectl config set-context minikube --namespace=nexus","title":"Setup a separate namespace"},{"location":"/docs/getting-started/running-nexus/minikube.html#deploy-dependent-services","text":"Nexus uses numerous off the shelf services that need to be set-up as a prerequisite. Run the following command to save the IP address of the minikube cluster in an environment variable:\nCommand export NEXUS=$(minikube addons open ingress --url | awk -F / '{print $3}' | awk -F : '{print $1}')\n Example $ export NEXUS=$(minikube addons open ingress --url | awk -F / '{print $3}' | awk -F : '{print $1}')\n$ echo $NEXUS\n192.168.64.3\n$","title":"Deploy dependent services"},{"location":"/docs/getting-started/running-nexus/minikube.html#deploy-cassandra","text":"Command kubectl apply -f $MINI/cassandra.yaml && \\\n  kubectl wait pod cassandra-0 --for condition=ready --timeout=180s\n Example $ kubectl apply -f $MINI/cassandra.yaml\nservice/cassandra created\nstatefulset.apps/cassandra created\n$ kubectl exec -it cassandra-0 -- nodetool status\nDatacenter: datacenter1\n=======================\nStatus=Up/Down\n|/ State=Normal/Leaving/Joining/Moving\n--  Address     Load       Tokens       Owns (effective)  Host ID                               Rack\nUN  172.17.0.4  103.71 KiB  256          100.0%            80c0bdfa-1f5e-41aa-8a7e-f0dea7fe7ef0  rack1\n$","title":"Deploy Cassandra"},{"location":"/docs/getting-started/running-nexus/minikube.html#deploy-elasticsearch","text":"Command kubectl apply -f $MINI/elasticsearch.yaml && \\\n  kubectl wait pod elasticsearch-0 --for condition=ready --timeout=180s\n Example $ kubectl apply -f $MINI/elasticsearch.yaml\nservice/elasticsearch created\nservice/elasticsearch-discovery created\nstatefulset.apps/elasticsearch created\n$ kubectl wait pod elasticsearch-0 --for condition=ready --timeout=60s\npod/elasticsearch-0 condition met\n$ curl \"http://$NEXUS/elasticsearch\"\n{\n  \"name\" : \"elasticsearch-0\",\n  \"cluster_name\" : \"nexus-cluster\",\n  \"cluster_uuid\" : \"pvu_3bdoR0az4_9qIw0wlg\",\n  \"version\" : {\n\"number\" : \"6.3.1\",\n\"build_flavor\" : \"default\",\n\"build_type\" : \"tar\",\n\"build_hash\" : \"eb782d0\",\n\"build_date\" : \"2018-06-29T21:59:26.107521Z\",\n\"build_snapshot\" : false,\n\"lucene_version\" : \"7.3.1\",\n\"minimum_wire_compatibility_version\" : \"5.6.0\",\n\"minimum_index_compatibility_version\" : \"5.0.0\"\n  },\n  \"tagline\" : \"You Know, for Search\"\n}\n$","title":"Deploy ElasticSearch"},{"location":"/docs/getting-started/running-nexus/minikube.html#deploy-blazegraph","text":"Command kubectl apply -f $MINI/blazegraph.yaml && \\\n  kubectl wait pod blazegraph-0 --for condition=ready --timeout=180s\n Example $ kubectl apply -f $MINI/blazegraph.yaml\nservice/blazegraph created\nstatefulset.apps/blazegraph created\npersistentvolumeclaim/storage-blazegraph created\ningress.extensions/blazegraph created\n$ kubectl wait pod blazegraph-0 --for condition=ready --timeout=180s\npod/blazegraph-0 condition met\n$ curl -s -H\"Accept: application/json\" \"http://$NEXUS/blazegraph/namespace?describe-each-named-graph=false\" | head -4\n  {\n\"head\" : {\n  \"vars\" : [ \"subject\", \"predicate\", \"object\", \"context\" ]\n},\n$","title":"Deploy BlazeGraph"},{"location":"/docs/getting-started/running-nexus/minikube.html#deploy-kafka","text":"Command kubectl apply -f $MINI/zookeeper.yaml && \\\n  kubectl wait pod zookeeper-0 --for condition=ready --timeout=180s && \\\n  kubectl apply -f $MINI/kafka.yaml && \\\n  kubectl wait pod kafka-0 --for condition=ready --timeout=180s\n Example $ kubectl apply -f $MINI/zookeeper.yaml && \\\n  kubectl wait pod zookeeper-0 --for condition=ready --timeout=180s && \\\n  kubectl apply -f $MINI/kafka.yaml && \\\n  kubectl wait pod kafka-0 --for condition=ready --timeout=180s\nservice/zookeeper created\nstatefulset.apps/zookeeper created\npod/zookeeper-0 condition met\nservice/kafka created\nstatefulset.apps/kafka created\npod/kafka-0 condition met\n$","title":"Deploy Kafka"},{"location":"/docs/getting-started/running-nexus/minikube.html#deploy-nexus-services","text":"Before configuring the services a configuration map must first be created that keeps track of the “public” ip address of the minikube cluster. The following command will replace the {NEXUS} token in the config.yaml file with the value stored in the $NEXUS variable set above.\nCommand curl -s $MINI/config.yaml | sed \"s/{NEXUS}/$NEXUS/g\" | kubectl apply -f -\n Example $ curl -s $MINI/config.yaml | sed \"s/{NEXUS}/$NEXUS/g\" | kubectl apply -f -\nconfigmap/config created\n$ kubectl get configmap/config -o yaml | grep public.ip:\n  public.ip: 192.168.64.4\n$","title":"Deploy Nexus Services"},{"location":"/docs/getting-started/running-nexus/minikube.html#deploy-iam","text":"IAM is the service that manages identities and tokens via downstream OIDC providers and manages the permissions to arbitrary resources in the system.\nCommand kubectl apply -f $MINI/iam.yaml && \\\n  kubectl wait pod iam-0 --for condition=ready --timeout=180s\n Example $ kubectl apply -f $MINI/iam.yaml\nservice/iam created\nservice/iam-hd created\nstatefulset.apps/iam created\ningress.extensions/iam created\ningress.extensions/iam-direct created\n$ kubectl wait pod iam-0 --for condition=ready --timeout=180s\npod/iam-0 condition met\n$ curl -s \"http://$NEXUS/iam\" | jq\n{\n  \"name\": \"iam\",\n  \"version\": \"0.10.21\",\n  \"_links\": [\n    {\n      \"rel\": \"api\",\n      \"href\": \"http://192.168.64.6/v1/acls\"\n    }\n  ]\n}\n$ curl -s \"http://$NEXUS/v1/acls/\" | jq\n{\n  \"@context\": \"http://192.168.64.6/v1/contexts/nexus/core/iam/v0.1.0\",\n  \"acl\": [\n    {\n      \"path\": \"/\",\n      \"identity\": {\n        \"@id\": \"http://192.168.64.6/v1/anonymous\",\n        \"@type\": \"Anonymous\"\n      },\n      \"permissions\": [\n        \"read\",\n        \"own\"\n      ]\n    }\n  ]\n}\n$","title":"Deploy IAM"},{"location":"/docs/getting-started/running-nexus/minikube.html#deploy-admin","text":"Admin is the service that manages accounts (orgs and users) and projects their configuration.\nCommand kubectl apply -f $MINI/admin.yaml && \\\n  kubectl wait pod admin-0 --for condition=ready --timeout=180s\n Example $ kubectl apply -f $MINI/admin.yaml\nservice/admin created\nservice/admin-hd created\nstatefulset.apps/admin created\ningress.extensions/admin created\ningress.extensions/admin-direct created\n$ kubectl wait pod admin-0 --for condition=ready --timeout=180s\npod/admin-0 condition met\n$ curl -s \"http://$NEXUS/admin\" | jq\n{\n  \"name\": \"admin\",\n  \"version\": \"0.2.7\"\n}\n$ curl -s \"http://$NEXUS/v1/projects\" | jq # the access error is expected\n{\n  \"@context\": \"http://bluebrain.github.io/nexus/contexts/error.json\",\n  \"code\": \"UnauthorizedAccess\"\n}\n$","title":"Deploy Admin"},{"location":"/docs/getting-started/running-nexus/minikube.html#deploy-kg","text":"KG is the service that manages user defined resources, their schemas and configuration like resolvers, views etc.\nCommand kubectl apply -f $MINI/kg.yaml && \\\n  kubectl wait pod kg-0 --for condition=ready --timeout=180s\n Example $ kubectl apply -f $MINI/kg.yaml\nservice/kg created\nservice/kg-hd created\nstatefulset.apps/kg created\npersistentvolumeclaim/storage-kg created\ningress.extensions/kg created\ningress.extensions/kg-direct created\n$ kubectl wait pod kg-0 --for condition=ready --timeout=180s\npod/kg-0 condition met\n$ curl -s \"http://$NEXUS/kg\" | jq\n{\n  \"name\": \"kg\",\n  \"version\": \"0.10.11\"\n}\n$ curl -s \"http://$NEXUS/v1/resources/org/proj\" | jq # the access error is expected\n{\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/error\",\n  \"code\": \"UnauthorizedAccess\"\n}\n$","title":"Deploy KG"},{"location":"/docs/getting-started/running-nexus/on-premise-cloud.html","text":"","title":"On premise / cloud deployment"},{"location":"/docs/getting-started/running-nexus/on-premise-cloud.html#on-premise-cloud-deployment","text":"There are several things to consider when preparing to deploy Nexus “on premise” because the setup depends a lot on the various usage profiles, but the most important categories would be:\nAvailability Latency & throughput Capacity Efficient use of hardware resources Backup and restore Monitoring & alerting\nEach of the Nexus services and “off the shelf” products can be deployed as a single instance or as a cluster (with one exception at this point being BlazeGraph which doesn’t come with a clustering option). The advantages for deploying clusters are generally higher availability, capacity and throughput at the cost of higher latency, consistency and having to potentially deal with network instability.\nThe decision to go with single node deployments or clustered deployments can be revisited later on and mixed setups (some services single node while others clustered) are also possible.\nThe Nexus distribution is made up of docker images which can be run on any host operating system and each of the “off the shelf” products also offer docker as a deployment option. We would generally recommend using a container orchestration solution like Kubernetes, OpenShift or Docker Swarm as they offer good management capabilities, discovery, load balancing and self-healing. They also accommodate changes in hardware allocations for the deployments, changes that can occur due to evolving usage patterns, software updates etc. Currently the biggest Nexus deployment is at EPFL within OpenShift.","title":"On premise / cloud deployment"},{"location":"/docs/getting-started/running-nexus/on-premise-cloud.html#choice-of-hardware","text":"Depending on the target throughput, usage profiles and data volume the hardware specification can vary greatly; please take a look at the benchmarks section to get an idea of what you should expect in terms of throughput with various hardware configurations. When the usage profiles are unknown a couple of rules of thumb should narrow the scope:\nNexus uses a collection of data stores (Cassandra, ElasticSearch, BlazeGraph) which depend performance wise to the underlying disk access, so: prefer local storage over network storage for lower latency when doing IO, prefer SSD over HDDs because random access speed is more important than sequential access, one exception is the file storage (attachments to resources which are stored as binary blobs on the filesystem) where the network disks should not be a cause for concern, nor random access speed; this assumes that accessing attachments is not the at the top in the usage profile All of Nexus services and most of the “off the shelf” products are built to run on top of the JVM which usually require more memory over computing power. A rough ratio of 2 CPU cores per 8GB of RAM is probably a good one (this of course depends on the CPU specification). Due to the design for scalability of Nexus services and “off the shelf” products the network is a very important characteristic of the deployment as frequent dropped packets or network partitions can seriously affect the availability of the system. Clustered / distributed systems generally use some form of consensus which is significantly affected by the reliability of the network. If the reliability of the network is a concern within the target deployment then vertical scalability is desirable over horizontal scalability: fewer host nodes with better specifications is better over more commodity hardware host nodes.","title":"Choice of hardware"},{"location":"/docs/getting-started/running-nexus/on-premise-cloud.html#cassandra","text":"Nexus uses Cassandra as its primary store as it scales well in terms of reads with the number of nodes in the cluster. It offers data replication out of the box, which allows the system to continue to be available in case of node failures or network partitions.\nSince this is the primary store it is the most important system to be backed up. All of the data that Nexus uses in other stores can be recomputed from the one stored in Cassandra as the other stores are used as mere indexing systems.\nPlease have a look at the Planning and Testing section in the DataStax documentation as it contains recommendations in terms of hardware and capacity.\nAs described in the architecture section the generally adopted persistence model is an EventSourced model in which the data store is used as an append only store. This has implications to the total amount of disk used by the primary store.\nA formula for computing the required disk space:\ntotal = (resource_size + nexus_metadata_size) * count * number_updates * replication_factor * 2 (compaction requirement)\nThe nexus_metadata_size varies depending on many things, but it’s generally less than or equal to the resource_size.\nAn example, assuming:\n10KB per resource 1.000.000 distinct resources 10 updates per resource replication factor of 3\n… the total required disk size would be:\n(10KB + 10KB) * 1.000.000 * 10 * 3 * 2 = 1.000.000.000KB ~= 955GB\nThe resulting size represents the total disk space of the cluster; a 5 node cluster with the data volume in the example above would have to be configured with 200GB disks per node.","title":"Cassandra"},{"location":"/docs/getting-started/running-nexus/on-premise-cloud.html#elasticsearch","text":"Nexus uses ElasticSearch to host several system indices and user defined ones. It offers sharding and replication out of the box. Deciding whether this system requires backup depends on the tolerated time for a restore. Nexus can be instructed to rebuild all indices using the data from the primary store, but being an incremental indexing process it can take longer than restoring from a backup. Since it can be configured to host a number of replicas for each shard it can tolerate a number of node failures.\nThe ElasticSearch setup documentation contains the necessary information on how to install and configure it, but recommendations on sizing the nodes and cluster are scarce because it depends on usage.\nA formula for computing the required disk space:\ntotal = (resource_size * count * documents + lucene_index) * replication_factor\n… where the lucene_index while it can vary should be less than twice the size of the original documents.\nAn example, assuming:\n10KB per resource 1.000.000 distinct resources 3 documents per resource (the number of documents depends on the configured views in the system) 2 additional shard replicas (replication factor of 3)\n… the total required disk size would be:\n(10KB * 1.000.000 * 3 + 2 * (10KB * 1.000.000 * 3)) * 3 = 270.000.000KB ~= 260GB\nThe resulting size represents the total disk space of the data nodes in the cluster; a 5 data node cluster with the data volume in the example above would have to be configured with 60GB disks per node.","title":"ElasticSearch"},{"location":"/docs/getting-started/running-nexus/on-premise-cloud.html#kafka-and-zookeeper","text":"Nexus uses Kafka for asynchronous communication between services, usually exposing the event log directly with simple transformations (internal service event representation to public representation). Kafka is also used to provide an integration point such that custom / specialized services can be built to run on top of Nexus. It offers replication out of the box and while the event log can be rebuilt from the primary store whether it requires backup or not is a decision that depends on how quickly a restore needs to be performed in case of failure.\nThe system is not used at its full potential in terms of throughput, a small cluster will work on most Nexus deployments. It was chosen because of its similarity with the Nexus service event based persistence model.\nNexus doesn’t use ZooKeeper directly, but just as a dependency for Kafka which in turn is used solely for coordinating the Kafka cluster. A 3 node 0.5 CPU / 1.5GB RAM cluster should be sufficient for most use cases.\nThe Kafka configuration section in its documentation list a series of recommendations and instructions for a production deployment.\nThe ZooKeeper’s Getting Started and Administrator guides are a good place to start.\nNexus pushes to Kafka each service event log, so the allocated disk space is an important aspect to take into consideration. As with previous sizing instructions the disk size depends on the number of resources, their size and the configured replication factor:\ntotal = (resource_size + nexus_metadata_size) * count * replication_factor\nAn example, assuming:\n10KB per resource 1.000.000 distinct resources 10 updates per resource replication factor of 3\n… the total required disk size would be:\n(10KB + 10KB) * 1.000.000 * 3 = 60.000.000KB ~= 60GB\nThe resulting size represents the total disk space of the cluster; a 3 data node cluster with the data volume in the example above would have to be configured with 20GB disks per node.\nNote Nexus stores its entire event log in Kafka so it’s important to configure Kafka with permanent log retention. Make sure the following configuration values are set: log.retention.bytes=-1\nlog.retention.hours=-1","title":"Kafka and ZooKeeper"},{"location":"/docs/getting-started/running-nexus/on-premise-cloud.html#blazegraph","text":"Nexus uses BlazeGraph as an RDF (triple) store to provide a advanced querying capabilities on the hosted data. This store is treated as a specialized index on the data so as with Kafka and ElasticSearch in case of failures, the system can be fully restored from the primary store. While the technology is advertised to support High Availability and Scaleout deployment configurations, we have yet to be able to setup a deployment in this fashion.\nWe currently recommend deploying BlazeGraph using the prepackaged tar.gz distribution available to download from sourceforge.\nNote We’re looking at alternative technologies and possible application level (within Nexus) sharding and replicas.\nThe Hardware Configuration section in the documentation gives a couple of hints about the requirements to operate BlazeGraph and there are additional sections for optimizations in terms of Performance, IO and Query.\nBlazeGraph stores data in an append only journal which means updates will use additional disk space.\nA formula for computing the required disk space:\ntotal = (resource_triples + nexus_triples) * count * number_updates * triple_size + lucene_index\n… where the lucene_index while it can vary should be less than twice the size of the original documents.\nAn example, assuming:\n100 triples (rough estimate for a 10KB json-ld resource representation) 20 additional nexus triples on average 1.000.000 distinct resources 10 updates per resource 200 bytes triple size (using quads mode)\n… the total required disk size would be:\n(100 + 20) * 1.000.000 * 10 * 200 / 1024 * 3 ~= 700.000.000KB ~= 670GB\nCompactions can be applied to the journal using the CompactJournalUtility to reduce the disk usage, but it takes quite a bit a time and requires taking the software offline during the process.","title":"BlazeGraph"},{"location":"/docs/getting-started/intro-linked-data.html","text":"","title":"Introduction to Linked Data"},{"location":"/docs/getting-started/intro-linked-data.html#introduction-to-linked-data","text":"","title":"Introduction to Linked Data"},{"location":"/docs/getting-started/shacl.html","text":"","title":"Data validation with SHACL"},{"location":"/docs/getting-started/shacl.html#data-validation-with-shacl","text":"TBC.","title":"Data validation with SHACL"},{"location":"/docs/getting-started/example.html","text":"","title":"Data management example"},{"location":"/docs/getting-started/example.html#data-management-example","text":"TBC.","title":"Data management example"},{"location":"/docs/api/index.html","text":"","title":"API Reference"},{"location":"/docs/api/index.html#api-reference","text":"All Nexus services expose a RESTful interface over HTTP(S) for synchronous communication. The generally adopted transport format is JSON based, specifically JSON-LD.\nThe services operates on 3 primary types of resources: Organizations, Projects and Resources. Each of them is constrain by a set of SHACL rules, grouped in what is called a Schema.\nAn organization is used to organize and categorize its sub-resources. A project is rooted on a given organization. It is used to organize and categorize its sub-resources while providing a way to interact with its sub-resources conveniently. A resource is rooted on a given project. In this level of the hierarchy, multiple types of resources can be found. Each of them has a different purpose: A schema is a resource that defines a set of rules and constrains using SHACL. A resolvers: is a resource that defines the way ids are retrieved inside a project. A views: is a resource that describes the way indexing is applied to certain resources inside a project.","title":"API Reference"},{"location":"/docs/api/index.html#resource-lifecycle","text":"Our services are build using the event sourcing approach. This strategy captures all changes to an application state as a sequence of events.\nAll resources in the system generally follow the very same lifecycle, as depicted in the diagram below. Every interaction with an API resource (creation, updates, state changes) is recorded into the system as revisions.\nData is never removed from the system, but rather is marked as deprecated. Depending on the type of resource, the deprecation flag may have various semantics:\nOrganizations: the resource itself and sub-resources cannot be updated. Views and resolvers contained within this organization will not be considered during indexing and resolution processes. Projects: the resource itself and sub-resources cannot be updated. Views and resolvers contained within this project will not be considered during indexing and resolution processes. Schemas: the resource itself cannot be updated and new data conformant to it cannot be created Resolvers: the resource itself will not be considered during the resolution process Views: the resource itself will not be considered during the indexing process Data: the resource itself cannot be updated and attachments cannot be added/deleted\nFuture policies may use this flag to determine if or when the deprecated data may be archived.","title":"Resource Lifecycle"},{"location":"/docs/api/anatomy.html","text":"","title":"Services anatomy"},{"location":"/docs/api/anatomy.html#services-anatomy","text":"Nexus services are assembled by a series of components\nWrite Model: This component is executed when a customer performs a write API operation (create, update, tag, …). The business logic is triggered (validation, state computation, Json and Graph manipulations, etc). As a result, an Event gets stored into the Primary Store or a rejection is delivered to the client. Event Stream: This is an asynchronous process that gets triggered as soon as there are elements to be read from the Primary Store. The stream runs several operations that take the stored Events and transform them. The result is then saved into a target index. Write Model: This component gets triggered when a customer performs a read API operation (get, list). A call to the index is performed. The resulting data is transformed if required and delivered to the client.\nThe service structure and workflow has been designed following the CQRS and [Event sourcing](Event sourcing) strategies. The distinction between the write and read model, as well as the use of event streams is a perfect match to CQRS and Event Sourcing.","title":"Services anatomy"},{"location":"/docs/api/operating-on-resources.html","text":"","title":"Operating on resources"},{"location":"/docs/api/operating-on-resources.html#operating-on-resources","text":"Access to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nAll resources in the system share a base set of operations. Assuming a nexus deployment at http(s)://nexus.example.com resource address of /v1/{address} the following operations should apply to most (all) resources:","title":"Operating on resources"},{"location":"/docs/api/operating-on-resources.html#fetch-the-current-revision-of-the-resource","text":"GET /v1/{address}\nStatus Codes\n200 OK: the resource is found and returned successfully 404 Not Found: the resource was not found","title":"Fetch the current revision of the resource"},{"location":"/docs/api/operating-on-resources.html#fetch-a-specific-revision-of-the-resource","text":"GET /v1/{address}?rev={rev}\n… where {rev} is the revision number, starting at 1.\nStatus Codes\n200 OK: the resource revision is found and returned successfully 404 Not Found: the resource revision was not found","title":"Fetch a specific revision of the resource"},{"location":"/docs/api/operating-on-resources.html#fetch-a-specific-tag-of-the-resource","text":"GET /v1/{address}?tag={tag}\n… where {tag} is the tag name linked to a certain revision number.\nStatus Codes\n200 OK: the resource tag is found and returned successfully 404 Not Found: the resource tag was not found","title":"Fetch a specific tag of the resource"},{"location":"/docs/api/operating-on-resources.html#create-a-new-resource","text":"Depending on whether the resource is a singleton resource or is part of a wider collection of resources of the same type the verbs POST and PUT are used.\nFor a singleton resource:\nPUT /v1/{address}\n{...}\nFor a collection resources:\nPOST /v1/{collection_address}\n{...}\n… where {collection_address} is the address of the collection the resource belongs to.\nStatus Codes\n201 Created: the resource was created successfully 400 Bad Request: the resource is not valid or cannot be created at this time 409 Conflict: the resource already exists","title":"Create a new resource"},{"location":"/docs/api/operating-on-resources.html#update-a-resource","text":"In order to ensure a client does not perform any changes to a resource without having had seen the previous revision of the resource, the last revision needs to be passed as a query parameter.\nPUT /v1/{address}?rev={previous_rev}\n{...}\nStatus Codes\n200 OK: the resource was created successfully 400 Bad Request: the resource is not valid or cannot be updated at this time 409 Conflict: the provided revision is not the current resource revision number","title":"Update a resource"},{"location":"/docs/api/operating-on-resources.html#tag-a-resource","text":"Links a resource revision to a specific name.\nTagging a resource is considered to be an update as well.\nPUT /v1/{address}/tags?rev={previous_rev}\n{\n   \"tag\": \"{name}\",\n   \"rev\": {rev}\n}\n… where:\n{name}: String - the name given to the resource at specific revision. {rev}: Number - the revision to link the provided {name}.","title":"Tag a resource"},{"location":"/docs/api/operating-on-resources.html#deprecate-a-resource","text":"Locks the resource, so no further operations can be performed. It also deletes the resource from listing/querying results.\nDeprecating a resource is considered to be an update as well.\nDELETE /v1/{address}?rev={previous_rev}\nStatus Codes\n200 OK: the resource was created successfully 400 Bad Request: the resource is not valid or cannot be deprecated at this time 409 Conflict: the provided revision is not the current resource revision number\nStatus Codes\n200 OK: the resource was created successfully 400 Bad Request: the resource is not valid or cannot be created at this time 409 Conflict: the provided revision is not the current resource revision number","title":"Deprecate a resource"},{"location":"/docs/api/operating-on-resources.html#listing","text":"GET /v1/{collection_address}?from={from}&size={size}&deprecated={deprecated}&q={full_text_search_query}\n… where all of the query parameters are individually optional.\n{collection_address} Path - the selected collection to list, filter or search; for example: /v1/projects/, /v1/schemas/{org_label}/{project}, {full_text_search_query}: String - can be provided to select only the resources in the collection that have attribute values matching (containing) the provided token; when this field is provided the results will also include score values for each result {from}: Number - the parameter that describes the offset for the current query; defaults to 0 {size}: Number - the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting resources based on their deprecation status","title":"Listing"},{"location":"/docs/api/operating-on-resources.html#list-response-format","text":"The response to any search requests follows the described format:\n\"_total\": {hits},\n  \"_maxScore\": {maxScore},\n  \"_next\": \"{next_page_address}\",\n  \"_previous\": \"{previous_page_address}\",\n  \"_results\": [\n    {\n      \"@id\": \"{resource_id}\",\n      ...\n    },\n    {\n      \"@id\": \"{resource_id}\",\n      ...\n    }\n  ]\n… where:\n{hits}: Number - the total number of results found for the requested search. {maxScore} Float - the maximum score found across all hits. {resource_id} Iri - the qualified id for one of the results.\nThe relationships _next and _previous at the top level offer discovery of more resources, in terms of navigation/pagination.\nThe fields {maxScore} and {score_id} are optional fields and will only be present whenever a q query parameter is provided on the request.","title":"List response format"},{"location":"/docs/api/admin/index.html","text":"","title":"Admin API"},{"location":"/docs/api/admin/index.html#admin-api","text":"The Admin API provides operations on two types of resources, organizations and projects. Those resources define the tree-like structure or grouping of the platform","title":"Admin API"},{"location":"/docs/api/admin/index.html#organizations","text":"The top level resources in the platform. They are used to group and categorize projects.\nOperations on organizations","title":"Organizations"},{"location":"/docs/api/admin/index.html#projects","text":"The 2nd level resources in the platform. They are used to group and categorize any sub-resources supported by the Knowledge Graph.\nOperations on projects","title":"Projects"},{"location":"/docs/api/admin/admin-orgs-api.html","text":"","title":"Organizations"},{"location":"/docs/api/admin/admin-orgs-api.html#organizations","text":"Organizations are rooted in the /v1/orgs path and are used to group and categorize sub-resources.\nAccess to resources in the system depends on the access control list set for them. A caller may need to prove its identity by means of an access token passed in the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about retrieving access tokens.\nRunning examples with Postman The simplest way to explore our API is using Postman. Once downloaded, import the organizations collection. If your deployment is protected by an access token: Edit the imported collection -> Click on the Authorization tab -> Fill in the token field.","title":"Organizations"},{"location":"/docs/api/admin/admin-orgs-api.html#create-an-organization","text":"PUT /v1/orgs/{label}\n  {...}\n…where {label} is the user friendly name assigned to this organization. The semantics of the label should be consistent with the type of data provided by its sub-resources, since it’ll be a part of the sub-resources’ URI.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/orgs/myorg\" -d \\\n'{\n  \"description\": \"My organization\"\n}'Full source at GitHub Payload {\n  \"description\": \"My organization\"\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/orgs/myorg\",\n  \"@type\": \"Organization\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create an organization"},{"location":"/docs/api/admin/admin-orgs-api.html#update-an-organization","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to an organization without having had seen the previous revision of the organization, the last revision needs to be passed as a query parameter.\nPUT /v1/orgs/{label}?rev={previous_rev}\n  {...}\n… where\n{previous_rev}: Number - is the last known revision for the organization. {label}: String - is the user friendly name that identifies this organization.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/orgs/myorg?rev=1\" -d \\\n'{\n  \"description\": \"A new description\"\n}'Full source at GitHub Payload {\n  \"description\": \"My organization\"\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/orgs/myorg\",\n  \"@type\": \"Organization\",\n  \"description\": \"My organization\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Update an organization"},{"location":"/docs/api/admin/admin-orgs-api.html#deprecate-an-organization","text":"Locks the organization, so that no further operations can be performed on the resource or on the child resources.\nDeprecating an organization is considered to be an update as well.\nDELETE /v1/orgs/{label}?rev={previous_rev}\n… where\n{label}: String - is the user friendly name that identifies this organization. {previous_rev}: Number - is the last known revision for the organization.\nExample\nRequest curl -XDELETE \"https://nexus.example.com/v1/orgs/myorg/tags?rev=3\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/orgs/myorg\",\n  \"@type\": \"Organization\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Deprecate an organization"},{"location":"/docs/api/admin/admin-orgs-api.html#fetch-an-organization-current-version-","text":"GET /v1/orgs/{label}\n…where {label} is the user friendly String name that identifies this organization.\nExample\nRequest curl \"https://nexus.example.com/v1/orgs/myorg\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/orgs/myorg\",\n  \"@type\": \"Organization\",\n  \"description\": \"My Organization\",\n  \"_label\": \"myorg\",\n  \"_uuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch an organization (current version)"},{"location":"/docs/api/admin/admin-orgs-api.html#fetch-an-organization-specific-version-","text":"GET /v1/orgs/{label}?rev={rev}\n… where\n{rev}: Number - is the revision of the organization to be retrieved. {label}: String - is the user friendly name that identifies this organization.\nExample\nRequest curl \"https://nexus.example.com/v1/orgs/myorg?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/orgs/myorg\",\n  \"@type\": \"Organization\",\n  \"description\": \"My Organization\",\n  \"_label\": \"myorg\",\n  \"_uuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch an organization (specific version)"},{"location":"/docs/api/admin/admin-orgs-api.html#list-organizations","text":"GET /v1/orgs?from={from}&size={size}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20\nExample\nRequest curl \"https://nexus.example.com/v1/orgs\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 2,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/orgs/myorg\",\n      \"@type\": \"Organization\",\n      \"description\": \"My Organization\",\n      \"_label\": \"myorg\",\n      \"_uuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/orgs/myorg2\",\n      \"@type\": \"Organization\",\n      \"description\": \"My Second Organization\",\n      \"_label\": \"myorg2\",\n      \"_uuid\": \"b42e5206-f81e-430b-808d-5dac2599153d\",\n      \"_rev\": 1,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2019-01-14T09:29:39.416Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2019-01-14T09:29:39.416Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    }\n  ]\n}Full source at GitHub","title":"List organizations"},{"location":"/docs/api/admin/admin-projects-api.html","text":"","title":"Projects"},{"location":"/docs/api/admin/admin-projects-api.html#projects","text":"Projects belong to an organization and are rooted in the corresponding /v1/projects/{org_label} path. The purposes of projects are:\nGroup and categorize sub-resources. Define settings that apply for operations on all sub-resources. Provide isolation from resources inside other projects. This behavior can be changed by defining resolvers\nAccess to resources in the system depends on the access control list set for them. A caller may need to prove its identity by means of an access token passed in the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about retrieving access tokens.\nRunning examples with Postman The simplest way to explore our API is using Postman. Once downloaded, import the projects collection. If your deployment is protected by an access token: Edit the imported collection -> Click on the Authorization tab -> Fill in the token field.","title":"Projects"},{"location":"/docs/api/admin/admin-projects-api.html#project-payload","text":"{\n  \"description\": \"{description}\",\n  \"base\": \"{base}\",\n  \"vocab\": \"{vocab}\",\n  \"apiMappings\": [\n   {\n      \"prefix\": \"{prefix}\",\n      \"namespace\": \"{namespace}\"\n    },\n    ...\n  ]\n}\nwhere…\n{description}: String - an optional description for this project. {base}: IRI - is going to be used as a curie in the generation of the @id children resources. E.g.: Let base be http://example.com/. When a resource is created and no @id is present in the payload, the platform will generate an @id which will look like http://example.com/{UUID}. This field is optional and will default to {{base}}/v1/resources/{org_label}/{project_label}/_/. {vocab}: IRI - is going to be used as a curie prefix for all unqualified predicates in children resources. E.g. if the vocab is set to https://schema.org/, when a field a resource is created and a field name is present in the payload, it will be expanded to http://schema.org/name by the system during indexing and fetch operations. This field is optional and will default to {{base}}/v1/vocabs/{org_label}/{project_label}/. {apiMappings}: Json object - provides a convinient way to deal with URIs when performing operations on a sub-resource. This field is optional.","title":"Project payload"},{"location":"/docs/api/admin/admin-projects-api.html#api-mappings","text":"The apiMappings Json object array maps each prefix to its namespace so that curies on children endpoints can be used. Let’s see an example.\nHaving the following apiMappings:\n{\n  \"apiMappings\": [\n   {\n      \"prefix\": \"{prefix}\",\n      \"namespace\": \"{namespace}\"\n    },\n    { ... }\n  ]\n}\nwhere…\n{prefix}: String - the left hand side of a curie. It has certain constrains. {namespace}: IRI - the right hand side of a curie. It has certain constrains (irelative-ref).\nThe apiMappings Json object array maps each prefix to its namespace so that curies on children endpoints can be used. Let’s see an example:\njson { \"apiMappings\": [ { \"prefix\": \"person\", \"namespace\": \"http://example.com/some/person\" }, { \"prefix\": \"schemas\", \"namespace\": \"https://bluebrain.github.io/nexus/schemas/\" } ] }\nThe previous payload allows us to create a schema using the following endpoints:\n/v1/schemas/{org_label}/{project_label}/person. The @id of the resulting schema will be http://example.com/some/person /v1/schemas/{org_label}/{project_label}/schema:other. The @id of the resulting schema will be https://bluebrain.github.io/nexus/schemas/other","title":"API Mappings"},{"location":"/docs/api/admin/admin-projects-api.html#create-a-project","text":"PUT /v1/projects/{org_label}/{label}\n  {...}\n…where {label} is the user friendly name assigned to this project. The semantics of the label should be consistent with the type of data provided by its sub-resources, since it’ll be a part of the sub-resources’ URI.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/orgs/myorg/myproject\" -d \\\n'{\n  \"description\": \"example project creation\",\n  \"base\": \"https://nexus.example.com/v1/projects/myorg/myproject/\",\n  \"vocab\": \"https://schema.org/\",\n  \"apiMappings\": [\n    {\n      \"prefix\": \"person\",\n      \"namespace\": \"http://example.com/some/person\"\n    },\n    {\n      \"prefix\": \"schemas\",\n      \"namespace\": \"https://bluebrain.github.io/nexus/schemas/\"\n    },\n    {\n      \"prefix\": \"ex\",\n      \"namespace\": \"http://example.com/\"\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"description\": \"example project creation\",\n  \"base\": \"https://nexus.example.com/v1/myorg/myproject/\",\n  \"vocab\": \"https://schema.org/\",\n  \"apiMappings\": [\n    {\n      \"prefix\": \"person\",\n      \"namespace\": \"http://example.com/some/person\"\n    },\n    {\n      \"prefix\": \"schemas\",\n      \"namespace\": \"https://bluebrain.github.io/nexus/schemas/\"\n    },\n    {\n      \"prefix\": \"ex\",\n      \"namespace\": \"http://example.com/\"\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n  \"@type\": \"Project\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create a project"},{"location":"/docs/api/admin/admin-projects-api.html#update-a-project","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to a project without having had seen the previous revision of the project, the last revision needs to be passed as a query parameter.\nPUT /v1/projects/{org_label}/{label}?rev={previous_rev}\n  {...}\n… where\n{previous_rev}: Number - the last known revision for the organization. {label}: String - the user friendly name that identifies this project.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/projects/myorg/myproject?rev=1\" -d \\\n'{\n  \"description\": \"example project creation\",\n  \"base\": \"https://nexus.example.com/v1/myorg/myproject/\",\n  \"vocab\": \"https://schema.org/\",\n  \"apiMappings\": [\n    {\n      \"prefix\": \"person\",\n      \"namespace\": \"http://example.com/some/person\"\n    },\n    {\n      \"prefix\": \"schemas\",\n      \"namespace\": \"https://bluebrain.github.io/nexus/schemas/\"\n    },\n    {\n      \"prefix\": \"ex\",\n      \"namespace\": \"http://example.com/\"\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"description\": \"example project creation\",\n  \"base\": \"https://nexus.example.com/v1/myorg/myproject/\",\n  \"vocab\": \"https://schema.org/\",\n  \"apiMappings\": [\n    {\n      \"prefix\": \"person\",\n      \"namespace\": \"http://example.com/some/person\"\n    },\n    {\n      \"prefix\": \"schemas\",\n      \"namespace\": \"https://bluebrain.github.io/nexus/schemas/\"\n    },\n    {\n      \"prefix\": \"ex\",\n      \"namespace\": \"http://example.com/\"\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n  \"@type\": \"Project\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Update a project"},{"location":"/docs/api/admin/admin-projects-api.html#deprecate-a-project","text":"Locks the project, so no further operations can be performed on it or on the children resources.\nDeprecating a project is considered to be an update as well.\nDELETE /v1/projects/{org_label}/{label}?rev={previous_rev}\n… where\n{previous_rev}: Number - the last known revision for the organization. {label}: String - the user friendly name that identifies this project.\nExample\nRequest curl -XDELETE \"https://nexus.example.com/v1/projects/myorg/myproject?rev=3\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n  \"@type\": \"Project\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:30:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Deprecate a project"},{"location":"/docs/api/admin/admin-projects-api.html#fetch-a-project-current-version-","text":"GET /v1/projects/{org_label}/{label}\n…where {label} is the user friendly name that identifies this project.\nExample\nRequest curl \"https://nexus.example.com/v1/projects/myorg/myproject\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n  \"@type\": \"Project\",\n  \"base\": \"https://nexus.example.com/v1/myorg/myproject/\",\n  \"vocab\": \"https://schema.org/\",\n  \"apiMappings\": [\n    {\n      \"prefix\": \"person\",\n      \"namespace\": \"http://example.com/some/person\"\n    },\n    {\n      \"prefix\": \"schemas\",\n      \"namespace\": \"https://bluebrain.github.io/nexus/schemas/\"\n    },\n    {\n      \"prefix\": \"ex\",\n      \"namespace\": \"http://example.com/\"\n    }\n  ],\n  \"_label\": \"myproject\",\n  \"_organizationLabel\": \"myorg\",\n  \"_organizationUuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n  \"_uuid\": \"e622745d-5eea-4dc5-8318-58a3dd4101ff\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:30:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a project (current version)"},{"location":"/docs/api/admin/admin-projects-api.html#fetch-a-project-specific-version-","text":"GET /v1/projects/{org_label}/{label}?rev={rev}\n…where\n{label}: String - the user friendly name that identifies this project. {rev}: Number - the revision of the project to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/projects/myorg/myproject?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n  \"@type\": \"Project\",\n  \"base\": \"https://nexus.example.com/v1/myorg/myproject/\",\n  \"vocab\": \"https://schema.org/\",\n  \"apiMappings\": [\n    {\n      \"prefix\": \"person\",\n      \"namespace\": \"http://example.com/some/person\"\n    },\n    {\n      \"prefix\": \"schemas\",\n      \"namespace\": \"https://bluebrain.github.io/nexus/schemas/\"\n    },\n    {\n      \"prefix\": \"ex\",\n      \"namespace\": \"http://example.com/\"\n    }\n  ],\n  \"_label\": \"myproject\",\n  \"_organizationLabel\": \"myorg\",\n  \"_organizationUuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n  \"_uuid\": \"e622745d-5eea-4dc5-8318-58a3dd4101ff\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:30:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a project (specific version)"},{"location":"/docs/api/admin/admin-projects-api.html#list-projects","text":"GET /v1/projects?from={from}&size={size}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20\nExample\nRequest curl \"https://nexus.example.com/v1/projects\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 1,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n      \"@type\": \"Project\",\n      \"base\": \"http://nexus.example.com/\",\n      \"vocab\": \"http://schema.org/\",\n      \"apiMappings\": [\n        {\n          \"namespace\": \"http://schema.org/\",\n          \"prefix\": \"schema\"\n        }\n      ],\n      \"_uuid\": \"e622745d-5eea-4dc5-8318-58a3dd4101ff\",\n      \"_label\": \"myproject\",\n      \"_organizationUuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n      \"_organizationLabel\": \"myorg\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T10:30:00.801Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    }\n  ]\n}Full source at GitHub","title":"List projects"},{"location":"/docs/api/admin/admin-projects-api.html#list-projects-belonging-to-an-organization","text":"GET /v1/projects/{org_label}?from={from}&size={size}&deprecated={deprecated}&q={full_text_search_query}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20\nExample\nRequest curl \"https://nexus.example.com/v1/projects/myorg\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 1,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n      \"@type\": \"Project\",\n      \"base\": \"http://nexus.example.com/\",\n      \"vocab\": \"http://schema.org/\",\n      \"apiMappings\": [\n        {\n          \"namespace\": \"http://schema.org/\",\n          \"prefix\": \"schema\"\n        }\n      ],\n      \"_uuid\": \"e622745d-5eea-4dc5-8318-58a3dd4101ff\",\n      \"_label\": \"myproject\",\n      \"_organizationUuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n      \"_organizationLabel\": \"myorg\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T10:30:00.801Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    }\n  ]\n}Full source at GitHub","title":"List projects belonging to an organization"},{"location":"/docs/api/kg/index.html","text":"","title":"Knowledge Graph API"},{"location":"/docs/api/kg/index.html#knowledge-graph-api","text":"","title":"Knowledge Graph API"},{"location":"/docs/api/kg/index.html#schemas","text":"A schema is a resource which defines a set of rules and constrains using SHACL.\nOperations on schemas","title":"Schemas"},{"location":"/docs/api/kg/index.html#resolvers","text":"A resolver is a resource which defines the way ids are retrieved inside a project.\nOperations on resolvers","title":"Resolvers"},{"location":"/docs/api/kg/index.html#views","text":"A view is a resource which defines the way indexing is applied to certain resources inside a project.\nOperations on views","title":"Views"},{"location":"/docs/api/kg/index.html#resources","text":"A resource is the most generic entity on the Knowledge Graph. Resources can be schemas, resolvers, views or data.\nOperations on resources","title":"Resources"},{"location":"/docs/api/kg/kg-schemas-api.html","text":"","title":"Schemas"},{"location":"/docs/api/kg/kg-schemas-api.html#schemas","text":"Schemas are rooted in the /v1/schemas/{org_label}/{project_label} collection.\nEach schema…\nbelongs to a project identifier by the label {project_label} inside an organization identifier by the label {org_label} it is validated against the shacl schema (version 20170720).\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nRunning examples with Postman The simplest way to explore our API is using Postman. Once downloaded, import the schemas collection. If your deployment is protected by an access token: Edit the imported collection -> Click on the Authorization tab -> Fill the token field.","title":"Schemas"},{"location":"/docs/api/kg/kg-schemas-api.html#create-a-schema-using-post","text":"POST /v1/schemas/{org_label}/{project_label}\n  {...}\nThe json payload:\nIf the @id value is found on the payload, this @id will be used. If the @id value is not found on the payload, an @id will be generated as follows: base:{UUID}. The base is the prefix defined on the resource’s project ({project_label}).\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/schemas/myorg/myproj\" -d \\\n'{\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/shacl-20170720.json\",\n    {\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n      \"ex\": \"http://example.com/\"\n    }\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"nxv:Schema\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/shacl-20170720.json\",\n    {\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n      \"ex\": \"http://example.com/\"\n    }\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"nxv:Schema\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 1,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Create a schema using POST"},{"location":"/docs/api/kg/kg-schemas-api.html#create-a-schema-using-put","text":"This alternative endpoint to create a schema is useful in case the json payload does not contain an @id but you want to specify one. The @id will be specified in the last segment of the endpoint URI.\nPUT /v1/schemas/{org_label}/{project_label}/{schema_id}\n  {...}\nNote that if the payload contains an @id different from the {schema_id}, the request will fail.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\" -d \\\n'{\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/shacl-20170720.json\",\n    {\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n      \"ex\": \"http://example.com/\"\n    }\n  ],\n  \"@type\": \"nxv:Schema\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/shacl-20170720.json\",\n    {\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n      \"ex\": \"http://example.com/\"\n    }\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"nxv:Schema\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 1,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Create a schema using PUT"},{"location":"/docs/api/kg/kg-schemas-api.html#update-a-schema","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to a resource without having had seen the previous revision of the resource, the last revision needs to be passed as a query parameter.\nPUT /v1/schemas/{org_label}/{project_label}/{schema_id}?rev={previous_rev}\n  {...}\n… where {previous_rev} is the last known revision number for the schema.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c?rev=1\" -d \\\n'{\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/shacl-20170720.json\",\n    {\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n      \"ex\": \"http://example.com/\"\n    }\n  ],\n  \"@type\": \"nxv:Schema\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/shacl-20170720.json\",\n    {\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n      \"ex\": \"http://example.com/\"\n    }\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"nxv:Schema\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:56:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 2,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Update a schema"},{"location":"/docs/api/kg/kg-schemas-api.html#tag-a-schema","text":"Links a schema revision to a specific name.\nTagging a schema is considered to be an update as well.\nPUT /v1/schemas/{org_label}/{project_label}/{schema_id}/tags?rev={previous_rev}\n  {\n    \"tag\": \"{name}\",\n    \"rev\": {rev}\n  }\n… where\n{previous_rev}: Number - is the last known revision for the resolver. {name}: String - label given to the schemas at specific revision. {rev}: Number - the revision to link the provided {name}.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/schemas/myorg/myproj/myschema/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/tags?rev=2\" -d \\\n'{\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}'Full source at GitHub Payload {\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:58:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 3,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Tag a schema"},{"location":"/docs/api/kg/kg-schemas-api.html#add-attachment-to-a-schema","text":"Adds a binary to an already existing schema\nPUT /v1/schemas/{org_label}/{project_label}/{schema_id}/atachments/{name}?rev={previous_rev}\n…where\n{previous_rev}: is the last known revision number for the schema. {name}: String - the attachment identifier. This value is uniquely identifying the attachment per project.\nExample\nRequest curl -XPUT -F \"file=@/path/to/myfile.jpg\" \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/attachments/myfile.jpg?rev=3\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_distribution\": [\n    {\n      \"@type\": \"dcat:Distribution\",\n      \"_byteSize\": 48144,\n      \"_digest\": {\n        \"_algorithm\": \"SHA-256\",\n        \"_value\": \"721d03056b82a22c54f30fd3c68b41dfe5f53828911984e47182d82cfbac9f36\"\n      },\n      \"_downloadURL\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/attachments/myfile.jpg\",\n      \"_mediaType\": \"image/jpeg\",\n      \"_originalFileName\": \"myfile.jpg\"\n    }\n  ],\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:58:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 4,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Add attachment to a schema"},{"location":"/docs/api/kg/kg-schemas-api.html#delete-attachment-from-a-schema","text":"Deletes the attachment metadata from the latest revision of the schema. The attachment will still be accessible accessing the previous revision.\nDELETE /v1/schemas/{org_label}/{project_label}/{schema_id}/atachments/{name}?rev={previous_rev}\n…where\n{previous_rev}: is the last known revision number for the schema. {name}: String - the attachment identifier. This value is uniquely identifying the attachment per project.\nExample\nRequest curl -XDELETE \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/attachments/myfile.jpg?rev=4\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:58:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 5,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Delete attachment from a schema"},{"location":"/docs/api/kg/kg-schemas-api.html#fetch-attachment-from-a-schema-current-revision-","text":"GET /v1/schemas/{org_label}/{project_label}/{schema_id}/atachments/{name}\n…where {name} is the attachment identifier.\nExample\nRequest curl \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/attachments/myfile.jpg\" -o myfile.jpgFull source at GitHub","title":"Fetch attachment from a schema (current revision)"},{"location":"/docs/api/kg/kg-schemas-api.html#fetch-attachment-from-a-schema-specific-revision-","text":"GET /v1/schemas/{org_label}/{project_label}/{schema_id}/atachments/{name}?rev={rev}\n… where - {name} - String: is the attachment identifier. - {rev} - Long: is the revision number of the resource to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/attachments/myfile.jpg?rev=4\" -o myfile.jpgFull source at GitHub","title":"Fetch attachment from a schema (specific revision)"},{"location":"/docs/api/kg/kg-schemas-api.html#fetch-attachment-from-a-schema-specific-tag-","text":"GET /v1/schemas/{org_label}/{project_label}/{schema_id}/atachments/{name}?tag={tag}\n… where - {name} - String: is the attachment identifier. - {tag} - String: is the tag of the schema to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/attachments/myfile.jpg?tag=mytag\" -o myfile.jpgFull source at GitHub","title":"Fetch attachment from a schema (specific tag)"},{"location":"/docs/api/kg/kg-schemas-api.html#deprecate-a-schema","text":"Locks the schema, so no further operations can be performed. It also deletes the schema from listing/querying results.\nDeprecating a schema is considered to be an update as well.\nDELETE /v1/schemas/{org_label}/{project_label}/{schema_id}?rev={previous_rev}\n… where {previous_rev} is the last known revision number for the schema.\nExample\nRequest curl -XDELETE \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c?rev=5\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:05:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 6,\n  \"_deprecated\": true\n}Full source at GitHub","title":"Deprecate a schema"},{"location":"/docs/api/kg/kg-schemas-api.html#fetch-a-schema-current-version-","text":"GET /v1/schemas/{org_label}/{project_label}/{schema_id}\nExample\nRequest curl \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/shacl-20170720.json\",\n    {\n      \"ex\": \"http://example.com/\",\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\"\n    },\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://bluebrain.github.io/nexus/schemas/myschema2\",\n  \"@type\": \"nxv:Schema\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"NodeShape\",\n      \"nodeKind\": \"BlankNode:OrIRI\",\n      \"property\": [\n        {\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1,\n          \"path\": \"ex:name\"\n        },\n        {\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1,\n          \"path\": \"ex:bool\"\n        },\n        {\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1,\n          \"path\": \"ex:number\"\n        }\n      ],\n      \"targetClass\": \"ex:Custom\"\n    }\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:05:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 4,\n  \"_deprecated\": true\n}Full source at GitHub","title":"Fetch a schema (current version)"},{"location":"/docs/api/kg/kg-schemas-api.html#fetch-a-schema-specific-version-","text":"GET /v1/schemas/{org_label}/{project_label}/{schema_id}?rev={rev}\n… where {rev} is the revision number of the schema to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/shacl-20170720.json\",\n    {\n      \"ex\": \"http://example.com/\",\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\"\n    },\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://bluebrain.github.io/nexus/schemas/myschema2\",\n  \"@type\": \"nxv:Schema\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"NodeShape\",\n      \"nodeKind\": \"BlankNode:OrIRI\",\n      \"property\": [\n        {\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1,\n          \"path\": \"ex:name\"\n        },\n        {\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1,\n          \"path\": \"ex:bool\"\n        },\n        {\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1,\n          \"path\": \"ex:number\"\n        }\n      ],\n      \"targetClass\": \"ex:Custom\"\n    }\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:05:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 4,\n  \"_deprecated\": true\n}Full source at GitHub","title":"Fetch a schema (specific version)"},{"location":"/docs/api/kg/kg-schemas-api.html#fetch-a-schema-specific-tag-","text":"GET /v1/schemas/{org_label}/{project_label}/{schema_id}?tag={tag}\n… where {tag} is the tag of the resource to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c?tag=mytag\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/shacl-20170720.json\",\n    {\n      \"ex\": \"http://example.com/\",\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\"\n    },\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://bluebrain.github.io/nexus/schemas/myschema2\",\n  \"@type\": \"nxv:Schema\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"NodeShape\",\n      \"nodeKind\": \"BlankNode:OrIRI\",\n      \"property\": [\n        {\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1,\n          \"path\": \"ex:name\"\n        },\n        {\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1,\n          \"path\": \"ex:bool\"\n        },\n        {\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1,\n          \"path\": \"ex:number\"\n        }\n      ],\n      \"targetClass\": \"ex:Custom\"\n    }\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 1,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Fetch a schema (specific tag)"},{"location":"/docs/api/kg/kg-schemas-api.html#list-schemas","text":"GET /v1/schemas/{org_label}/{project_label}?from={from}&size={size}&deprecated={deprecated}&q={full_text_search_query}\nwhere…\n{full_text_search_query}: String - can be provided to select only the schemas in the collection that have attribute values matching (containing) the provided token; when this field is provided the results will also include score values for each result {from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting schemas based on their deprecation status\nExample\nRequest curl \"https://nexus.example.com/v1/schemas/myorg/myproj\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/shacl-20170720.json\"\n  ],\n  \"_total\": 1,\n  \"_results\": [\n    {\n      \"@id\": \"https://bluebrain.github.io/nexus/schemas/myschema2\",\n      \"@type\": \"https://bluebrain.github.io/nexus/vocabulary/Schema\",\n      \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-17T15:05:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_rev\": 4,\n      \"_deprecated\": true\n    }\n  ]\n}Full source at GitHub","title":"List schemas"},{"location":"/docs/api/kg/kg-resolvers-api.html","text":"","title":"Resolvers"},{"location":"/docs/api/kg/kg-resolvers-api.html#resolvers","text":"Resolvers are rooted in the /v1/resolvers/{org_label}/{project_label} collection and are used in the following scenarios\nBring the content of the value on the owl:imports predicate for schema resources. The value is the @id of the resource. E.g.: You can define owl imports on a schema, as follows \"owl:imports\": \"http://example.com/myid\". The resolver will try to find a resource with \"@id\": \"http://example.com/myid\" and if found, will bring the payload into the original resource. Bring the content of the @context links. The value is the @id of the resource. E.g.: A resource might define the context as follows: \"@context\": \"http://example.com/id\". The resolver will try to find a resource with \"@id\": \"http://example.com/id\" and if found, will bring the payload into the original resource.\nEach resolver…\nbelongs to a project identifier by the label {project_label} inside an organization identifier by the label {org_label} it is validated against the resolver schema.\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nRunning examples with Postman The simplest way to explore our API is using Postman. Once downloaded, import the resolvers collection. If your deployment is protected by an access token: Edit the imported collection -> Click on the Authorization tab -> Fill the token field.","title":"Resolvers"},{"location":"/docs/api/kg/kg-resolvers-api.html#resolver-types","text":"There are several types of resolvers, which perform resolution in different scopes.","title":"Resolver types"},{"location":"/docs/api/kg/kg-resolvers-api.html#inproject-resolver","text":"The scope of the resolution is the current project where the resource resides. In other words:\nSchema A can import schema B using the owl:import as long as schema B is located on the same project as schema A. Resource A can reference resource’s context B (inside @context) as long as resource B is located on the same project as resource A.\nThis resolver gets automatically created when the project is created and it cannot be modified.\nInProject resolver payload\n{\n    \"@id\": \"nxv:InProject\",\n    \"@type\": [ \"InProject\", \"Resolver\" ],\n    \"priority\": {priority},\n}\nwhere {priority} is a numeric value (from 1 - 100) which defines the resolution priority when attempting to find the resource with a particular @id.","title":"InProject resolver"},{"location":"/docs/api/kg/kg-resolvers-api.html#inaccount-resolver","text":"The scope of the resolution is the current organization where the resource resides. Account resolution defines a collection of identities I to enforce ACLs. In other words:\nSchema A can import schema B using the owl:import as long as schema B is located on the same organization as schema A and as long I have schemas/read permissions on the schema B project. Resource A can reference resource’s context B (inside @context) as long as resource B is located on the same organization as resource A and as long as I have schemas/read permissions on the schema B project.\nInAccount resolver payload\n{\n  \"@id\": \"{someid}\",\n  \"@type\": [\"Resolver\", \"InAccount\"],\n  \"resourceTypes\": [\"{resourceType}\", ...],\n  \"identities\": [ {_identity_}, {...} ],\n  \"priority\": {priority}\n}\nwhere…\n{resourceType}: Iri - resolves only the resources with @type containing {resourceType}. This field is optional. {priority}: Number - value (from 1 - 100) which defines the resolution priority when attempting to find the resource with a particular @id. _identity_: Json object - the identity against which to enforce ACLs during resolution process. {someid}: Iri - the @id value for this resolver.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver\" -d \\\n'{\n  \"@type\": [\n    \"Resolver\",\n    \"InAccount\"\n  ],\n  \"resourceTypes\": [\n    \"nxv:Schema\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"group\": \"some-project\"\n    }\n  ],\n  \"priority\": 50\n}'Full source at GitHub Payload {\n  \"@type\": [\n    \"Resolver\",\n    \"InAccount\"\n  ],\n  \"resourceTypes\": [\n    \"nxv:Schema\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myRealm\",\n      \"group\": \"some-project\"\n    }\n  ],\n  \"priority\": 50\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"nxv:Resolver\",\n    \"nxv:InAccount\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 1,\n  \"_deprecated\": false\n}Full source at GitHub","title":"InAccount resolver"},{"location":"/docs/api/kg/kg-resolvers-api.html#crossproject-resolver","text":"The scope of the resolution is the collections of projects P defined on the resolver. CrossProject resolution also defines a collection of identities I to enforce ACLs. In other words:\nSchema A can import schema B using the owl:import as long as schema B is located on some of the projects from the collection P and as long I have schemas/read permissions on the schema B project. Resource A can reference resource’s context B (inside @context) as long as resource B is located on some of the projects from the collection P and as long as I have schemas/read permissions on the schema B project.\nCrossProject resolver payload\n{\n  \"@id\": \"{someid}\",\n  \"@type\": [\"Resolver\", \"CrossProject\"],\n  \"resourceTypes\": [\"{resourceType}\", ...],\n  \"projects\": [\"{project}\", ... ],\n  \"identities\": [ {_identity_}, {...} ],\n  \"priority\": 50\n}\nwhere…\n{resourceType}: Iri - resolves only the resources with @type containing {resourceType}. This field is optional. {priority}: Number - value (from 1 - 100) which defines the resolution priority when attempting to find the resource with a particular @id. {project}: String - the user friendly reference to the project from where the resolution process will attempt to find the @id’s. It follows the format {organization}/{project}. _identity_: Json object - the identity against which to enforce ACLs during resolution process. {someid}: Iri - the @id value for this resolver.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver\" -d \\\n'{\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}'Full source at GitHub Payload {\n  \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myresolver\",\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"nxv:Resolver\",\n    \"nxv:CrossProject\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 1,\n  \"_deprecated\": false\n}Full source at GitHub","title":"CrossProject resolver"},{"location":"/docs/api/kg/kg-resolvers-api.html#create-a-resolver-using-post","text":"POST /v1/resolver/{org_label}/{project_label}\n  {...}\nThe json payload:\nIf the @id value is found on the payload, this @id will be used. If the @id value is not found on the payload, an @id will be generated as follows: base:{UUID}. The base is the prefix defined on the resolver’s project ({project_label}).\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resolvers/myorg/myproj\" -d \\\n'{\n  \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myresolver\",\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}'Full source at GitHub Payload {\n  \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myresolver\",\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"nxv:Resolver\",\n    \"nxv:CrossProject\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 1,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Create a resolver using POST"},{"location":"/docs/api/kg/kg-resolvers-api.html#create-a-resolver-using-put","text":"This alternative endpoint to create a resolver is useful in case the json payload does not contain an @id but you want to specify one. The @id will be specified in the last segment of the endpoint URI.\nPUT /v1/resolvers/{org_label}/{project_label}/{resolver_id}\n  {...}\nNote that if the payload contains an @id different from the {resolver_id}, the request will fail.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver\" -d \\\n'{\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}'Full source at GitHub Payload {\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"nxv:Resolver\",\n    \"nxv:CrossProject\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 1,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Create a resolver using PUT"},{"location":"/docs/api/kg/kg-resolvers-api.html#update-a-resolver","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to a resolver without having had seen the previous revision of the resolver, the last revision needs to be passed as a query parameter.\nPUT /v1/resolvers/{org_label}/{project_label}/{resolver_id}?rev={previous_rev}\n  {...}\n… where {previous_rev} is the last known revision number for the resolver.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver?rev=1\" -d \\\n'{\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}'Full source at GitHub Payload {\n  \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myresolver\",\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"nxv:Resolver\",\n    \"nxv:CrossProject\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:10:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 2,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Update a resolver"},{"location":"/docs/api/kg/kg-resolvers-api.html#tag-a-resolver","text":"Links a resolver revision to a specific name.\nTagging a resolver is considered to be an update as well.\nPUT /v1/resolvers/{org_label}/{project_label}/{resolver_id}/tags?rev={previous_rev}\n  {\n    \"tag\": \"{name}\",\n    \"rev\": {rev}\n  }\n… where\n{previous_rev}: Number - the last known revision for the resolver. {name}: String - label given to the resolver at specific revision. {rev}: Number - the revision to link the provided {name}.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver/tags?rev=2\" -d \\\n'{\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}'Full source at GitHub Payload {\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"nxv:Resolver\",\n    \"nxv:CrossProject\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 3,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Tag a resolver"},{"location":"/docs/api/kg/kg-resolvers-api.html#add-attachment-to-a-resolver","text":"Adds a binary to an already existing resolver\nPUT /v1/resolvers/{org_label}/{project_label}/{resolver_id}/atachments/{name}?rev={previous_rev}\n…where\n{previous_rev}: is the last known revision number for the resolver. {name}: String - the attachment identifier. This value is uniquely identifying the attachment per project.\nExample\nRequest curl -XPUT -F \"file=@/path/to/myfile.jpg\" \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver/attachments/myfile.jpg?rev=3\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"nxv:Resolver\",\n    \"nxv:CrossProject\"\n  ],\n  \"_distribution\": [\n    {\n      \"@type\": \"dcat:Distribution\",\n      \"_byteSize\": 48144,\n      \"_digest\": {\n        \"_algorithm\": \"SHA-256\",\n        \"_value\": \"721d03056b82a22c54f30fd3c68b41dfe5f53828911984e47182d82cfbac9f36\"\n      },\n      \"_downloadURL\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/attachments/myfile.jpg\",\n      \"_mediaType\": \"image/jpeg\",\n      \"_originalFileName\": \"myfile.jpg\"\n    }\n  ],\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 4,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Add attachment to a resolver"},{"location":"/docs/api/kg/kg-resolvers-api.html#delete-attachment-from-a-resolver","text":"Deletes the attachment metadata from the latest revision of the resolver. The attachment will still be accessible accessing the previous revision.\nDELETE /v1/resolvers/{org_label}/{project_label}/{resolver_id}/atachments/{name}?rev={previous_rev}\n…where\n{previous_rev}: is the last known revision number for the resolver. {name}: String - the attachment identifier. This value is uniquely identifying the attachment per project.\nExample\nRequest curl -XDELETE -F \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver/attachments/myfile.jpg?rev=4\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"nxv:Resolver\",\n    \"nxv:CrossProject\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 5,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Delete attachment from a resolver"},{"location":"/docs/api/kg/kg-resolvers-api.html#fetch-attachment-from-a-resolver-current-revision-","text":"GET /v1/resolvers/{org_label}/{project_label}/{resolver_id}/atachments/{name}\n…where {name} is the attachment identifier.\nExample\nRequest curl \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver/attachments/myfile.jpg\"Full source at GitHub","title":"Fetch attachment from a resolver (current revision)"},{"location":"/docs/api/kg/kg-resolvers-api.html#fetch-attachment-from-a-resolver-specific-revision-","text":"GET /v1/resolvers/{org_label}/{project_label}/{resolver_id}/atachments/{name}?rev={rev}\n… where - {name} - String: is the attachment identifier. - {rev} - Long: is the revision number of the resolver to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver/attachments/myfile.jpg?rev=4\"Full source at GitHub","title":"Fetch attachment from a resolver (specific revision)"},{"location":"/docs/api/kg/kg-resolvers-api.html#fetch-attachment-from-a-resolver-specific-tag-","text":"GET /v1/resolvers/{org_label}/{project_label}/{resolver_id}/atachments/{name}?tag={tag}\n… where - {name} - String: is the attachment identifier. - {tag} - String: is the tag of the resolver to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver/attachments/myfile.jpg?tag=mytag\"Full source at GitHub","title":"Fetch attachment from a resolver (specific tag)"},{"location":"/docs/api/kg/kg-resolvers-api.html#deprecate-a-resolver","text":"Locks the resolver, so no further operations can be performed. It will also not be taken into account in the resolution process.\nDeprecating a resolver is considered to be an update as well.\nDELETE /v1/resolvers/{org_label}/{project_label}/{resolver_id}?rev={previous_rev}\n… where {previous_rev} is the last known revision number for the resolver.\nExample\nRequest curl -XDELETE \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver?rev=5\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"nxv:Resolver\",\n    \"nxv:CrossProject\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 6,\n  \"_deprecated\": true\n}Full source at GitHub","title":"Deprecate a resolver"},{"location":"/docs/api/kg/kg-resolvers-api.html#fetch-a-resolver-current-version-","text":"GET /v1/resolvers/{org_label}/{project_label}/{resolver_id}\nExample\nRequest curl \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resolver.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myresolver\",\n\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"@type\": \"User\",\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50,\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 4,\n  \"_deprecated\": true\n}Full source at GitHub","title":"Fetch a resolver (current version)"},{"location":"/docs/api/kg/kg-resolvers-api.html#fetch-a-resolver-specific-version-","text":"GET /v1/resolvers/{org_label}/{project_label}/{resolver_id}?rev={rev}\n… where {rev} is the revision number of the resolver to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resolver.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myresolver\",\n\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"@type\": \"User\",\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50,\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 4,\n  \"_deprecated\": true\n}Full source at GitHub","title":"Fetch a resolver (specific version)"},{"location":"/docs/api/kg/kg-resolvers-api.html#fetch-a-resolver-specific-tag-","text":"GET /v1/resolvers/{org_label}/{project_label}/{resolver_id}?tag={tag}\n… where {tag} is the tag of the resolver to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver?tag=mytag\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resolver.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myresolver\",\n\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"@type\": \"User\",\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50,\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 1,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Fetch a resolver (specific tag)"},{"location":"/docs/api/kg/kg-resolvers-api.html#list-resolvers","text":"GET /v1/resolvers/{org_label}/{project_label}?from={from}&size={size}&deprecated={deprecated}&q={full_text_search_query}\nwhere…\n{full_text_search_query}: String - can be provided to select only the resolvers in the collection that have attribute values matching (containing) the provided token; when this field is provided the results will also include score values for each result {from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting resolvers based on their deprecation status\nExample\nRequest curl \"https://nexus.example.com/v1/resolvers/myorg/myproj\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resolver.json\"\n  ],\n  \"_total\": 2,\n  \"_results\": [\n    {\n      \"@id\": \"nxv:InProject\",\n      \"@type\": [\n        \"InProject\",\n        \"Resolver\"\n      ],\n      \"priority\": 1,\n      \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:InProject\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_createdAt\": \"2018-09-18T09:50:00.801Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T10:00:00.801Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_rev\": 1,\n      \"_deprecated\": true\n    },\n    {\n      \"@id\": \"nxv:myresolver\",\n      \"@type\": [\n        \"Resolver\",\n        \"CrossProject\"\n      ],\n      \"projects\": [\n        \"org1/project1\",\n        \"org1/project2\"\n      ],\n      \"identities\": [\n        {\n          \"@type\": \"User\",\n          \"realm\": \"myrealm\",\n          \"subject\": \"name\"\n        }\n      ],\n      \"priority\": 50,\n      \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_rev\": 4,\n      \"_deprecated\": true\n    }\n  ]\n}Full source at GitHub","title":"List resolvers"},{"location":"/docs/api/kg/kg-views-api.html","text":"","title":"Views"},{"location":"/docs/api/kg/kg-views-api.html#views","text":"Views are rooted in the /v1/views/{org_label}/{project_label} collection and are used to index the selected resources into a bucket.\nEach view…\nbelongs to a project identifier by the label {project_label} inside an organization identifier by the label {org_label} it is validated against the view schema.\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nRunning examples with Postman The simplest way to explore our API is using Postman. Once downloaded, import the views collection. If your deployment is protected by an access token: Edit the imported collection -> Click on the Authorization tab -> Fill the token field.","title":"Views"},{"location":"/docs/api/kg/kg-views-api.html#view-types","text":"There are several types of views, which relies on different technology to perform the indexing","title":"View types"},{"location":"/docs/api/kg/kg-views-api.html#sparqlview","text":"This view creates a SPARQL namespace where it stores all the resource’s graph inside the view project.\nThis view gets automatically created when the project is created and it cannot be modified.\nSparqlView payload\n{\n  \"@id\": \"nxv:defaultSparqlIndex\",\n  \"@type\": [ \"View\", \"SparqlView\" ]\n}","title":"SparqlView"},{"location":"/docs/api/kg/kg-views-api.html#elasticsearchview","text":"Note The described features are in @Alpha phase of development. The operations might change in the future.\nThis view creates an ElasticSearch index where it stores the selected resources inside the view project.\nA default view gets automatically created when the project is created but other views can be created.\nElasticSearchView payload\n{\n  \"@id\": \"{someid}\",\n  \"@type\": [ \"View\", \"ElasticSearchView\", \"Alpha\" ],\n  \"resourceSchemas\": [ \"{resourceSchema}\", ...],\n  \"resourceTag\": \"{tag}\",\n  \"sourceAsText\": {sourceAsText},\n  \"includeMetadata\": {includeMetadata},\n  \"mapping\": _elasticsearch mapping_\n}\nwhere…\n{resourceSchema}: Iri - It selects the resources that are validated against the provided schema Iri. This field is optional. {tag}: String - It selects the resources with the provided tag. This field is optional. _elasticsearch mapping_: Json object - It defines the value types for the Json keys, as stated at the ElasticSearch mapping documentation. {sourceAsText}: Boolean - If true, the resource’s payload will be stored in the ElasticSearch document as a single escaped string value of the key _original_source. If false, the resource’s payload will be stored normally in the ElasticSearch document. The default value is false. {includeMetadata}: Boolean - If true, the resource’s nexus metadata (_constrainedBy, _deprecated, …) will be stored in the ElasticSearch document. Otherwise it won’t. The default value is false. {someid}: Iri - the @id value for this view.","title":"ElasticSearchView"},{"location":"/docs/api/kg/kg-views-api.html#aggregateelasticsearchview","text":"Note The described features are in @Alpha phase of development. The operations might change in the future.\nThis view is an aggregate of ElasticSearchViews. The view itself does not create any index, but it reference to the already existing indices of the linked ElasticSearchViews.\nWhen performing queries on the _search endpoint, this view will make use of the multi-index query capabilities of ElasticSearch in order to select the indices of every view present on this aggregate view.\nIf the caller does not have the permission views/query on all the projects defined on the aggregated view, only a subset of indices (or none) will be selecting, respecting the defined permissions.\nAggregateElasticSearchView payload\n{\n  \"@id\": \"{someid}\",\n  \"@type\": [ \"View\", \"AggregateElasticSearchView\", \"Alpha\" ],\n  \"views\": [ \n    {\n        \"project\": \"{project}\",\n        \"viewId\": \"{viewId}\"\n    },\n    ...\n  ]\n}\nwhere…\n{project}: String - the project, defined as {org_label}/{project_label}, where the {viewId} is located. {viewId}: Iri - The view @id value to be aggregated.","title":"AggregateElasticSearchView"},{"location":"/docs/api/kg/kg-views-api.html#create-an-elasticsearchview-using-post","text":"POST /v1/view/{org_label}/{project_label}\n  {...}\nThe json payload:\nIf the @id value is found on the payload, this @id will be used. If the @id value is not found on the payload, an @id will be generated as follows: base:{UUID}. The base is the prefix defined on the view’s project ({project_label}).\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/views/myorg/myproj\" -d \\\n'{\n  \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myview\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"Alpha\"\n  ],\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      }\n    }\n  },\n  \"includeMetadata\": false,\n  \"sourceAsText\": false,\n  \"resourceSchemas\": \"https://bluebrain.github.io/nexus/schemas/myschema\"\n}'Full source at GitHub Payload {\n  \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myview\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"Alpha\"\n  ],\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      }\n    }\n  },\n  \"includeMetadata\": false,\n  \"sourceAsText\": false,\n  \"resourceSchemas\": \"https://bluebrain.github.io/nexus/schemas/myschema\"\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/view.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myview\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\",\n    \"Alpha\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create an ElasticSearchView using POST"},{"location":"/docs/api/kg/kg-views-api.html#create-an-elasticsearchview-using-put","text":"This alternative endpoint to create a view is useful in case the json payload does not contain an @id but you want to specify one. The @id will be specified in the last segment of the endpoint URI.\nPUT /v1/views/{org_label}/{project_label}/{view_id}\n  {...}\nNote that if the payload contains an @id different from the {view_id}, the request will fail.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview\" -d \\\n'{\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"Alpha\"\n  ],\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      }\n    }\n  },\n  \"includeMetadata\": false,\n  \"sourceAsText\": false,\n  \"resourceSchemas\": \"https://bluebrain.github.io/nexus/schemas/myschema\"\n}'Full source at GitHub Payload {\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"Alpha\"\n  ],\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      }\n    }\n  },\n  \"includeMetadata\": false,\n  \"sourceAsText\": false,\n  \"resourceSchemas\": \"https://bluebrain.github.io/nexus/schemas/myschema\"\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/view.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myview\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\",\n    \"Alpha\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create an ElasticSearchView using PUT"},{"location":"/docs/api/kg/kg-views-api.html#update-an-elasticsearchview","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to a view without having had seen the previous revision of the view, the last revision needs to be passed as a query parameter.\nPUT /v1/views/{org_label}/{project_label}/{view_id}?rev={previous_rev}\n  {...}\n… where {previous_rev} is the last known revision number for the view.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview?rev=1\" -d \\\n'{\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"Alpha\"\n  ],\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      }\n    }\n  },\n  \"includeMetadata\": false,\n  \"sourceAsText\": false,\n  \"resourceSchemas\": \"https://bluebrain.github.io/nexus/schemas/myschema\"\n}'Full source at GitHub Payload {\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"Alpha\"\n  ],\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      }\n    }\n  },\n  \"includeMetadata\": false,\n  \"sourceAsText\": false,\n  \"resourceSchemas\": \"https://bluebrain.github.io/nexus/schemas/myschema\"\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/view.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myview\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\",\n    \"Alpha\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T16:42:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Update an ElasticSearchView"},{"location":"/docs/api/kg/kg-views-api.html#create-an-aggregateelasticsearchview-using-put","text":"This alternative endpoint to create a view is useful in case the json payload does not contain an @id but you want to specify one. The @id will be specified in the last segment of the endpoint URI.\nPUT /v1/views/{org_label}/{project_label}/{view_id}\n  {...}\nNote that if the payload contains an @id different from the {view_id}, the request will fail.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/views/myorg/myproj3/nxv:myagg\" -d \\\n'{\n  \"@context\": {\n    \"nxv\": \"https://bluebrain.github.io/nexus/vocabulary/\"\n  },\n  \"@type\": [\n    \"AggregateElasticSearchView\",\n    \"Alpha\"\n  ],\n  \"views\": [\n    {\n      \"project\": \"myorg/myproj\",\n      \"viewId\": \"nxv:myview\"\n    },\n    {\n      \"project\": \"myorg/myproj2\",\n      \"viewId\": \"nxv:myview2\"\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"@context\": {\n    \"nxv\": \"https://bluebrain.github.io/nexus/vocabulary/\"\n  },\n  \"@type\": [\n    \"AggregateElasticSearchView\",\n    \"Alpha\"\n  ],\n  \"views\": [\n    {\n      \"project\": \"myorg/myproj\",\n      \"viewId\": \"nxv:myview\"\n    },\n    {\n      \"project\": \"myorg/myproj2\",\n      \"viewId\": \"nxv:myview2\"\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/view.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myview\",\n  \"@type\": [\n    \"AggregateElasticSearchView\",\n    \"View\",\n    \"Alpha\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj3/nxv:myagg\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj3\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create an AggregateElasticSearchView using PUT"},{"location":"/docs/api/kg/kg-views-api.html#tag-a-view","text":"Links a view’s revision to a specific name.\nTagging a view is considered to be an update as well.\nPUT /v1/views/{org_label}/{project_label}/{view_id}/tags?rev={previous_rev}\n  {\n    \"tag\": \"{name}\",\n    \"rev\": {rev}\n  }\n… where\n{previous_rev}: Number - the last known revision for the resolver. {name}: String - label given to the view at specific revision. {rev}: Number - the revision to link the provided {name}.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview/tags?rev=2\" -d \\\n'{\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}'Full source at GitHub Payload {\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myview\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\",\n    \"Alpha\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 3,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T16:52:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Tag a View"},{"location":"/docs/api/kg/kg-views-api.html#deprecate-a-view","text":"Locks the view, so no further operations can be performed. It also stops indexing any more resources into it.\nDeprecating a view is considered to be an update as well.\nDELETE /v1/views/{org_label}/{project_label}/{view_id}?rev={previous_rev}\n… where {previous_rev} is the last known revision number for the view.\nExample\nRequest curl -XDELETE \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview?rev=5\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myview\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\",\n    \"Alpha\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 6,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Deprecate a view"},{"location":"/docs/api/kg/kg-views-api.html#fetch-a-view-current-version-","text":"GET /v1/views/{org_label}/{project_label}/{view_id}\nExample\nRequest curl \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/view.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myview2\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\",\n    \"Alpha\"\n  ],\n  \"includeMetadata\": false,\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      }\n    }\n  },\n  \"resourceSchemas\": [\n    \"https://bluebrain.github.io/nexus/schemas/myschema\"\n  ],\n  \"sourceAsText\": false,\n  \"_uuid\": \"4f90ceff-45b7-442d-8536-d41705321d50\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 4,\n  \"_deprecated\": true\n}Full source at GitHub","title":"Fetch a view (current version)"},{"location":"/docs/api/kg/kg-views-api.html#fetch-a-view-specific-version-","text":"GET /v1/views/{org_label}/{project_label}/{view_id}?rev={rev}\n… where {rev} is the revision number of the view to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/view.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myview2\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\",\n    \"Alpha\"\n  ],\n  \"includeMetadata\": false,\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      }\n    }\n  },\n  \"resourceSchemas\": [\n    \"https://bluebrain.github.io/nexus/schemas/myschema\"\n  ],\n  \"sourceAsText\": false,\n  \"_uuid\": \"4f90ceff-45b7-442d-8536-d41705321d50\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 4,\n  \"_deprecated\": true\n}Full source at GitHub","title":"Fetch a view (specific version)"},{"location":"/docs/api/kg/kg-views-api.html#fetch-a-view-specific-tag-","text":"GET /v1/views/{org_label}/{project_label}/{view_id}?tag={tag}\n… where {tag} is the tag of the view to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview?tag=mytag\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/view.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myview2\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\",\n    \"Alpha\"\n  ],\n  \"includeMetadata\": false,\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      }\n    }\n  },\n  \"resourceSchemas\": [\n    \"https://bluebrain.github.io/nexus/schemas/myschema\"\n  ],\n  \"sourceAsText\": false,\n  \"_uuid\": \"4f90ceff-45b7-442d-8536-d41705321d50\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 1,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Fetch a view (specific tag)"},{"location":"/docs/api/kg/kg-views-api.html#list-views","text":"GET /v1/views/{org_label}/{project_label}?from={from}&size={size}&deprecated={deprecated}&rev={rev}&type={type}&createdBy={createdBy}&updatedBy={updatedBy}\nwhere…\n{full_text_search_query}: String - can be provided to select only the views in the collection that have attribute values matching (containing) the provided token; when this field is provided the results will also include score values for each result {from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting views based on their deprecation status {rev}: Number - can be used to filter the resulting views based on their revision value {type}: Iri - can be used to filter the resulting views based on their @type value. This parameter can appear multiple times, filtering further the @type value. {createdBy}: Iri - can be used to filter the resulting views based on their creator {updatedBy}: Iri - can be used to filter the resulting views based on the person which performed the last update\nExample\nRequest curl \"https://nexus.example.com/v1/views/myorg/myproj\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 3,\n  \"_results\": [\n    {\n      \"@id\": \"nxv:defaultElasticIndex\",\n      \"@type\": [\n        \"https://bluebrain.github.io/nexus/vocabulary/View\",\n        \"https://bluebrain.github.io/nexus/vocabulary/Alpha\",\n        \"https://bluebrain.github.io/nexus/vocabulary/ElasticSearchView\"\n      ],\n      \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:defaultElasticIndex\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_rev\": 1,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    },\n    {\n      \"@id\": \"nxv:defaultSparqlIndex\",\n      \"@type\": [\n        \"https://bluebrain.github.io/nexus/vocabulary/View\",\n        \"https://bluebrain.github.io/nexus/vocabulary/SparqlView\"\n      ],\n      \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:defaultSparqlIndex\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_rev\": 1,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    },\n    {\n      \"@id\": \"nxv:myview2\",\n      \"@type\": [\n        \"https://bluebrain.github.io/nexus/vocabulary/ElasticSearchView\",\n        \"https://bluebrain.github.io/nexus/vocabulary/View\",\n        \"https://bluebrain.github.io/nexus/vocabulary/Alpha\"\n      ],\n      \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    }\n  ]\n}Full source at GitHub","title":"List views"},{"location":"/docs/api/kg/kg-views-api.html#elasticsearch-query","text":"Provides search functionality on the ElasticSearchView or AggregateElasticSearchView content.\nPOST /v1/views/{org_label}/{project_label}/{view_id}/_search\n  {...}\nThe supported payload is defined on the ElasticSearch documentation\nThe string documents is used as a prefix of the default ElasticSearch view_id\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview/_search\" -d \\\n'{\n  \"query\": {\n    \"term\": {\n      \"_deprecated\": true\n    }\n  }\n}'Full source at GitHub Response {\n  \"_shards\": {\n    \"failed\": 0,\n    \"skipped\": 0,\n    \"successful\": 0,\n    \"total\": 0\n  },\n  \"hits\": {\n    \"hits\": [\n      {\n        \"_score\": 1.2039728,\n        \"_id\": \"http://example.com/myview\",\n        \"_index\": \"kg_v1_803da242-d510-4e1a-a12d-d0e0b7018a41_684bd815-9273-46f4-ac1c-0383d4a98254_1\",\n        \"_source\": {\n          \"@id\": \"http://example.com/myview\",\n          \"@type\": [\n            \"https://bluebrain.github.io/nexus/vocabulary/View\",\n            \"https://bluebrain.github.io/nexus/vocabulary/ElasticSearchView\",\n            \"https://bluebrain.github.io/nexus/vocabulary/Alpha\"\n          ],\n          \"_original_source\": \"{\\\"mapping\\\":\\\"{\\\\\\\"dynamic\\\\\\\":false,\\\\\\\"properties\\\\\\\":{\\\\\\\"@id\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"keyword\\\\\\\"},\\\\\\\"@type\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"keyword\\\\\\\"},\\\\\\\"name\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"keyword\\\\\\\"},\\\\\\\"number\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"long\\\\\\\"},\\\\\\\"bool\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"boolean\\\\\\\"}}}\\\",\\\"_uuid\\\":\\\"89dd9858-cf87-4c46-94c2-24da0fcae0aa\\\",\\\"@context\\\":\\\"https://bluebrain.github.io/nexus/contexts/view\\\",\\\"@type\\\":[\\\"View\\\",\\\"ElasticSearchView\\\",\\\"Alpha\\\"],\\\"includeMetadata\\\":true,\\\"sourceAsText\\\":false}\",\n          \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n          \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n          \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n          \"_rev\": 6,\n          \"_deprecated\": true,\n          \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n          \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n          \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n          \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n        },\n        \"_type\": \"doc\"\n      }\n    ],\n    \"max_score\": 1.2039728,\n    \"total\": 1\n  },\n  \"timed_out\": false,\n  \"took\": 11\n}Full source at GitHub","title":"ElasticSearch query"},{"location":"/docs/api/kg/kg-views-api.html#sparql-query","text":"Provides search functionality on the SparqlView content.\nPOST /v1/views/{org_label}/{project_label}/graph/sparql\n  \"...\"\nThe supported payload is defined on the SparQL documentation The Content-Type HTTP header for this request is application/sparql-query.\nExample\nRequest curl -XPOST -H \"Content-Type: application/sparql-query\" \"https://nexus.example.com/v1/views/myorg/myproj/graph/sparql\" -d \\\n'SELECT ?s where {?s ?p ?o} LIMIT 2'Full source at GitHub Response {\n  \"head\": {\n    \"vars\": [\n      \"s\"\n    ]\n  },\n  \"results\": {\n    \"bindings\": [\n      {\n        \"s\": {\n          \"type\": \"uri\",\n          \"value\": \"http://example.com/myview\"\n        }\n      },\n      {\n        \"s\": {\n          \"type\": \"uri\",\n          \"value\": \"http://example.com/other\"\n        }\n      }\n    ]\n  }\n}Full source at GitHub","title":"SparQL query"},{"location":"/docs/api/kg/kg-views-api.html#views-internals","text":"When an asynchronous process that reads the view events from the Primary Store gets triggered, a new index (SparQL or ElasticSearch) gets created. After that, an endpoint (/sparql for SparQL view or /_search for ElasticSearch view) becomes available. The client can then perform queries against those endpoints.\nThe view provides the configuration of the index and defines which Events are going to be indexed.","title":"Views internals"},{"location":"/docs/api/kg/kg-resources-api.html","text":"","title":"Resources"},{"location":"/docs/api/kg/kg-resources-api.html#resources","text":"Generic resources are rooted in the /v1/resources/{org_label}/{project_label}/{schema_id} collection.\nEach resource…\nbelongs to a project identifier by the label {project_label} inside an organization identifier by the label {org_label} it is validated against a schema ({schema_id}).\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nRunning examples with Postman The simplest way to explore our API is using Postman. Once downloaded, import the resources collection. If your deployment is protected by an access token: Edit the imported collection -> Click on the Authorization tab -> Fill the token field.","title":"Resources"},{"location":"/docs/api/kg/kg-resources-api.html#create-a-resource-using-post","text":"POST /v1/resources/{org_label}/{project_label}/{schema_id}\n  {...}\nThe json payload:\nIf the @id value is found on the payload, this @id will be used. If the @id value is not found on the payload, an @id will be generated as follows: base:{UUID}. The base is the prefix defined on the resource’s project ({project_label}).\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resources/myorg/myproj/myschema\" -d \\\n'{\n  \"@context\": {\n    \"ex\": \"http://example.com/\",\n    \"@vocab\": \"http://example.com/\"\n  },\n  \"@type\": \"ex:Custom\",\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"bool\": false\n}'Full source at GitHub Payload {\n  \"@context\": {\n    \"ex\": \"http://example.com/\",\n    \"@vocab\": \"http://example.com/\"\n  },\n  \"@type\": \"ex:Custom\",\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"bool\": false\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 1,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Create a resource using POST"},{"location":"/docs/api/kg/kg-resources-api.html#create-a-resource-using-put","text":"This alternative endpoint to create a resource is useful in case the json payload does not contain an @id but you want to specify one. The @id will be specified in the last segment of the endpoint URI.\nPUT /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}\n  {...}\nNote that if the payload contains an @id different from the {resource_id}, the request will fail.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\" -d \\\n'{\n  \"@context\": {\n    \"ex\": \"http://example.com/\",\n    \"@vocab\": \"http://example.com/\"\n  },\n  \"@type\": \"ex:Custom\",\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"bool\": false\n}'Full source at GitHub Payload {\n  \"@context\": {\n    \"ex\": \"http://example.com/\",\n    \"@vocab\": \"http://example.com/\"\n  },\n  \"@type\": \"ex:Custom\",\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"bool\": false\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 1,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Create a resource using PUT"},{"location":"/docs/api/kg/kg-resources-api.html#update-a-resource","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to a resource without having had seen the previous revision of the resource, the last revision needs to be passed as a query parameter.\nPUT /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}?rev={previous_rev}\n  {...}\n… where {previous_rev} is the last known revision number for the resource.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0?rev=1\" -d \\\n'{\n  \"@context\": {\n    \"ex\": \"http://example.com/\",\n    \"@vocab\": \"http://example.com/\"\n  },\n  \"@type\": \"ex:Custom\",\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"bool\": false\n}'Full source at GitHub Payload {\n  \"@context\": {\n    \"ex\": \"http://example.com/\",\n    \"@vocab\": \"http://example.com/\"\n  },\n  \"@type\": \"ex:Custom\",\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"bool\": false\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:56:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 2,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Update a resource"},{"location":"/docs/api/kg/kg-resources-api.html#tag-a-resource","text":"Links a resource revision to a specific name.\nTagging a resource is considered to be an update as well.\nPUT /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}/tags?rev={previous_rev}\n  {\n    \"tag\": \"{name}\",\n    \"rev\": {rev}\n  }\n… where\n{previous_rev}: is the last known revision number for the resource. {name}: String - label given to the resources at specific revision. {rev}: Number - the revision to link the provided {name}.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/tags?rev=2\" -d \\\n'{\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}'Full source at GitHub Payload {\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:58:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 3,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Tag a resource"},{"location":"/docs/api/kg/kg-resources-api.html#add-attachment-to-a-resource","text":"Adds a binary to an already existing resource\nPUT /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}/atachments/{name}?rev={previous_rev}\n…where\n{previous_rev}: is the last known revision number for the resource. {name}: String - the attachment identifier. This value is uniquely identifying the attachment per project.\nExample\nRequest curl -XPUT -F \"file=@/path/to/myfile.jpg\" \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/attachments/myfile.jpg?rev=3\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_distribution\": [\n    {\n      \"@type\": \"dcat:Distribution\",\n      \"_byteSize\": 48144,\n      \"_digest\": {\n        \"_algorithm\": \"SHA-256\",\n        \"_value\": \"721d03056b82a22c54f30fd3c68b41dfe5f53828911984e47182d82cfbac9f36\"\n      },\n      \"_downloadURL\": \"https://nexus.example.com/v1/resources/myorg/myproject/resource/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/attachments/myfile.jpg\",\n      \"_mediaType\": \"image/jpeg\",\n      \"_originalFileName\": \"myfile.jpg\"\n    }\n  ],\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/resource/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:58:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 4,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Add attachment to a resource"},{"location":"/docs/api/kg/kg-resources-api.html#delete-attachment-from-a-resource","text":"Deletes the attachment metadata from the latest revision of the resource. The attachment will still be accessible accessing the previous revision.\nDELETE /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}/atachments/{name}?rev={previous_rev}\n…where\n{previous_rev}: is the last known revision number for the resource. {name}: String - the attachment identifier. This value is uniquely identifying the attachment per project.\nExample\nRequest curl -XDELETE -F \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/attachments/myfile.jpg?rev=4\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/resource/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:58:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 5,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Delete attachment from a resource"},{"location":"/docs/api/kg/kg-resources-api.html#fetch-attachment-from-a-resource-current-revision-","text":"GET /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}/atachments/{name}\n…where {name} is the attachment identifier.\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/attachments/myfile.jpg\"  -o myfile.jpgFull source at GitHub","title":"Fetch attachment from a resource (current revision)"},{"location":"/docs/api/kg/kg-resources-api.html#fetch-attachment-from-a-resource-specific-revision-","text":"GET /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}/atachments/{name}?rev={rev}\n… where - {name} - String: is the attachment identifier. - {rev} - Long: is the revision number of the resource to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/attachments/myfile.jpg?rev=4\"  -o myfile.jpgFull source at GitHub","title":"Fetch attachment from a resource (specific revision)"},{"location":"/docs/api/kg/kg-resources-api.html#fetch-attachment-from-a-resource-specific-tag-","text":"GET /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}/atachments/{name}?tag={tag}\n… where - {name} - String: is the attachment identifier. - {tag} - String: is the tag of the resource to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/attachments/myfile.jpg?tag=mytag\" -o myfile.jpgFull source at GitHub","title":"Fetch attachment from a resource (specific tag)"},{"location":"/docs/api/kg/kg-resources-api.html#deprecate-a-resource","text":"Locks the resource, so no further operations can be performed. It also deletes the resource from listing/querying results.\nDeprecating a resource is considered to be an update as well.\nDELETE /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}?rev={previous_rev}\n… where {previous_rev} is the last known revision number for the resource.\nExample\nRequest curl -XDELETE -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0?rev=5\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:02:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 6,\n  \"_deprecated\": true\n}Full source at GitHub","title":"Deprecate a resource"},{"location":"/docs/api/kg/kg-resources-api.html#fetch-a-resource-current-version-","text":"GET /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\"Full source at GitHub Response {\n  \"@context\": [\n    {\n      \"@vocab\": \"http://example.com/\",\n      \"ex\": \"http://example.com/\"\n    },\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"Custom\",\n  \"bool\": false,\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:02:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 4,\n  \"_deprecated\": true\n}Full source at GitHub","title":"Fetch a resource (current version)"},{"location":"/docs/api/kg/kg-resources-api.html#fetch-a-resource-specific-version-","text":"GET /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}?rev={rev}\n… where {rev} is the revision number of the resource to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    {\n      \"@vocab\": \"http://example.com/\",\n      \"ex\": \"http://example.com/\"\n    },\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"Custom\",\n  \"bool\": false,\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:02:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 4,\n  \"_deprecated\": true\n}Full source at GitHub","title":"Fetch a resource (specific version)"},{"location":"/docs/api/kg/kg-resources-api.html#fetch-a-resource-specific-tag-","text":"GET /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}?tag={tag}\n… where {tag} is the tag of the resource to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0?tag=mytag\"Full source at GitHub Response {\n  \"@context\": [\n    {\n      \"@vocab\": \"http://example.com/\",\n      \"ex\": \"http://example.com/\"\n    },\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"Custom\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 1,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Fetch a resource (specific tag)"},{"location":"/docs/api/kg/kg-resources-api.html#list-resources","text":"GET /v1/resources/{org_label}/{project_label}?from={from}&size={size}&deprecated={deprecated}&q={full_text_search_query}\nwhere…\n{full_text_search_query}: String - can be provided to select only the resources in the collection that have attribute values matching (containing) the provided token; when this field is provided the results will also include score values for each result {from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting resources based on their deprecation status\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 1,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n      \"@type\": \"http://example.com/Custom\",\n      \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-17T15:02:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_rev\": 4,\n      \"_deprecated\": true\n    }\n  ]\n}Full source at GitHub","title":"List resources"},{"location":"/docs/api/kg/kg-resources-api.html#list-resources-belonging-to-a-schema","text":"GET /v1/resources/{org_label}/{project_label}/{schemaId}?from={from}&size={size}&deprecated={deprecated}&q={full_text_search_query}\nwhere…\n{full_text_search_query}: String - can be provided to select only the resources in the collection that have attribute values matching (containing) the provided token; when this field is provided the results will also include score values for each result {from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting resources based on their deprecation status\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj/myschema\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 1,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n      \"@type\": \"http://example.com/Custom\",\n      \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-17T15:02:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_rev\": 4,\n      \"_deprecated\": true\n    }\n  ]\n}Full source at GitHub","title":"List resources belonging to a schema"},{"location":"/docs/api/iam/index.html","text":"","title":"Identity & Access Management API"},{"location":"/docs/api/iam/index.html#identity-access-management-api","text":"The IAM API provides operations on three types of resources, realms, permissions and acls.","title":"Identity & Access Management API"},{"location":"/docs/api/iam/index.html#realms","text":"A realm provides with the necessary information to perform authentication against a certain OIDC provider .\nOperations on realms","title":"Realms"},{"location":"/docs/api/iam/index.html#permissions","text":"A permission is the basic unit to provide a way to limit applications’ access to sensitive information.\nOperations on permisions","title":"Permissions"},{"location":"/docs/api/iam/index.html#acls","text":"In order to restrict applications’ access to data by placing restrictions on them, three parameters are important:\npermission: the value used to limit a client (user, group) access to resources. identity: a client identity reference, e.g. a certain user, a group, an anonymous user or someone who is authenticated to a certain realm. path: the location where to apply the restrictions\nAn ACL defines the set of permissions that certain identities have on a concrete path.\nOperations on ACLs","title":"ACLs"},{"location":"/docs/api/iam/index.html#identities","text":"Identities endpoint can be used to fetch user identities.\nOperations on identities","title":"Identities"},{"location":"/docs/api/iam/iam-realms-api.html","text":"","title":"Realms"},{"location":"/docs/api/iam/iam-realms-api.html#realms","text":"Realms are rooted in /v1/realms collection.\nEach realm defines a specific authentication provider. Any of the authentication providers can be used to obtain access tokens that can be used with Nexus.","title":"Realms"},{"location":"/docs/api/iam/iam-realms-api.html#create-a-realm","text":"This operation creates a realm.\nPUT /v1/realms/{realm}\nThe following examples describe the payload used to create a realm.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/realms/realm1\" \\\n    -d '{\"name\":\"Nexus Dev\",\"openIdConfig\":\"https://nexus.example.com/auth/realms/bbp-test/.well-known/openid-configuration\",\"logo\":\"http://nexus.example.com/logo.png\"}'Full source at GitHub Payload {\n  \"name\": \"Nexus Dev\",\n  \"openIdConfig\": \"https://nexus.example.com/auth/realms/bbp-test/.well-known/openid-configuration\",\n  \"logo\": \"http://nexus.example.com/logo.png\"\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/realms/realm1\",\n  \"@type\": \"Realm\",\n  \"_label\": \"realm1\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub\nThe logo parameter is optional.","title":"Create a realm"},{"location":"/docs/api/iam/iam-realms-api.html#update-a-realm","text":"This operation updates a realm.\nPUT /v1/realms/{realm}?rev={previous_rev}\n  {...}\nwhere {previous_rev} is the last known revision number for the realm. The json payload should be the same as the one used to create realms.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/realms/realm1?rev=1\" \\\n    -d '{\"name\":\"Nexus Dev\",\"openIdConfig\":\"https://nexus.example.com/auth/realms/bbp-test/.well-known/openid-configuration\",\"logo\":\"http://nexus.example.com/logo.png\"}'Full source at GitHub Payload {\n  \"name\": \"Nexus Dev\",\n  \"openIdConfig\": \"https://nexus.example.com/auth/realms/bbp-test/.well-known/openid-configuration\",\n  \"logo\": \"http://nexus.example.com/logo.png\"\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/realms/realm1\",\n  \"@type\": \"Realm\",\n  \"_label\": \"realm1\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Update a realm"},{"location":"/docs/api/iam/iam-realms-api.html#delete-a-realm","text":"This operation deletes a realm.\nDELETE /v1/realms/{realm}?rev={previous_rev} {...}\nwhere {previous_rev} is the last known revision number for the realm.\nRequest curl -XDELETE  -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/realms/realm1?rev=2\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/realms/realm1\",\n  \"@type\": \"Realm\",\n  \"_label\": \"realm1\",\n  \"_rev\": 3,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Delete a realm"},{"location":"/docs/api/iam/iam-realms-api.html#list-realms","text":"Lists all available realms.\nGET /v1/realms\nRequest curl \"https://nexus.example.com/v1/realms\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\"\n  ],\n  \"_total\": 2,\n  \"_results\": [\n    {\n      \"@id\": \"http://nexus.example.com/v1/realms/realm1\",\n      \"@type\": \"Realm\",\n      \"name\": \"Github Dev\",\n      \"openIdConfig\": \"http://nexus.example.com/auth/realms/realm1/.well-known/openid-configuration\",\n      \"_label\": \"realm1\",\n      \"_grantTypes\": [\n        \"password\",\n        \"clientCredentials\",\n        \"refreshToken\",\n        \"authorizationCode\",\n        \"implicit\"\n      ],\n      \"_issuer\": \"http://nexus.example.com/auth/realms/realm1\",\n      \"_authorizationEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/auth\",\n      \"_tokenEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/token\",\n      \"_userInfoEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/userinfo\",\n      \"_endSessionEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/logout\",\n      \"_rev\": 3,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2019-01-22T10:50:47.351Z\",\n      \"_createdBy\": \"http://nexus.example.com/v1/anonymous\",\n      \"_updatedAt\": \"2019-01-22T12:24:13.029Z\",\n      \"_updatedBy\": \"http://nexus.example.com/v1/anonymous\"\n    },\n    {\n      \"@id\": \"http://nexus.example.com/v1/realms/realm2\",\n      \"@type\": \"Realm\",\n      \"name\": \"Realm 2\",\n      \"openIdConfig\": \"http://nexus.example.com/auth/realms/realm2/.well-known/openid-configuration\",\n      \"_label\": \"realm2\",\n      \"_grantTypes\": [\n        \"password\",\n        \"clientCredentials\",\n        \"refreshToken\",\n        \"authorizationCode\",\n        \"implicit\"\n      ],\n      \"_issuer\": \"http://nexus.example.com/auth/realms/realm2\",\n      \"_authorizationEndpoint\": \"http://nexus.example.com/auth/realms/realm2/protocol/openid-connect/auth\",\n      \"_tokenEndpoint\": \"http://nexus.example.com/auth/realms/realm2/protocol/openid-connect/token\",\n      \"_userInfoEndpoint\": \"http://nexus.example.com/auth/realms/realm2/protocol/openid-connect/userinfo\",\n      \"_endSessionEndpoint\": \"http://nexus.example.com/auth/realms/realm2/protocol/openid-connect/logout\",\n      \"_rev\": 1,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2019-01-22T12:22:50.738Z\",\n      \"_createdBy\": \"http://nexus.example.com/v1/anonymous\",\n      \"_updatedAt\": \"2019-01-22T12:22:50.738Z\",\n      \"_updatedBy\": \"http://nexus.example.com/v1/anonymous\"\n    }\n  ]\n}Full source at GitHub","title":"List realms"},{"location":"/docs/api/iam/iam-realms-api.html#fetch-a-realm-current-version-","text":"GET /v1/realms/{realm}\nExample\nRequest curl \"https://nexus.example.com/v1/realms/realm1\"Full source at GitHub Response {\n  \"@id\": \"http://nexus.example.com/v1/realms/realm1\",\n  \"@type\": \"Realm\",\n  \"name\": \"Github Dev\",\n  \"openIdConfig\": \"http://nexus.example.com/auth/realms/realm1/.well-known/openid-configuration\",\n  \"_label\": \"realm1\",\n  \"_grantTypes\": [\n    \"password\",\n    \"clientCredentials\",\n    \"refreshToken\",\n    \"authorizationCode\",\n    \"implicit\"\n  ],\n  \"_issuer\": \"http://nexus.example.com/auth/realms/realm1\",\n  \"_authorizationEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/auth\",\n  \"_tokenEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/token\",\n  \"_userInfoEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/userinfo\",\n  \"_endSessionEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/logout\",\n  \"_rev\": 3,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2019-01-22T10:50:47.351Z\",\n  \"_createdBy\": \"http://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T12:24:13.029Z\",\n  \"_updatedBy\": \"http://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Fetch a realm (current version)"},{"location":"/docs/api/iam/iam-realms-api.html#fetch-a-realm-specific-version-","text":"GET /v1/realms/{realm}?rev={rev}\n… where {rev} is the revision number of the resolver to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/realms/realm1?rev=3\"Full source at GitHub Response {\n  \"@id\": \"http://nexus.example.com/v1/realms/realm1\",\n  \"@type\": \"Realm\",\n  \"name\": \"Github Dev\",\n  \"openIdConfig\": \"http://nexus.example.com/auth/realms/realm1/.well-known/openid-configuration\",\n  \"_label\": \"realm1\",\n  \"_grantTypes\": [\n    \"password\",\n    \"clientCredentials\",\n    \"refreshToken\",\n    \"authorizationCode\",\n    \"implicit\"\n  ],\n  \"_issuer\": \"http://nexus.example.com/auth/realms/realm1\",\n  \"_authorizationEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/auth\",\n  \"_tokenEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/token\",\n  \"_userInfoEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/userinfo\",\n  \"_endSessionEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/logout\",\n  \"_rev\": 3,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2019-01-22T10:50:47.351Z\",\n  \"_createdBy\": \"http://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T12:24:13.029Z\",\n  \"_updatedBy\": \"http://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Fetch a realm (specific version)"},{"location":"/docs/api/iam/authentication.html","text":"","title":"Authentication"},{"location":"/docs/api/iam/authentication.html#authentication","text":"In order to interact with Nexus, clients need a valid access token. Tokens can be obtained from authentication providers. Please see, realms for documentation on how to find available providers(realms).\nEach realm defines openid-configuration endpoint. From that endpoint, clients can obtain the information necessary to obtain an access token, especially the authorize and token endpoints for the provider.\nPlease see oauth2 documentation for different authentication flows available for different types of applications.","title":"Authentication"},{"location":"/docs/api/iam/iam-permissions-api.html","text":"","title":"Permissions"},{"location":"/docs/api/iam/iam-permissions-api.html#permissions","text":"Permissions are rooted in the /v1/permissions collection.\nEach permission is the basic unit to provide a way to limit applications’ access to sensitive information.\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.","title":"Permissions"},{"location":"/docs/api/iam/iam-permissions-api.html#minimum-permissions","text":"IAM is configured to include minimum permissions, i.e. permissions that cannot be removed, because they are necessary for correct functioning of Nexus.\nCurrently the following permissions are required:\ndefault permissions for acls, with the exception that everyone should be able to see his own permissions acls/read acls/write default permissions for permissions permissions/read permissions/write default permissions for realms realms/read realms/write generic permissions for full read access to the global event log events/read admin specific permissions projects/read projects/write projects/create organizations/read organizations/write organizations/create KG specific permissions resources/read resources/write resolvers/read resolvers/write views/read views/write schemas/read schemas/write files/read files/write","title":"Minimum permissions"},{"location":"/docs/api/iam/iam-permissions-api.html#replace-permissions","text":"This operation overrides the collection of permissions.\nPUT /v1/permissions?rev={previous_rev}\n  {...}\n…where {previous_rev} is the last known revision number for the permissions. If there are only minimum permissions present present, this query parameter can be omitted.\nThe json payload contains the set of permissions to be added.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/permissions?rev=1\" -d \\\n'{\n  \"permissions\": [\n    \"newpermission/read\",\n    \"newpermission/write\"\n  ]\n}'Full source at GitHub Payload {\n  \"permissions\": [\n    \"newpermission/read\",\n    \"newpermission/write\"\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/permissions\",\n  \"@type\": \"Permissions\",\n  \"_rev\": 2,\n  \"_createdAt\": \"2019-01-22T13:15:54.667Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T13:22:03.007Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Replace permissions"},{"location":"/docs/api/iam/iam-permissions-api.html#subtract-permissions","text":"This operation removes the provided permissions from the existing collection of permissions.\nPATCH /v1/permissions?rev={previous_rev}\n  {...}\n…where {previous_rev} is the last known revision number for the permissions.\nThe json payload contains the set of permissions to be deleted. Example\nRequest curl -XPATCH -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/permissions?rev=2\" -d \\\n'{\n  \"@type\": \"Subtract\",\n  \"permissions\": [\n    \"newpermission/write\"\n  ]\n}'Full source at GitHub Payload {\n  \"@type\": \"Subtract\",\n  \"permissions\": [\n    \"newpermission/write\"\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/permissions\",\n  \"@type\": \"Permissions\",\n  \"_rev\": 1,\n  \"_createdAt\": \"2019-01-22T13:15:54.667Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T13:22:03.007Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Subtract permissions"},{"location":"/docs/api/iam/iam-permissions-api.html#append-permissions","text":"This operation appends the provided permissions to the existing collection of permissions.\nPATCH /v1/permissions?rev={previous_rev}\n  {...}\n…where {previous_rev} is the last known revision number for the permissions.\nThe json payload contains the set of permissions to be added.\nExample\nRequest curl -XPATCH -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/permissions?rev=3\" -d \\\n'{\n  \"@type\": \"Append\",\n  \"permissions\": [\n    \"newpermission/create\"\n  ]\n}'Full source at GitHub Payload {\n  \"@type\": \"Append\",\n  \"permissions\": [\n    \"newpermission/create\"\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/permissions\",\n  \"@type\": \"Permissions\",\n  \"_rev\": 2,\n  \"_createdAt\": \"2019-01-22T13:15:54.667Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T13:22:03.007Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Append permissions"},{"location":"/docs/api/iam/iam-permissions-api.html#delete-all-permissions","text":"This operation deletes the all the user defined permission and resets the collection to minimum permissions.\nDELETE /v1/permissions?rev={previous_rev}\n…where {previous_rev} is the last known revision number for the permissions.\nRequest curl -XDELETE \"https://nexus.example.com/v1/permissions?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/permissions\",\n  \"@type\": \"Permissions\",\n  \"_rev\": 3,\n  \"_createdAt\": \"2019-01-22T13:15:54.667Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T13:22:03.007Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Delete all permissions"},{"location":"/docs/api/iam/iam-permissions-api.html#fetch-permissions-latest-revision-","text":"GET /v1/permissions\nRequest curl \"https://nexus.example.com/v1/permissions\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/permissions\",\n  \"@type\": \"Permissions\",\n  \"permissions\": [\n    \"acls/read\",\n    \"acls/write\",\n    \"events/read\",\n    \"files/read\",\n    \"files/write\",\n    \"organizations/create\",\n    \"organizations/read\",\n    \"organizations/write\",\n    \"permissions/read\",\n    \"permissions/write\",\n    \"projects/create\",\n    \"projects/read\",\n    \"projects/write\",\n    \"realms/read\",\n    \"realms/write\",\n    \"resolvers/read\",\n    \"resolvers/write\",\n    \"resources/read\",\n    \"resources/write\",\n    \"schemas/read\",\n    \"schemas/write\",\n    \"views/read\",\n    \"views/write\"\n  ],\n  \"_rev\": 10,\n  \"_createdAt\": \"2019-01-22T13:15:54.667Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T13:22:03.007Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Fetch permissions (latest revision)"},{"location":"/docs/api/iam/iam-permissions-api.html#fetch-permissions-specific-revision-","text":"GET /v1/permissions?rev={rev}\n…where {rev} is the revision number of the permissions to be retrieved.\nRequest curl \"https://nexus.example.com/v1/permissions?rev=1\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/permissions\",\n  \"@type\": \"Permissions\",\n  \"permissions\": [\n    \"acls/read\",\n    \"acls/write\",\n    \"events/read\",\n    \"files/read\",\n    \"files/write\",\n    \"organizations/create\",\n    \"organizations/read\",\n    \"organizations/write\",\n    \"permissions/read\",\n    \"permissions/write\",\n    \"projects/create\",\n    \"projects/read\",\n    \"projects/write\",\n    \"realms/read\",\n    \"realms/write\",\n    \"resolvers/read\",\n    \"resolvers/write\",\n    \"resources/read\",\n    \"resources/write\",\n    \"schemas/read\",\n    \"schemas/write\",\n    \"views/read\",\n    \"views/write\"\n  ],\n  \"_rev\": 3,\n  \"_createdAt\": \"2019-01-22T13:15:54.667Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T13:22:03.007Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Fetch permissions (specific revision)"},{"location":"/docs/api/iam/iam-acls-api.html","text":"","title":"Access Control Lists"},{"location":"/docs/api/iam/iam-acls-api.html#access-control-lists","text":"Access Control Lists are rooted in the /v1/acls collection.\nAn ACL defines the applications’ data access restriction using the following three parameters:\npermission: the value used to limit a client (user, group) access to resources. identity: a client identity reference, e.g. a certain user, a group, an anonymous user or someone who is authenticated to a certain realm. path: the location where to apply the restrictions. Examples of paths are: /, /myorg or /myorg/myproject\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.","title":"Access Control Lists"},{"location":"/docs/api/iam/iam-acls-api.html#default-permissions","text":"When IAM starts for the first time, it applies the default permissions to /. This gives all permissions to the anonymous user to enable setting up realms. It is recommended to replace these permissions once user has setup an authorization realm.","title":"Default permissions"},{"location":"/docs/api/iam/iam-acls-api.html#acls-hierarchy","text":"It is important to know that ACLs are represented in a tree-like structure depending on their path. Imagine the following scenario:\nEach block is identified by a path that contains a list of permissions for a certain identity (identities are color code divided).\nThere is a special set of permissions which restrict the use of the ACLs API:\nacls/read - an auth. token containing an identity with this permission is allowed to fetch a collection of ACL from any other identity. acls/write - an auth. token containing an identity with this permission is allowed to perform the call to the following endpoints: create ACLs, replace ACLs, subtract ACLs, append ACLs and delete ACLs.\nThose permissions need to be present in the current {path} where the API interaction occurs or in any parent path. In other words, they are inherited.\nLet’s clarify this concept with an example from the previous diagram. identity 1 could call the create ACLs endpoint on any {path} while identity 2 could only call the same endpoint for any path child of /myorg (like /myorg/myproj). At the same time, identity 3 could not perform any of the write operations.","title":"ACLs Hierarchy"},{"location":"/docs/api/iam/iam-acls-api.html#create-acls","text":"This operation creates a collection of ACL on the provided path.\nPUT /v1/acls/{path}\n  {...}\n…where {path} is the target location for the ACL collection.\nThe json payload contains the collection of ACL to set.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/acls/org1\" -d  \\\n'{\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"projects/read\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"projects/read\",\n        \"projects/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"realm\",\n        \"group\": \"some-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"acls/read\",\n        \"acls/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"realm\",\n        \"subject\": \"alice\"\n      }\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"projects/read\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"projects/read\",\n        \"projects/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"some-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"acls/read\",\n        \"acls/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"subject\": \"alice\"\n      }\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/acls/org1\",\n  \"@type\": \"AccessControlList\",\n  \"_rev\": 1,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create ACLs"},{"location":"/docs/api/iam/iam-acls-api.html#replace-acls","text":"This operation overrides the collection of ACL on the provided path.\nPUT /v1/acls/{path}?rev={previous_rev}\n  {...}\n…where:\n{previous_rev}: Number - the last known revision for the ACL collection. Not required for replacing empty ACLs. {path}: String - is the target location for the ACL collection.\nThe json payload contains the collection of ACL to set.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/acls/org1?rev=1\" -d \\\n'{\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"projects/read\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"projects/read\",\n        \"projects/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"realm\",\n        \"group\": \"some-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"acls/read\",\n        \"acls/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"realm\",\n        \"subject\": \"alice\"\n      }\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"projects/read\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"projects/read\",\n        \"projects/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"some-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"acls/read\",\n        \"acls/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"subject\": \"alice\"\n      }\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/acls/org1\",\n  \"@type\": \"AccessControlList\",\n  \"_rev\": 2,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:07:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Replace ACLs"},{"location":"/docs/api/iam/iam-acls-api.html#subtract-acls","text":"This operation removes the provided ACL collection from the existing collection of ACL on the provided path.\nPATCH /v1/acls/{path}?rev={previous_rev}\n  {...}\n…where:\n{previous_rev}: Number - the last known revision for the ACL collection. {path}: String - is the target location for the ACL collection.\nThe json payload contains the collection of ACL to remove.\nExample\nRequest curl -XPATCH -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/acls/org1?rev=2\" -d \\\n'{\n  \"@type\": \"Subtract\",\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"projects/read\"\n      ],\n      \"identity\": {\n        \"group\": \"a-group\",\n        \"realm\": \"myrealm\"\n      }\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"@type\": \"Subtract\",\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"projects/read\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/acls/org1\",\n  \"@type\": \"AccessControlList\",\n  \"_rev\": 3,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:10:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Subtract ACLs"},{"location":"/docs/api/iam/iam-acls-api.html#append-acls","text":"This operation appends the provided ACL collection to the existing collection of ACL on the provided path.\nPATCH /v1/acls/{path}?rev={previous_rev}\n  {...}\n…where:\n{previous_rev}: Number - the last known revision for the ACL collection. Not required for appending to empty ACLs. {path}: String - is the target location for the ACL collection.\nThe json payload contains the collection of ACL to add.\nExample\nRequest curl -XPATCH -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/acls/org1?rev=3\" -d  \\\n'{\n  \"@type\": \"Append\",\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"own\",\n        \"other\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"@type\": \"Append\",\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"own\",\n        \"other\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/acls/org1\",\n  \"@type\": \"nxv:AccessControlList\",\n  \"_rev\": 4,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:15:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Append ACLs"},{"location":"/docs/api/iam/iam-acls-api.html#delete-acls","text":"This operation deletes the entire collection of ACL on the provided path.\nDELETE /v1/acls/{path}?rev={previous_rev}\n…where:\n{previous_rev}: Number - the last known revision for the ACL collection. {path}: String - is the target location for the ACL collection.\nRequest curl -XDELETE \"https://nexus.example.com/v1/acls/org1?rev=4\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/acls/org1\",\n  \"@type\": \"nxv:AccessControlList\",\n  \"_rev\": 5,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:30:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Delete ACLs"},{"location":"/docs/api/iam/iam-acls-api.html#fetch-acls","text":"GET /v1/acls/{path}?rev={rev}&self={self}\n…where\n{path}: String - is the target location for the ACL collection. {rev}: Number - the revision of the ACL to be retrieved. This parameter is optional and it defaults to the current revision. {self}: Boolean - if true, only the ACLs containing the identities found on the auth. token are included in the response. If false all the ACLs on the current {path} are included. This parameter is optional and it defaults to true.\nThe ability to use the query parameter self=false depends on whether or not any of the identities found on the auth. token contains the acls:read permission on the provided {path} or its parents. For further details, check ACLs hierarchy.\nRequest curl \"https://nexus.example.com/v1/acls/org1?rev=1&self=false\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/acls.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/acls/org1\",\n  \"@type\": \"nxv:AccessControlList\",\n  \"path\": \"/org1\",\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"read\"\n      ],\n      \"identity\": {\n        \"@id\": \"https://nexus.example.com/v1/realms/myrealm/groups/a-group\",\n        \"@type\": \"Group\",\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"read\",\n        \"write\"\n      ],\n      \"identity\": {\n        \"@id\": \"https://nexus.example.com/v1/realms/myrealm/groups/some-group\",\n        \"@type\": \"Group\",\n        \"realm\": \"myrealm\",\n        \"group\": \"some-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"acls/read\",\n        \"acls/write\"\n      ],\n      \"identity\": {\n        \"@id\": \"https://nexus.example.com/v1/realms/myrealm/users/user\",\n        \"@type\": \"User\",\n        \"realm\": \"myrealm\",\n        \"subject\": \"alice\"\n      }\n    }\n  ],\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 1\n}Full source at GitHub","title":"Fetch ACLs"},{"location":"/docs/api/iam/iam-acls-api.html#list-acls","text":"GET /v1/acls/{path}?ancestors={ancestors}&self={self}\n…where\n{path}: String - is the target location for the ACL collection. {ancestors}: Boolean - if true, the ACLs of the parent {path} are included in the response. If false only the ACLs on the current {path} are included. This parameter is optional and it defaults to false. {self}: Boolean - if true, only the ACLs containing the identities found on the auth. token are included in the response. If false all the ACLs on the current {path} are included. This parameter is optional and it defaults to true.\nThe ability to use the query parameter self=false and ancestors=true depends on whether or not any of the identities found on the auth. token contains the acls:read permission on the provided {path} or its parents. For further details, check ACLs hierarchy.\nThe {path} can contain the special character * which can be read as any.\nLet’s imagine we have the ACLs from the following diagram in place. If we query this endpoint with the path /myorg/*, we are selecting the ACLs defined in /myorg/myproj and myorg/myproj2. Likewise If we use the path /*, we are selecting the ACLs defined in /myorg and myorg2.\nThe following examples illustrate listings from the diagram on the section ACLs hierarchy with the following considerations:\nidentity 1: Is a group called one identity 2: Is a group called two identity 3: Is a user called me The auth. token is linked to the identity 1.\nRequest curl \"https://nexus.example.com/v1/acls/*?ancestors=true&self=true\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\"\n  ],\n  \"_total\": 2,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/acls/myorg/myproj\",\n      \"@type\": \"AccessControlList\",\n      \"acl\": [\n        {\n          \"permissions\": [\n            \"read\",\n            \"write\"\n          ],\n          \"identity\": {\n            \"@id\": \"https://nexus.example.com/v1/realm/groups/two\",\n            \"@type\": \"Group\",\n            \"realm\": \"myrealm\",\n            \"group\": \"two\"\n          }\n        }\n      ],\n      \"_path\": \"/myorg/myproj\",\n      \"_rev\": 1,\n      \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-17T15:05:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/acls/myorg/myproj2\",\n      \"@type\": \"AccessControlList\",\n      \"acl\": [\n        {\n          \"permissions\": [\n            \"read\"\n          ],\n          \"identity\": {\n            \"@id\": \"https://nexus.example.com/v1/realms/myrealm/users/me\",\n            \"@type\": \"User\",\n            \"realm\": \"myrealm\",\n            \"subject\": \"me\"\n          }\n        }\n      ],\n      \"_path\": \"/myorg/myproj2\",\n      \"_rev\": 2,\n      \"_createdAt\": \"2018-09-17T14:00:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/alice\",\n      \"_updatedAt\": \"2018-09-17T14:05:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/alice\"\n    }\n  ]\n}Full source at GitHub Request (with ancestors) curl \"https://nexus.example.com/v1/acls/myorg/*?ancestors=false&self=false\"Full source at GitHub Response (with ancestors) {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\"\n  ],\n  \"_total\": 3,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/acls/\",\n      \"@type\": \"AccessControlList\",\n      \"acl\": [\n        {\n          \"permissions\": [\n            \"acls/write\"\n          ],\n          \"identity\": {\n            \"@id\": \"https://nexus.example.com/v1/realms/myrealm/groups/one\",\n            \"@type\": \"Group\",\n            \"realm\": \"myrealm\",\n            \"group\": \"one\"\n          }\n        }\n      ],\n      \"_path\": \"/\",\n      \"_rev\": 1,\n      \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-17T15:05:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/acls/myorg\",\n      \"@type\": \"AccessControlList\",\n      \"acl\": [\n        {\n          \"permissions\": [\n            \"acls/write\"\n          ],\n          \"identity\": {\n            \"@id\": \"https://nexus.example.com/v1/realms/myrealm/groups/two\",\n            \"@type\": \"Group\",\n            \"realm\": \"myrealm\",\n            \"group\": \"two\"\n          }\n        }\n      ],\n      \"_path\": \"/myorg\",\n      \"_rev\": 2,\n      \"_createdAt\": \"2018-09-17T14:00:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/alice\",\n      \"_updatedAt\": \"2018-09-17T14:05:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/alice\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/acls/myorg2\",\n      \"@type\": \"nxv:AccessControlList\",\n      \"acl\": [\n        {\n          \"permissions\": [\n            \"other\"\n          ],\n          \"identity\": {\n            \"@id\": \"https://nexus.example.com/v1/realms/myrealm/groups/one\",\n            \"@type\": \"Group\",\n            \"realm\": \"myrealm\",\n            \"group\": \"one\"\n          }\n        }\n      ],\n      \"_path\": \"/myorg2\",\n      \"_rev\": 1,\n      \"_createdAt\": \"2018-09-17T14:00:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/alice\",\n      \"_updatedAt\": \"2018-09-17T14:05:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/alice\"\n    }\n  ]\n}Full source at GitHub","title":"List ACLs"},{"location":"/docs/api/iam/iam-identities.html","text":"","title":"Identities"},{"location":"/docs/api/iam/iam-identities.html#identities","text":"The /v1/identities endpoint allows user to retrieve the identities that the user has in the platform. Calling the endpoint without a token will result in only one identity returned: Anonymous. Calling it with token should return multiple identities. There are four different types of identities:\nAnonymous - represents anonymous user Authenticated - represents a realm via which the user is authenticated Group - represents a group to which a user belongs in a realm User - represents the user.\nThe following HTTP call can used to retrieve the identities:\nGET /v1/identities\nExample\nRequest curl \"https://nexus.example.com/v1/identities\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"identities\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/anonymous\",\n      \"@type\": \"Anonymous\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/realms/nexusdev/authenticated\",\n      \"@type\": \"Authenticated\",\n      \"realm\": \"nexusdev\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/realms/nexusdev/groups/test-group\",\n      \"@type\": \"Group\",\n      \"group\": \"test-group\",\n      \"realm\": \"nexusdev\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/realms/nexusdev/users/test-user\",\n      \"@type\": \"User\",\n      \"realm\": \"nexusdev\",\n      \"subject\": \"test-user\"\n    }\n  ]\n}Full source at GitHub","title":"Identities"},{"location":"/docs/api/error-signaling.html","text":"","title":"Error Signaling"},{"location":"/docs/api/error-signaling.html#error-signaling","text":"The services makes use of the HTTP Status Codes to report the outcome of each API call. The status codes are complemented by a consistent response data model for reporting client and system level failures.\nFormat {\n  \"@context\": {\n    \"@vocab\": \"{{base}}/voc/nexus/core\"\n  },\n  \"code\": \"<a machine readable unique code>\",\n  \"message\": \"<a human readable description of the error>\"\n}Full source at GitHub Example {\n  \"@context\": {\n    \"@vocab\": \"{{base}}/voc/nexus/core\"\n  },\n  \"code\": \"IllegalFilterFormat\",\n  \"message\": \"Unable to parse 'path' as an uri\",\n  \"field\": \"DownField(filter)/DownField(path)\"\n}Full source at GitHub\nWhile the format only specifies _code and _message fields, additional fields may be presented for additional information in certain scenarios.","title":"Error Signaling"},{"location":"/docs/architecture/index.html","text":"","title":"System Architecture"},{"location":"/docs/architecture/index.html#system-architecture","text":"The architecture section is to provide a comprehensive architectural overview of the Nexus platform. It presents a number of architectural views to depict various aspects of the system. It is intended to convey the significant architectural decisions which have been made on the system.\nTBC.","title":"System Architecture"},{"location":"/docs/architecture/use-cases.html","text":"","title":"Use Cases"},{"location":"/docs/architecture/use-cases.html#use-cases","text":"","title":"Use Cases"},{"location":"/docs/architecture/components.html","text":"","title":"Components"},{"location":"/docs/architecture/components.html#components","text":"","title":"Components"},{"location":"/docs/architecture/integration.html","text":"","title":"Integration"},{"location":"/docs/architecture/integration.html#integration","text":"","title":"Integration"},{"location":"/docs/roadmap/index.html","text":"","title":"Roadmap"},{"location":"/docs/roadmap/index.html#roadmap","text":"TBC.","title":"Roadmap"},{"location":"/docs/benchmarks/index.html","text":"","title":"Benchmarks"},{"location":"/docs/benchmarks/index.html#benchmarks","text":"The main goal of the benchmarks was to analyze the hardware requirements for a Nexus deployment and to find potential bottlenecks. In particular, we were most interested in the following metrics:\nthroughput - how many requests per second the system can handle latency - the time the system needed to provide response to the requests\nand how they were affected by different factors, especially:\ndata volume - how does the volume of the data in the system affect the performance hardware configuration and scalability - does assigning more hardware increase the performance of the system and can the system scale both horizontally and vertically. clustering - what’s the effect of changing from a single node to clustered deployment, as well as, what’s the effect of adding more nodes to the cluster.\nThe description of the test scenarios can be found here. The test scenarios and scripts can be found in nexus-tests repository. The results of the benchmarks are described in detail in the Results section.\nThe benchmarks were run on a Kubernetes cluster deployed on AWS. Fore more details see deployment configuration. The tests were run against v1 API of Nexus in November 2018 using Gatling version 3.0.0.","title":"Benchmarks"},{"location":"/docs/benchmarks/deployment-configuration.html","text":"","title":"Deployment Configuration"},{"location":"/docs/benchmarks/deployment-configuration.html#deployment-configuration","text":"The tests were performed against Nexus services deployed in Kubernetes cluster provisioned by Amazon EKS. The deployment configuration and the number of nodes assigned to each Nexus service are presented in the following diagram:\nThe benchmarks were run on a AWS EC2 m5.large server outside of the Kubernetes cluster.\nPreliminary tests shows that KG service is the most critical component of the system (as expected) and it has the most impact of the performance aspects of the system. Thus, during the tests the KG service cluster size was scaled to 1, 2, 4 and 6 replicas along with the number of concurrent connections (using the same multiplier) during the test executions.","title":"Deployment Configuration"},{"location":"/docs/benchmarks/data-volume-and-scenarios.html","text":"","title":"Data volume and scenarios"},{"location":"/docs/benchmarks/data-volume-and-scenarios.html#data-volume-and-scenarios","text":"Prior to the test execution a reasonable amount of data was injected into the system to ensure the system behaves well under a typical volume. Specifically:\nTotal number of resources: 115,690,687 Total number of triples (edges): 2,493,134,304 Total number of entities (nodes): 352,856,595 Total number of property types: 74 Total number of classes (distinct values of @type): 24\nThe data was generated by replicating a collection of provenance patterns, each spanning several resources:\nresource examples corresponding SHACL schemas\nThe full collection of scenarios can be found here each within its own file.\nSeveral scenarios were executed to verify the behaviour of the system, most notably:\ncreate resource (with validation) create resource (without validation) get resource by id tag resource get resource by revision, get resource by tag mixed operations: list resources, get resource by id, ElasticSearch query, BlazeGraph query, update resource\nPlease head over to the results section for a summary of the results and conclusions.","title":"Data volume and scenarios"},{"location":"/docs/benchmarks/results.html","text":"","title":"Results"},{"location":"/docs/benchmarks/results.html#results","text":"","title":"Results"},{"location":"/docs/benchmarks/results.html#create-simulation","text":"Nodes Users Throughput (req/s) p50 (ms) p75 (ms) p95 (ms) p99 (ms) 1 16 36 513 681 820 999 2 32 51 572 706 1107 1191 4 64 106 586 722 1033 1423 6 96 148 589 802 1209 1741","title":"Create Simulation"},{"location":"/docs/benchmarks/results.html#create-simulation-no-validation-","text":"Nodes Users Throughput (req/s) p50 (ms) p75 (ms) p95 (ms) p99 (ms) 1 16 456 11 72 85 198 2 32 490 33 74 239 403 4 64 1063 26 77 180 366 6 96 891 59 113 431 546","title":"Create Simulation (no validation)"},{"location":"/docs/benchmarks/results.html#fetch-simulation","text":"Nodes Users Throughput (req/s) p50 (ms) p75 (ms) p95 (ms) p99 (ms) 1 16 1849 4 4 55 68 2 32 2826 5 6 47 93 4 64 3440 10 13 53 116 6 96 3860 15 21 57 127","title":"Fetch Simulation"},{"location":"/docs/benchmarks/results.html#mixed-simulation","text":"Nodes Users Throughput (req/s) p50 (ms) p75 (ms) p95 (ms) p99 (ms) 1 16 467 14 29 80 269 2 32 566 15 25 89 1076 4 64 567 16 27 128 3552 6 96 506 16 26 154 7182","title":"Mixed Simulation"},{"location":"/docs/benchmarks/results.html#tag-simulation","text":"Nodes Users Throughput (req/s) p50 (ms) p75 (ms) p95 (ms) p99 (ms) 1 16 508 7 69 95 195 2 32 699 16 76 100 199 4 64 1107 15 80 163 276 6 96 1661 26 72 144 257","title":"Tag Simulation"},{"location":"/docs/benchmarks/results.html#getbytag-simulation","text":"Nodes Users Throughput (req/s) p50 (ms) p75 (ms) p95 (ms) p99 (ms) 1 16 156 86 116 298 418 2 32 189 118 215 406 586 4 64 192 200 460 975 1381 6 96 285 202 477 988 1409","title":"GetByTag Simulation"},{"location":"/docs/benchmarks/results.html#conclusions","text":"The “Create Simulation” and “Create Simulation (no validation)” shows the impact of SHACL validation for resources on the throughput an latency. Most of the CPU cycles (~ 90%) are spent running the validation.\nThe system scales fairly well with the number of nodes allocated, but depends on each of the operations. Although the number of concurrent requests is generally higher with more nodes, the penalty of node to node communication can have a fairly big impact. For example: assembling schemas (following owl:import and @context references) implies a lot of cross node communication; for “Create Simulation” increasing the cluster size from 1 to 2, while it shows an increase in the total throughput, the value is not double to that of a single node.","title":"Conclusions"},{"location":"/docs/additional-info/index.html","text":"","title":"Additional Information"},{"location":"/docs/additional-info/index.html#additional-information","text":"","title":"Additional Information"},{"location":"/docs/additional-info/incremental-domain-definition.html","text":"","title":"Incremental domain definition"},{"location":"/docs/additional-info/incremental-domain-definition.html#incremental-domain-definition","text":"TBC.","title":"Incremental domain definition"},{"location":"/docs/additional-info/web-applications-standards.html","text":"","title":"Web applications development best practices"},{"location":"/docs/additional-info/web-applications-standards.html#web-applications-development-best-practices","text":"","title":"Web applications development best practices"},{"location":"/docs/additional-info/web-applications-standards.html#tools-we-standardize-on","text":"Language: Typescript Powerful type system and other features allow building higher quality applications, especially when they become complex. It is becoming the standard for entreprise-grade applications. Framework: React + Redux The most widespread JS framework and state management solution. Bundler: Parcel Manages everything needed to bundle regular web applications with zero configuration most of the time. Unit tests: Jest Zero-configuration testing framework, best support for React. Linting: ESLint Airbnb with a few additions One of the most widespread coding style to make it easy for multiple developers to collaborate on the same code base. NodeJS version: latest LTS To allow anyone to install Blue Brain Nexus on their infrastructure, we stay compatible with NodeJS Long Term Support version that is the one usually available for production systems.","title":"Tools we standardize on"},{"location":"/docs/additional-info/web-applications-standards.html#workflow","text":"","title":"Workflow"},{"location":"/docs/additional-info/web-applications-standards.html#git-and-deployment","text":"Our workflow is inspired by Gitflow, simplified.\nDirect commit to the master branch is prohibited Features and fixes are developed in separate feature branches When ready for review, a Pull Request is opened for inclusion into the master branch. The Pull Request must be approved by at least 1 other developer. When merged into the master branch, it triggers a deployment to our staging environment. We tag the master branch with a Semantic Versioning version number when we consider it is high quality enough for release.","title":"Git and deployment"},{"location":"/docs/additional-info/web-applications-standards.html#code-documentation","text":"Technical documentation is written along with the code in the form of JSDoc comments, and that we can extract with tools like documentation.js.\nUser documentation is written in the Blue Brain Nexus Platform documentation, including this very document. It is kept up-to-date with the latest features of the web applications and revised before any release.","title":"Code documentation"},{"location":"/docs/additional-info/faq.html","text":"","title":"Frequently asked questions"},{"location":"/docs/additional-info/faq.html#frequently-asked-questions","text":"TBC.","title":"Frequently asked questions"},{"location":"/docs/tutorial/build-recommender/push-model.html","text":"","title":""},{"location":"/docs/tutorial/build-recommender/setup-nexus.html","text":"","title":"Set up Nexus"},{"location":"/docs/tutorial/build-recommender/setup-nexus.html#set-up-nexus","text":"","title":"Set up Nexus"},{"location":"/docs/tutorial/build-recommender/setup-nexus.html#overview","text":"","title":"Overview"},{"location":"/docs/tutorial/build-recommender/setup-nexus.html#what-youll-build","text":"","title":"What you’ll build"},{"location":"/docs/tutorial/build-recommender/setup-nexus.html#what-youll-learn","text":"","title":"What you’ll learn"},{"location":"/docs/tutorial/build-recommender/setup-nexus.html#what-youll-need","text":"","title":"What you’ll need"},{"location":"/docs/tutorial/build-recommender/setup-nexus.html#get-the-tutorial-code","text":"","title":"Get the tutorial code"},{"location":"/docs/tutorial/build-recommender/setup-es-view.html","text":"","title":"Set up Nexus"},{"location":"/docs/tutorial/build-recommender/setup-es-view.html#set-up-nexus","text":"","title":"Set up Nexus"},{"location":"/docs/tutorial/build-recommender/setup-es-view.html#overview","text":"","title":"Overview"},{"location":"/docs/tutorial/build-recommender/setup-es-view.html#what-youll-build","text":"","title":"What you’ll build"},{"location":"/docs/tutorial/build-recommender/setup-es-view.html#what-youll-learn","text":"","title":"What you’ll learn"},{"location":"/docs/tutorial/build-recommender/setup-es-view.html#what-youll-need","text":"","title":"What you’ll need"},{"location":"/docs/tutorial/build-recommender/setup-es-view.html#get-the-tutorial-code","text":"","title":"Get the tutorial code"},{"location":"/docs/tutorial/build-recommender/recommend-query.html","text":"","title":"Recommendation query"},{"location":"/docs/tutorial/build-recommender/recommend-query.html#recommendation-query","text":"","title":"Recommendation query"},{"location":"/docs/tutorial/build-recommender/recommend-query.html#overview","text":"","title":"Overview"},{"location":"/docs/tutorial/build-recommender/recommend-query.html#what-youll-build","text":"","title":"What you’ll build"},{"location":"/docs/tutorial/build-recommender/recommend-query.html#what-youll-learn","text":"","title":"What you’ll learn"},{"location":"/docs/tutorial/build-recommender/recommend-query.html#what-youll-need","text":"","title":"What you’ll need"},{"location":"/docs/tutorial/build-recommender/recommend-query.html#get-the-tutorial-code","text":"","title":"Get the tutorial code"}]}