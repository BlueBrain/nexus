{"docs":[{"location":"/paradox.json","text":"","title":""},{"location":"/docs/tutorial/shacl-in-a-nutshell/index.html","text":"","title":"Data Quality with SHACL"},{"location":"/docs/tutorial/shacl-in-a-nutshell/index.html#data-quality-with-shacl","text":"","title":"Data Quality with SHACL"},{"location":"/docs/tutorial/shacl-in-a-nutshell/index.html#what-youll-build","text":"A cleaned and improved version of the movielens dataset","title":"What you’ll build"},{"location":"/docs/tutorial/shacl-in-a-nutshell/index.html#what-youll-learn","text":"Challenges for validating data How to define and enforce constraints on a knowledge graph using the W3C SHACL specification. Advantages of using human readable and machine actionable declarative language as a medium for constraining data","title":"What you’ll learn"},{"location":"/docs/tutorial/shacl-in-a-nutshell/index.html#what-youll-need","text":"nexus-sdk","title":"What you’ll need"},{"location":"/docs/tutorial/shacl-in-a-nutshell/index.html#get-the-tutorial-code","text":"","title":"Get the tutorial code"},{"location":"/docs/tutorial/shacl-in-a-nutshell/data-quality-motivation.html","text":"","title":"Motivation"},{"location":"/docs/tutorial/shacl-in-a-nutshell/data-quality-motivation.html#motivation","text":"We’ve loaded entities (movies, ratings, tags) from the small version of the MovieLens dataset during the Quick start tutorial. Let now have closer look at the different properties of the loaded entities.\nThe following payloads show respectively the shape of a movie entity from the MovieLens dataset and as retrieved from Nexus.\nmovieId,title,genres\n1,Toy Story (1995),Adventure|Animation|Children|Comedy|Fantasy\n{\n    \"@context\": [\n        {\n            \"@base\": \"$NEXUS-URL/resources/amld2019/$USERNAME/_/\",\n            \"@vocab\": \"$NEXUS-URL/vocabs/amld2019/$USERNAME/\"\n        },\n        \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n    ],\n    \"@id\": \"Movie_1\",\n    \"@type\": \"Movie\",\n    \"genres\": \"Adventure|Animation|Children|Comedy|Fantasy\",\n    \"movieId\": 1,\n    \"title\": \"Toy Story (1995)\"\n    \"_rev\": 1,\n    \"_deprecated\": false\n}\nAs we can see, there is a year value (1995) as part of the movie title (Toy Story (1995)). What’s the meaing of this year ? A release year? If yes in which country? With the shape above, movies clearly can’t be easily filtered by release date as that information is not explicitly asserted. Freshness is known to play an important role in search and recommendation relevance for users so it might be beneficial to have release date as separate information.\nAlso the movie genres value is not trivial to use because of the | character as genre value delimiter. Filtering movies by genre is also tricky in this case.\nHow can the movie data be managed in a knowledge graph within Nexus with the guarantee that:\nthe release year is explicitly asserted as a first class citizen attribute of a movie entity rather than being hidden in the title ? the genres are splitted ? No movie payload gets in the knowledge graph unless it conforms to some quality criteria ?\nThat’s where the W3C Shape Constraint Language (SHACL) comes into play.","title":"Motivation"},{"location":"/docs/tutorial/shacl-in-a-nutshell/shacl-overview.html","text":"","title":"What is SHACL ?"},{"location":"/docs/tutorial/shacl-in-a-nutshell/shacl-overview.html#what-is-shacl-","text":"","title":"What is SHACL ?"},{"location":"/docs/tutorial/shacl-in-a-nutshell/shacl-overview.html#overview","text":"SHACL is a powerful language allowing to define a wide range of constraints on graph data and enforce them. It is for RDF based knowledge graphs what Json Schema is for json data.\nBecause of the graph nature of the data they apply to, SHACL constraints are relative to graph nodes, their relations and attributes rather than a whole json tree and this is a fundamental difference. A json document has a root element from which the validation process can start while defining the root node for a graph is at best tricky and certainly an ambiguous notion.\nIn the following ‘Movie JSON Tree’ representation below, there is a root element (“Root”) for all properties within the movie json document and a json schema validation engine will navigate the tree from the root down to some elements.\nThe graph figure represents the same data within a knowledge graph and there is no default and obvious node to start with as many paths can lead to the movie entity. For example, all the following three constraints apply to movies even though the paths to get to the movie vary.\nmovie entities are of type Movie (value of the property @type) the subject of the property imdbId should be of type Movie the subject of the property genres should be of type Movie\nmovie_json_tree movie_graph !\nSo it is important for any validation specification to enable the definition of one or many starting points and one or many paths to follow to navigate down to the data elements to check. In json the start point is the root of the json document and the data is navigated as a tree and there is no user control on that process. SHACL on the other hand allows to specify where to start in a graph and from there which paths to follow.\nIn Blue Brain Nexus, validation using SHACL involves two types of resources:\nA schema: defining in a set of shapes the constraints the data should conform to. A schema can define one or more shapes. The data to be validated against the shapes of a schema.","title":"Overview"},{"location":"/docs/tutorial/shacl-in-a-nutshell/shacl-overview.html#shacl-validation-flow","text":"Here is an example of a simple SHACL schema.\n{\n  \"@context\":\"https://bluebrainnexus.io/contexts/shacl-20170720.json\",\n  \"@id\":\"schemaId_uri\",\n  \"@type\" : \"nxv:Schema\",\n  \"shapes\": [\n    {\n        \"@id\":\"MovieShape\", \"targetClass\" : \":Movie\",\n        \"property\":[\n              {\"path\":\"movieId\", \"datatype\":\"xsd:string\"},\n              {\"path\":\"title\",   \"datatype\":\"xsd:string\"},\n              {\"path\":\"genres\",  \"datatype\":\"xsd:string\"}\n        ]\n    }\n  ],\n}\nGiven a shape and a data as inputs, a SHACL processor starts by selecting what part of the data to focus on and then validate whether that part conforms to the shape graph or not.","title":"SHACL Validation Flow"},{"location":"/docs/tutorial/shacl-in-a-nutshell/shacl-overview.html#data-selection","text":"A shape can specify the nodes it will validate within a data graph by using one or many target declarations. A shape can target:\na specific node nodes of a given type nodes that are subject of a given property nodes that are object of a given property","title":"Data selection"},{"location":"/docs/tutorial/shacl-in-a-nutshell/shacl-overview.html#data-validation","text":"When focused nodes to validate against a shape are identified then the validation can occurs. A SHACL processor will check if a node conform to the constraints defined in a shape that selects it. A validation report is produced at the end.\nShwo example.\nThe following shape assesses that, to be valid, each movie data must satisfy the following constraints:\nit must have exactly one title which must be of type string it has zero, one or more genre. If it has a genre associated then the value must be of type string it has at most one (zero or one) release date\n{\n  \"@context\":\"http://example.org/shaclcontext\",\n  \"@id\" : \"ex:PersonShape\",\n  \"targetClass\" : \"schema:Person\",\n  \"property\":[\n      {\"path\":\"schema:name\",      \"datatype\":\"xsd:string\", \"maxCount\":1, \"minCount\":1},\n      {\"path\":\"schema:jobTitle\",  \"datatype\":\"xsd:string\"},\n      {\"path\":\"schema:birthDate\", \"datatype\":\"xsd:date\",   \"maxCount\":1}\n  ]\n}\nThe term shape will be used from now on to refer to the W3C SHACL shapes.","title":"Data validation"},{"location":"/docs/tutorial/shacl-in-a-nutshell/shacl-overview.html#schema-vs-shape","text":"The W3C SHACL recommendation only defines SHACL shapes as well as ways to logically related them using boolean operators (AND, OR, NOT, XONE). But shapes are almost never developed alone in production settings. It is useful to be able to:\nreuse an already defined shape for modularity purpose: an import mechanism telling a SHACL validator where to lookup and fetch an already existing shape is needed. This is equivalent to the notion of class import in programming language like JAVA. group and identify a collection of shapes in order to document and manage them (by mean of CRUD operations: Create, Read, Update, Deprecate/DELETE). This can be seen as an (not perfect) equivalent of the notion of package in programming languages like JAVA.\nIn Neuroshapes a schema is an object of type nxv:Schema and enables the above capabilities by using the following json syntax:\n{\n  \"@context\":\"http://example.org/shaclcontext\",\n  \"@id\" : \"ex:SchemaID\",\n  \"@type\":\"nxv:Schema\",\n  \"imports\":\"ex:AnImportedShape\",\n  \"shapes\" : [\n      {\"@id\" : \"ex:AShape\",      \"@type\":\"sh:Shape\"},\n      {\"@id\" : \"ex:AnOtherShape\",\"@type\":\"sh:Shape\"}\n  ]\n}\nThe table below details main schema property. The complete list of mandatory and recommended schema properties can be found here.\nkey Description URI @id The identifier of the schema @type The type of the schema. By default it is nxv:Schema http://www.w3.org/1999/02/22-rdf-syntax-ns#Type imports The resources (schema, ontologies,…) to import and to bring in the scope of the current schema http://www.w3.org/2002/07/owl#imports shapes The collection of SHACL shapes defined within the current schema. http://www.w3.org/2000/01/rdf-schema#isDefinedBy\nTo illustrate the usage of schemas, let add an affiliation information in the professor instance above. The professor Jane Doe is affiliated to EPFL which is an organization (identified by grid.5333.6 in the Global Research Identifier Database - GRID).\n{\n  \"@context\": \"http://schema.org/\",\n  \"@type\": \"schema:Person\",\n  \"@id\":\"https://orcid.org/0000-0002-3843-3472\",\n  \"name\": \"Jane Doe\",\n  \"jobTitle\": \"Professor\",\n  \"birthDate\": \"1984-06-01\",\n  \"affiliation\": {\n    \"@id\":\"http://www.grid.ac/institutes/grid.5333.6\",\n    \"@type\":\"schema:Organization\",\n    \"name\":\"EPFL\"\n  }\n}\nThe affiliation must satisfy the following constraints:\nit must be of type schema:Organization (not a Person nor a Process) it must have exactly one human readable name\nThe following json payload defines a ex:PersonShape (lines 6 to 13) and a ex:OrganizationShape (lines 14 to 17) in a ex:PersonSchema and adds the constraints about affiliation in line 12:\nto enforce schema:Organization as affiliation’s type using the property class: the value of class must be either a URI or a CURIE. to enforce the ex:OrganizationShape through the node property: every value of a person’s affiliation must conform to the ex:OrganizationShape which enforces a name property.\n{\n  \"@context\":\"http://example.org/shaclcontext\",\n  \"@id\" : \"ex:PersonSchema\",\n  \"@type\":\"nxv:Schema\",\n  \"shapes\" : [{\n    \"@id\" : \"ex:PersonShape\",\n    \"targetClass\" : \"schema:Person\",\n    \"property\":[\n      {\"path\":\"schema:name\",       \"datatype\":\"xsd:string\", \"maxCount\":1, \"minCount\":1},\n      {\"path\":\"schema:jobTitle\",   \"datatype\":\"xsd:string\"},\n      {\"path\":\"schema:birthDate\",  \"datatype\":\"xsd:date\",   \"maxCount\":1},\n      {\"path\":\"schema:affiliation\",\"class\":\"schema:Organization\",\"node\":\"ex:OrganizationShape\"}\n    ]},{\n    \"@id\" : \"ex:OrganizationShape\",\n    \"property\":[\n      {\"path\":\"schema:name\",\"datatype\":\"xsd:string\",\"maxCount\":1, \"minCount\":1}\n    ]}\n  ]\n}\nIt is possible to organize the ex:PersonShape and the ex:OrganizationShape differently by defining the latter in a different shape and import it within the ex:PersonSchema using the imports property.\n{\n  \"@context\":\"http://example.org/shaclcontext\",\n  \"@id\" : \"ex:PersonSchema\",\n  \"@type\":\"nxv:Schema\",\n  \"imports\":\"ex:OrganizationShape\",\n  \"shapes\" : [{\n    \"@id\" : \"ex:PersonShape\",\n    \"targetClass\" : \"schema:Person\",\n    \"property\":[\n      {\"path\":\"schema:name\",       \"datatype\":\"xsd:string\", \"maxCount\":1, \"minCount\":1},\n      {\"path\":\"schema:jobTitle\",   \"datatype\":\"xsd:string\"},\n      {\"path\":\"schema:birthDate\",  \"datatype\":\"xsd:date\",   \"maxCount\":1},\n      {\"path\":\"schema:affiliation\",\"class\":\"schema:Organization\",\"node\":\"ex:OrganizationShape\"}\n    ]}\n  ]\n}\nPractically speaking a shape is a schema. After all, schema means shape in greek. The difference between the two in Neuroshapes has more to do about syntax. The schema syntax allows to defines multiple shapes and relies on the the owl:imports mechanism to enable modular development of shapes. Ontology engineers will recognize that a schema as defined in this document adopts an owl ontology syntax. Indeed the domain of the owl:imports property is of type owl:Ontology.\nFrom this point, a Neuroshapes schema will be indifferently referred to as a SHACL schema or just schema.","title":"Schema vs Shape"},{"location":"/docs/tutorial/shacl-in-a-nutshell/shacl-overview.html#shape-vs-type","text":"","title":"Shape vs type"},{"location":"/docs/tutorial/build-recommender/setup-nexus.html","text":"","title":"Set up Nexus"},{"location":"/docs/tutorial/build-recommender/setup-nexus.html#set-up-nexus","text":"","title":"Set up Nexus"},{"location":"/docs/tutorial/build-recommender/setup-nexus.html#overview","text":"","title":"Overview"},{"location":"/docs/tutorial/build-recommender/setup-nexus.html#what-youll-build","text":"","title":"What you’ll build"},{"location":"/docs/tutorial/build-recommender/setup-nexus.html#what-youll-learn","text":"","title":"What you’ll learn"},{"location":"/docs/tutorial/build-recommender/setup-nexus.html#what-youll-need","text":"","title":"What you’ll need"},{"location":"/docs/tutorial/build-recommender/setup-nexus.html#get-the-tutorial-code","text":"","title":"Get the tutorial code"},{"location":"/docs/additional-info/architecture/meetup/README.html","text":"","title":"BlueBrain Nexus: Building a knowledge graph for data driven science"},{"location":"/docs/additional-info/architecture/meetup/README.html#bluebrain-nexus-building-a-knowledge-graph-for-data-driven-science","text":"Slides for the Scala Romandie meetup held on March 6, 2019 at the Blue Brain Project.\nhttps://www.meetup.com/Scala-Romandie/events/258897390/","title":"BlueBrain Nexus: Building a knowledge graph for data driven science"},{"location":"/docs/tutorial/build-recommender/recommend-query.html","text":"","title":"Recommendation query"},{"location":"/docs/tutorial/build-recommender/recommend-query.html#recommendation-query","text":"","title":"Recommendation query"},{"location":"/docs/tutorial/build-recommender/recommend-query.html#overview","text":"","title":"Overview"},{"location":"/docs/tutorial/build-recommender/recommend-query.html#what-youll-build","text":"","title":"What you’ll build"},{"location":"/docs/tutorial/build-recommender/recommend-query.html#what-youll-learn","text":"","title":"What you’ll learn"},{"location":"/docs/tutorial/build-recommender/recommend-query.html#what-youll-need","text":"","title":"What you’ll need"},{"location":"/docs/tutorial/build-recommender/recommend-query.html#get-the-tutorial-code","text":"","title":"Get the tutorial code"},{"location":"/docs/index.html","text":"","title":"Blue Brain Nexus"},{"location":"/docs/index.html#blue-brain-nexus","text":"The BlueBrain Nexus is a provenance based, semantic enabled data management platform enabling the definition of an arbitrary domain of application for which there is a need to create and manage entities as well as their relations (e.g. provenance). For example, the domain of application managed by the Nexus platform deployed at Blue Brain is to digitally reconstruct and simulate the brain.\nAt the heart of the BlueBrain Nexus platform lies the Knowledge Graph; at BlueBrain, it will allow scientists to:\nRegister and manage neuroscience relevant entity types through schemas that can reuse or extend community defined schemas (e.g. schema.org, bioschema.org, W3C-PROV) and ontologies (e.g. brain parcellation schemes, cell types, taxonomy). Submit data to the platform and describe their provenance using the W3C PROV model. Provenance is about how data or things are generated (e.g. protocols, methods used…), when (e.g. timeline) and by whom (e.g. people, software…). Provenance supports the data reliability and quality assessment as well as enables workflow reproducibility. Platform users can submit data either through web forms or programmatic interfaces. Search, discover, reuse and derive high-quality neuroscience data generated within and outside the platform for the purpose of driving their own scientific endeavours. Data can be examined by species, contributing laboratory, methodology, brain region, and data type, thereby allowing functionality not currently available elsewhere. The data are predominantly organized into atlases (e.g. Allen CCF, Waxholm) and linked to the KnowledgeSpace – a collaborative community-based encyclopedia linking brain research concepts to the latest data, models and literature.\nIt is to be noted that many other scientific fields (Astronomy, Agriculture, Bioinformatics, Pharmaceutical Industry, …) are in need of such a technology. Consequently, BlueBrain Nexus core technology is being developed to be agnostic of the domain it might be applied to.","title":"Blue Brain Nexus"},{"location":"/docs/getting-started/index.html","text":"","title":"Getting Started"},{"location":"/docs/getting-started/index.html#getting-started","text":"","title":"Getting Started"},{"location":"/docs/getting-started/index.html#overview","text":"Blue Brain Nexus is an open source, data and knowledge management platform designed to enable open data-driven science by enabling the FAIR principles, tracking data provenance and supporting data longevity in a secure and scalable manner.\nA key component of the platform is the Knowledge Graph, which acts as a data repository and metadata catalog. The data ingested in the Knowledge Graph is structured in a semantically meaningful way and can be linked to other data. This allows users to assess the quality of data, and consequently enables them to build trust.","title":"Overview"},{"location":"/docs/getting-started/nexus-concepts.html","text":"","title":"Brief introduction of Nexus concepts"},{"location":"/docs/getting-started/nexus-concepts.html#brief-introduction-of-nexus-concepts","text":"The following paragraph intends to give a high-level introduction to basic concepts implemented in Blue Brain Nexus from a user perspective. The introduction is intended for a reader who wants to get a quick overview and feel for the concepts within Blue Brain Nexus.\nThe following concepts will be addressed in this paragraph: Organizations, Projects, Schemas, Data, Resolvers, Views and Resources.\nFor instance, let’s imagine you have some data from your latest clinical research study, and Blue Brain Nexus is your data management platform of choice. You want to store your data - e.g. the files and metadata for each study participant - in a structured manner that makes sense to you, your collaborators and your research field, update the data (e.g. to correct a typo) and search for them in a meaningful way (e.g. to retrieve only the data which was collected from female study participants).\nBoth concepts of Organizations and Projects in Nexus help you structure the data you want to store - a bit like the folder structure of an operating system which allows you to group data. Organizations are the highest level under which you can group your data. You could e.g. create an organization for the department you are working in to help you collect all the data from your department under this organization. Located within organizations are projects. Much like organizations, projects allow you to group your data. You could e.g. create a project for the data from your research group within your department organization in Blue Brain Nexus in which you will then store the data from your latest clinical research study. While both organizations and projects help you to group your data and control who can access them, projects allow you to define additional settings applicable to everything within it, e.g. you can define how the identifier a schema within a given project should be composed.\nSo what are Schemas in the context of Blue Brain Nexus? Schemas are a collection of rules or constraints applied to Data, or to other Resources in Blue Brain Nexus. Different types of data can be described with different schemas, e.g. if you want to store data on a person in Blue Brain Nexus, you could use a schema which requires you to provide a first name and a surname in your data, while if you want to store data on a research institute, you could use a schema which requires you to provide the name and the address of the institute. In brief, schemas in Nexus help ensure that (meta-)data is stored in the desired shape and that required (meta-)data is provided. So far, this paragraph described that you can “bucket” your data in organizations and projects and that you can validate them against a selected schema. However, one can imagine situations in which it is desirable to bridge projects while avoiding isolation, e.g. if you want to re-use a schema inside your project which one of your collaborators had already developed for a separate project in Blue Brain Nexus. For this purpose, Blue Brain Nexus provides a “bridging” mechanism called Resolvers. By defining a resolver, you can e.g. bring a schema from one project in Blue Brain Nexus within the scope of another. Once your data is stored in Blue Brain Nexus in the desired structure, you most certainly want to perform all sorts of searches on them. For search purposes, Blue Brain Nexus offers so-called Views, of which there can be several, each relying on a different technology (e.g. ElasticSearch).\nFinally, all concepts in this paragraph, including organizations, projects, schemas, data, resolvers and views, are generically referred to as Resources within Blue Brain Nexus.","title":"Brief introduction of Nexus concepts"},{"location":"/docs/getting-started/running-nexus/index.html","text":"","title":"Running Nexus"},{"location":"/docs/getting-started/running-nexus/index.html#running-nexus","text":"If you wish to quickly try out Nexus, we provide a public sandbox. For a more in-depth test-drive of Nexus on your machine, we recommend the Docker Swarm approach. For a production deployment on your in-house or cloud infrastructure, please refer to our deployment guide.","title":"Running Nexus"},{"location":"/docs/getting-started/running-nexus/index.html#using-the-public-sandbox","text":"A public instance of Nexus is running at https://sandbox.bluebrainnexus.io/web. You can log in with a GitHub account. It’s provided for evaluation purposes only, without any guarantees.\nThe API root is https://sandbox.bluebrainnexus.io/v1.\nNote Do not ingest any proprietary or sensitive data. The environment will be wiped regularly, your data and credentials can disappear anytime.","title":"Using the public sandbox"},{"location":"/docs/getting-started/running-nexus/index.html#run-nexus-locally-with-docker","text":"","title":"Run Nexus locally with Docker"},{"location":"/docs/getting-started/running-nexus/index.html#requirements","text":"","title":"Requirements"},{"location":"/docs/getting-started/running-nexus/index.html#docker","text":"Regardless of your OS, make sure to run a recent version of Docker (community edition). This was tested with versions 18.03.1 and above. You might need to get installation packages directly from the official Docker website if the one provided by your system package manager is outdated.\nCommand :\ndocker --version\nExample :\n$ docker version\nDocker version 18.09.1, build 4c52b90","title":"Docker"},{"location":"/docs/getting-started/running-nexus/index.html#memory-and-cpu-limits","text":"On macOS and Windows, Docker effectively runs containers inside a VM created by the system hypervisor. Nexus requires at least 2 CPUs and 8 GiB of memory in total. You can increase the limits in Docker settings in the menu Preferences > Advanced.\nFor a proper evaluation using Docker Swarm or Minikube/Kubernetes, at least 16GiB of RAM is needed to run the provided templates. Feel free to tweak memory limits in order to fit your hardware constraints. At the cost of a slower startup and a decreased overall performance, you should be able to go as low as:\nService Memory [MiB] Cassandra 512 Elasticsearch 512 Blazegraph 1024 KG 1024 IAM 512 Admin 512","title":"Memory and CPU limits"},{"location":"/docs/getting-started/running-nexus/index.html#recommended-docker-swarm","text":"Docker Swarm is the native orchestrator shipped with Docker. It provides a more robust way to run Nexus.\nIf you’ve never used Docker Swarm or Docker Stacks before, you first need to create a swarm cluster on your local machine:\nCommand :\ndocker swarm init\nExample :\n$ docker swarm init\nSwarm initialized: current node (***) is now a manager.\n \nTo add a worker to this swarm, run the following command:\n \n    docker swarm join --token {token} 128.178.97.243:2377\n \nTo add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.","title":"Recommended: Docker Swarm"},{"location":"/docs/getting-started/running-nexus/index.html#deployment","text":"Download the Docker Compose template into a directory of your choice. For instance ~/docker/nexus/.","title":"Deployment"},{"location":"/docs/getting-started/running-nexus/index.html#starting-nexus","text":"Create a nexus deployment with Docker Stacks:\nCommand :\ndocker stack deploy nexus --compose-file=docker-compose.yaml\nExample :\n$ cd ~/docker/nexus\n$ docker stack deploy nexus --compose-file=docker-compose.yaml\nCreating network nexus_default\nCreating service nexus_iam\nCreating service nexus_admin\nCreating service nexus_elasticsearch\nCreating service nexus_cassandra\nCreating service nexus_blazegraph\nCreating service nexus_router\nCreating service nexus_kg\nWait one or two minutes and you should be able to access Nexus locally, on the port 80:\nCommand :\ncurl http://localhost/kg\nExample :\n$ curl http://localhost/kg\n{\"name\":\"kg\",\"version\":\"1.0.0\"}","title":"Starting Nexus"},{"location":"/docs/getting-started/running-nexus/index.html#administration","text":"To list running services or access logs, please refer to the official Docker documentation.\nAlternatively you can deploy Swarmpit which provides a comprehensive UI to manage your Docker Swarm cluster.","title":"Administration"},{"location":"/docs/getting-started/running-nexus/index.html#stopping-nexus","text":"You can stop and delete the entire deployment with:\nCommand :\ndocker stack rm nexus\nExample :\n$ docker stack rm nexus\nRemoving service nexus_admin\nRemoving service nexus_blazegraph\nRemoving service nexus_cassandra\nRemoving service nexus_elasticsearch\nRemoving service nexus_iam\nRemoving service nexus_kg\nRemoving service nexus_router\nRemoving network nexus_default\nNote As no data is persisted outside the containers, everything will be lost once you remove the Nexus deployment. If you’d like help with creating persistent volumes, feel free to contact us on our Gitter channel.","title":"Stopping Nexus"},{"location":"/docs/getting-started/running-nexus/index.html#legacy-docker-compose","text":"While not recommended, we provide a Docker Compose template in the old version 2 format. It comes with lower memory settings and it’s a convenient way to quickly try out Nexus on your own computer. Download the file into a directory of your choice, for instance ~/docker/nexus/. You can then simply run docker-compose up within this directory:\nCommand :\ndocker-compose up\nExample :\n$ docker-compose up\nCreating network \"nexus_default\" with the default driver\nPulling cassandra (cassandra:3)...\n[...]\nCreating nexus_admin_1         ... done\nCreating nexus_blazegraph_1    ... done\nCreating nexus_router_1        ... done\nCreating nexus_iam_1           ... done\nCreating nexus_web_1           ... done\nCreating nexus_cassandra_1     ... done\nCreating nexus_kg_1            ... done\nCreating nexus_elasticsearch_1 ... done\nAttaching to nexus_iam_1, nexus_kg_1, nexus_blazegraph_1, nexus_cassandra_1, nexus_elasticsearch_1, nexus_admin_1, nexus_router_1, nexus_web_1\n[...]","title":"Legacy: Docker Compose"},{"location":"/docs/getting-started/running-nexus/index.html#endpoints","text":"The provided reverse proxy (the nexus-router image) exposes several endpoints:\nroot: Nexus web interface v1: API root admin: Admin service descriptor iam: IAM service descriptor kg: KG service descriptor elasticsearch: Elasticsearch endpoint blazegraph: Blazegraph web interface\nIf you’d like to customize the listening port or remove unnecessary endpoints, you can build your own Nginx based Docker image. See the reference configuration.","title":"Endpoints"},{"location":"/docs/getting-started/running-nexus/index.html#run-nexus-locally-with-minikube","text":"Minikube is a tool that makes it easy to run Kubernetes locally. Minikube runs a single-node Kubernetes cluster inside a VM on your machine for users looking to try out Kubernetes or develop with it day-to-day.\nNote This section makes use of static assets hosted on this website; to remove the clutter please export the base of the documentation to $MINI env var: export MINI=\"https://bluebrainnexus.io/docs/getting-started/running-nexus/minikube\"\nNote This page presents the necessary commands to deploy Nexus with Minikube but also examples the show the expected output. Some of the examples on this page make use of curl and jq for formatting the json output when interacting with the services. Please install these command line tools if you’d like to run the commands in the examples. They should be available through your usual package manager (Chocolatey, Homebrew, APT, YUM/DNF, …)","title":"Run Nexus locally with Minikube"},{"location":"/docs/getting-started/running-nexus/index.html#minikube-set-up","text":"","title":"Minikube set-up"},{"location":"/docs/getting-started/running-nexus/index.html#installation","text":"Follow the installation instructions from the official Kubernetes documentation.","title":"Installation"},{"location":"/docs/getting-started/running-nexus/index.html#run-minikube","text":"To start Minikube run (notice the cpu and memory flags, the setup requires a minimum of --cpus=2 --memory=8196):\nminikube start --cpus 6 --memory 10240 --vm-driver=$DRIVER\nFor better performance we recommended to select the $DRIVER corresponding to your OS native hypervisor, namely hyperkit on macOS, hyperv on Windows and kvm2 on Linux.\nIf the installation is successful you can run the following command to open the Kubernetes Dashboard:\nminikube dashboard\nTo stop Minikube run:\nminikube stop\nNote After stopping minikube the vm still exists on the system; starting minikube again will preserve the deployed services. To permanently remove minikube vm run: minikube delete","title":"Run Minikube"},{"location":"/docs/getting-started/running-nexus/index.html#enable-the-ingress-addon","text":"Minikube comes with a collection of addons like the Kubernetes Dashboard but not all are enabled by default. An important one is the ingress addon which enables routing http traffic from the host into the cluster.\nTo make sure the ingress addon is enabled run:\nCommand :\nminikube addons enable ingress\nExample :\n$ minikube addons enable ingress\ningress was successfully enabled\n$\nTo get the external IP of the cluster (to be used later in accessing services) run:\nCommand: :\nminikube ip\nExample: :\n$ minikube ip\n192.168.64.3\n$","title":"Enable the ingress addon"},{"location":"/docs/getting-started/running-nexus/index.html#setup-a-separate-namespace","text":"Kubernetes namespaces are logical groupings of resources which allow segregating various deployments in “virtual clusters”.\nThe default installation of Minikube creates three namespaces: kube-system, kube-public and default. This example uses a separate namespace to group Nexus specific resources.\nGet the list of available namespaces:\nCommand :\nkubectl get namespaces\nExample :\n$ kubectl get namespaces\nNAME          STATUS    AGE\ndefault       Active    1h\nkube-public   Active    1h\nkube-system   Active    1h\n$\nCreate the nexus namespace:\nCommand :\nkubectl apply -f $MINI/namespace.yaml\nExample :\n$ kubectl apply -f $MINI/namespace.yaml\nnamespace/nexus created\n$ kubectl get namespaces\nNAME          STATUS    AGE\ndefault       Active    1h\nkube-public   Active    1h\nkube-system   Active    1h\nnexus         Active    1m\n$\nDefault the kubectl to the nexus namespace:\nCommand :\nkubectl config set-context minikube --namespace=nexus\nExample :\n$ kubectl config set-context minikube --namespace=nexus\nContext \"minikube\" modified.\n$\nNote Every time Minikube is stopped and started again, the context and its configuration is lost. Remember to run the following commands every time you start minikube: kubectl config use-context minikube && kubectl config set-context minikube --namespace=nexus","title":"Setup a separate namespace"},{"location":"/docs/getting-started/running-nexus/index.html#deploy-dependent-services","text":"Nexus uses numerous off the shelf services that need to be set up as a prerequisite. Run the following command to save the IP address of the minikube cluster in an environment variable:\nCommand :\nexport NEXUS=$(minikube ip)\nExample :\n$ export NEXUS=$(minikube ip)\n$ echo $NEXUS\n192.168.64.3\n$","title":"Deploy dependent services"},{"location":"/docs/getting-started/running-nexus/index.html#deploy-cassandra","text":"Command :\nkubectl apply -f $MINI/cassandra.yaml && \\\n  kubectl wait pod cassandra-0 --for condition=ready --timeout=180s\nExample :\n$ kubectl apply -f $MINI/cassandra.yaml\nservice/cassandra created\nstatefulset.apps/cassandra created\n$ kubectl exec -it cassandra-0 -- nodetool status\nDatacenter: datacenter1\n=======================\nStatus=Up/Down\n|/ State=Normal/Leaving/Joining/Moving\n--  Address     Load       Tokens       Owns (effective)  Host ID                               Rack\nUN  172.17.0.4  103.71 KiB  256          100.0%            80c0bdfa-1f5e-41aa-8a7e-f0dea7fe7ef0  rack1\n$","title":"Deploy Cassandra"},{"location":"/docs/getting-started/running-nexus/index.html#deploy-elasticsearch","text":"Command :\nkubectl apply -f $MINI/elasticsearch.yaml && \\\n  kubectl wait pod elasticsearch-0 --for condition=ready --timeout=180s\nExample :\n$ kubectl apply -f $MINI/elasticsearch.yaml\nservice/elasticsearch created\nservice/elasticsearch-discovery created\nstatefulset.apps/elasticsearch created\n$ kubectl wait pod elasticsearch-0 --for condition=ready --timeout=60s\npod/elasticsearch-0 condition met\n$ curl \"http://$NEXUS/elasticsearch\"\n{\n  \"name\" : \"0LfjOb2\",\n  \"cluster_name\" : \"es-cluster\",\n  \"cluster_uuid\" : \"ZZF9_hFgTm2wQYYBKQ9dRg\",\n  \"version\" : {\n    \"number\" : \"6.4.3\",\n    \"build_flavor\" : \"default\",\n    \"build_type\" : \"tar\",\n    \"build_hash\" : \"fe40335\",\n    \"build_date\" : \"2018-10-30T23:17:19.084789Z\",\n    \"build_snapshot\" : false,\n    \"lucene_version\" : \"7.4.0\",\n    \"minimum_wire_compatibility_version\" : \"5.6.0\",\n    \"minimum_index_compatibility_version\" : \"5.0.0\"\n  },\n  \"tagline\" : \"You Know, for Search\"\n}\n$","title":"Deploy Elasticsearch"},{"location":"/docs/getting-started/running-nexus/index.html#deploy-blazegraph","text":"Command :\nkubectl apply -f $MINI/blazegraph.yaml && \\\n  kubectl wait pod blazegraph-0 --for condition=ready --timeout=180s\nExample :\n$ kubectl apply -f $MINI/blazegraph.yaml\nservice/blazegraph created\nstatefulset.apps/blazegraph created\npersistentvolumeclaim/storage-blazegraph created\ningress.extensions/blazegraph created\n$ kubectl wait pod blazegraph-0 --for condition=ready --timeout=180s\npod/blazegraph-0 condition met\n$ curl -s -H\"Accept: application/json\" \"http://$NEXUS/blazegraph/namespace?describe-each-named-graph=false\" | head -4\n  {\n    \"head\" : {\n      \"vars\" : [ \"subject\", \"predicate\", \"object\", \"context\" ]\n    },\n$","title":"Deploy BlazeGraph"},{"location":"/docs/getting-started/running-nexus/index.html#deploy-nexus-services","text":"Before configuring the services a configuration map must first be created that keeps track of the “public” ip address of the minikube cluster. The following command will replace the {NEXUS} token in the config.yaml file with the value stored in the $NEXUS variable set above.\nCommand :\ncurl -s $MINI/config.yaml | sed \"s/{NEXUS}/$NEXUS/g\" | kubectl apply -f -\nExample :\n$ curl -s $MINI/config.yaml | sed \"s/{NEXUS}/$NEXUS/g\" | kubectl apply -f -\nconfigmap/config created\n$ kubectl get configmap/config -o yaml | grep public.ip:\n  public.ip: 192.168.64.4\n$","title":"Deploy Nexus Services"},{"location":"/docs/getting-started/running-nexus/index.html#deploy-iam","text":"IAM is the service that manages identities and tokens via OIDC providers and manages the permissions to arbitrary resources in the system. By default, anonymous users will be granted enough permissions to fully manage resources in the system. If you’d like to change this behavior, you must set up realms and permissions manually.\nCommand :\nkubectl apply -f $MINI/iam.yaml && \\\n  kubectl wait pod iam-0 --for condition=ready --timeout=180s\nExample :\n$ kubectl apply -f $MINI/iam.yaml\nservice/iam created\nservice/iam-hd created\nstatefulset.apps/iam created\ningress.extensions/iam created\ningress.extensions/iam-direct created\n$ kubectl wait pod iam-0 --for condition=ready --timeout=180s\npod/iam-0 condition met\n$ curl -s \"http://$NEXUS/iam\" | jq\n{\n  \"name\": \"iam\",\n  \"version\": \"1.0.1\"\n}\n$ curl -s \"http://$NEXUS/v1/acls/\" | jq\n{\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\"\n  ],\n  \"_total\": 1,\n  \"_results\": [\n    {\n      \"@id\": \"http://192.168.39.171/v1/acls\",\n      \"@type\": \"AccessControlList\",\n      \"acl\": [\n        {\n          \"identity\": {\n            \"@id\": \"http://192.168.39.171/v1/anonymous\",\n            \"@type\": \"Anonymous\"\n          },\n          \"permissions\": [\n            \"schemas/write\",\n            \"views/write\",\n            \"files/write\",\n            \"permissions/write\",\n            \"acls/write\",\n            \"realms/write\",\n            \"projects/read\",\n            \"acls/read\",\n            \"organizations/create\",\n            \"organizations/write\",\n            \"resources/write\",\n            \"realms/read\",\n            \"projects/create\",\n            \"permissions/read\",\n            \"resources/read\",\n            \"organizations/read\",\n            \"resolvers/write\",\n            \"events/read\",\n            \"views/query\",\n            \"projects/write\"\n          ]\n        }\n      ],\n      \"_path\": \"/\",\n      \"_rev\": 0,\n      \"_createdAt\": \"1970-01-01T00:00:00Z\",\n      \"_createdBy\": \"http://192.168.39.171/v1/anonymous\",\n      \"_updatedAt\": \"1970-01-01T00:00:00Z\",\n      \"_updatedBy\": \"http://192.168.39.171/v1/anonymous\"\n    }\n  ]\n}\n$","title":"Deploy IAM"},{"location":"/docs/getting-started/running-nexus/index.html#deploy-admin","text":"Admin is the service that manages organizations, projects and their configuration.\nCommand :\nkubectl apply -f $MINI/admin.yaml && \\\n  kubectl wait pod admin-0 --for condition=ready --timeout=180s\nExample :\n$ kubectl apply -f $MINI/admin.yaml\nservice/admin created\nservice/admin-hd created\nstatefulset.apps/admin created\ningress.extensions/admin created\ningress.extensions/admin-direct created\n$ kubectl wait pod admin-0 --for condition=ready --timeout=180s\npod/admin-0 condition met\n$ curl -s \"http://$NEXUS/admin\" | jq\n{\n  \"name\": \"admin\",\n  \"version\": \"1.0.2\"\n}\n$ curl -s \"http://$NEXUS/v1/projects\" | jq\n{\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\"\n  ],\n  \"_total\": 0,\n  \"_results\": []\n}\n$","title":"Deploy Admin"},{"location":"/docs/getting-started/running-nexus/index.html#deploy-kg","text":"KG is the service that manages user defined resources, their schemas and configuration like resolvers, views etc.\nCommand :\nkubectl apply -f $MINI/kg.yaml && \\\n  kubectl wait pod kg-0 --for condition=ready --timeout=180s\nExample :\n$ kubectl apply -f $MINI/kg.yaml\nservice/kg created\nservice/kg-hd created\nstatefulset.apps/kg created\npersistentvolumeclaim/storage-kg created\ningress.extensions/kg created\ningress.extensions/kg-direct created\n$ kubectl wait pod kg-0 --for condition=ready --timeout=180s\npod/kg-0 condition met\n$ curl -s \"http://$NEXUS/kg\" | jq\n{\n  \"name\": \"kg\",\n  \"version\": \"1.0.0\"\n}\n$ curl -s \"http://$NEXUS/v1/resources/org/proj\" | jq # the 404 error is expected\n{\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/error.json\",\n  \"@type\": \"ProjectNotFound\",\n  \"label\": \"org/proj\",\n  \"reason\": \"Project 'org/proj' not found.\"\n}\n$","title":"Deploy KG"},{"location":"/docs/getting-started/running-nexus/index.html#deploy-the-web-interface","text":"The Nexus web application provides an interface to perform basic tasks on organizations and projects and query the system resources through Elasticsearch and SPARQL queries.\nCommand :\nkubectl apply -f $MINI/web.yaml && \\\n  kubectl wait pod nexus-web-0 --for condition=ready --timeout=180s\nExample :\n$ kubectl apply -f $MINI/web.yaml\nservice/nexus-web created\nstatefulset.apps/nexus-web created\ningress.extensions/nexus-web created\n$ kubectl wait pod nexus-web-0 --for condition=ready --timeout=180s\npod/nexus-web-0 condition met\n$\nYou can now access the web interface at http://$NEXUS, $NEXUS being the public IP of your Minikube cluster, as seen above.","title":"Deploy the web interface"},{"location":"/docs/getting-started/running-nexus/index.html#on-premise-cloud-deployment","text":"There are several things to consider when preparing to deploy Nexus “on premise” because the setup depends a lot on the various usage profiles, but the most important categories would be:\nAvailability Latency & throughput Capacity Efficient use of hardware resources Backup and restore Monitoring & alerting\nEach of the Nexus services and “off the shelf” products can be deployed as a single instance or as a cluster (with one exception at this point being BlazeGraph which doesn’t come with a clustering option). The advantages for deploying clusters are generally higher availability, capacity and throughput at the cost of higher latency, consistency and having to potentially deal with network instability.\nThe decision to go with single node deployments or clustered deployments can be revisited later on and mixed setups (some services single node while others clustered) are also possible.\nThe Nexus distribution is made up of docker images which can be run on any host operating system and each of the “off the shelf” products also offer docker as a deployment option. We would generally recommend using a container orchestration solution like Kubernetes, OpenShift or Docker Swarm as they offer good management capabilities, discovery, load balancing and self-healing. They also accommodate changes in hardware allocations for the deployments, changes that can occur due to evolving usage patterns, software updates etc. Currently the biggest Nexus deployment is at EPFL within OpenShift.","title":"On premise / cloud deployment"},{"location":"/docs/getting-started/running-nexus/index.html#choice-of-hardware","text":"Depending on the target throughput, usage profiles and data volume the hardware specification can vary greatly; please take a look at the benchmarks section to get an idea of what you should expect in terms of throughput with various hardware configurations. When the usage profiles are unknown a couple of rules of thumb should narrow the scope:\nNexus uses a collection of data stores (Cassandra, ElasticSearch, BlazeGraph) which depend performance wise to the underlying disk access, so: prefer local storage over network storage for lower latency when doing IO, prefer SSD over HDDs because random access speed is more important than sequential access, one exception is the file storage (attachments to resources which are stored as binary blobs on the filesystem) where the network disks should not be a cause for concern, nor random access speed; this assumes that accessing attachments is not the at the top in the usage profile All of Nexus services and most of the “off the shelf” products are built to run on top of the JVM which usually require more memory over computing power. A rough ratio of 2 CPU cores per 8GB of RAM is probably a good one (this of course depends on the CPU specification). Due to the design for scalability of Nexus services and “off the shelf” products the network is a very important characteristic of the deployment as frequent dropped packets or network partitions can seriously affect the availability of the system. Clustered / distributed systems generally use some form of consensus which is significantly affected by the reliability of the network. If the reliability of the network is a concern within the target deployment then vertical scalability is desirable over horizontal scalability: fewer host nodes with better specifications is better over more commodity hardware host nodes.","title":"Choice of hardware"},{"location":"/docs/getting-started/running-nexus/index.html#cassandra","text":"Nexus uses Cassandra as its primary store as it scales well in terms of reads with the number of nodes in the cluster. It offers data replication out of the box, which allows the system to continue to be available in case of node failures or network partitions.\nSince this is the primary store it is the most important system to be backed up. All of the data that Nexus uses in other stores can be recomputed from the one stored in Cassandra as the other stores are used as mere indexing systems.\nPlease have a look at the Planning and Testing section in the DataStax documentation as it contains recommendations in terms of hardware and capacity.\nAs described in the architecture section the generally adopted persistence model is an EventSourced model in which the data store is used as an append only store. This has implications to the total amount of disk used by the primary store.\nA formula for computing the required disk space:\ntotal = (resource_size + nexus_metadata_size) * count * number_updates * replication_factor * 2 (compaction requirement)\nThe nexus_metadata_size varies depending on many things, but it’s generally less than or equal to the resource_size.\nAn example, assuming:\n10KB per resource 1.000.000 distinct resources 10 updates per resource replication factor of 3\n… the total required disk size would be:\n(10KB + 10KB) * 1.000.000 * 10 * 3 * 2 = 1.000.000.000KB ~= 955GB\nThe resulting size represents the total disk space of the cluster; a 5 node cluster with the data volume in the example above would have to be configured with 200GB disks per node.","title":"Cassandra"},{"location":"/docs/getting-started/running-nexus/index.html#elasticsearch","text":"Nexus uses ElasticSearch to host several system indices and user defined ones. It offers sharding and replication out of the box. Deciding whether this system requires backup depends on the tolerated time for a restore. Nexus can be instructed to rebuild all indices using the data from the primary store, but being an incremental indexing process it can take longer than restoring from a backup. Since it can be configured to host a number of replicas for each shard it can tolerate a number of node failures.\nThe ElasticSearch setup documentation contains the necessary information on how to install and configure it, but recommendations on sizing the nodes and cluster are scarce because it depends on usage.\nA formula for computing the required disk space:\ntotal = (resource_size * count * documents + lucene_index) * replication_factor\n… where the lucene_index while it can vary should be less than twice the size of the original documents.\nAn example, assuming:\n10KB per resource 1.000.000 distinct resources 3 documents per resource (the number of documents depends on the configured views in the system) 2 additional shard replicas (replication factor of 3)\n… the total required disk size would be:\n(10KB * 1.000.000 * 3 + 2 * (10KB * 1.000.000 * 3)) * 3 = 270.000.000KB ~= 260GB\nThe resulting size represents the total disk space of the data nodes in the cluster; a 5 data node cluster with the data volume in the example above would have to be configured with 60GB disks per node.","title":"ElasticSearch"},{"location":"/docs/getting-started/running-nexus/index.html#blazegraph","text":"Nexus uses BlazeGraph as an RDF (triple) store to provide a advanced querying capabilities on the hosted data. This store is treated as a specialized index on the data so as with Kafka and ElasticSearch in case of failures, the system can be fully restored from the primary store. While the technology is advertised to support High Availability and Scaleout deployment configurations, we have yet to be able to setup a deployment in this fashion.\nWe currently recommend deploying BlazeGraph using the prepackaged tar.gz distribution available to download from sourceforge.\nNote We’re looking at alternative technologies and possible application level (within Nexus) sharding and replicas.\nThe Hardware Configuration section in the documentation gives a couple of hints about the requirements to operate BlazeGraph and there are additional sections for optimizations in terms of Performance, IO and Query.\nBlazeGraph stores data in an append only journal which means updates will use additional disk space.\nA formula for computing the required disk space:\ntotal = (resource_triples + nexus_triples) * count * number_updates * triple_size + lucene_index\n… where the lucene_index while it can vary should be less than twice the size of the original documents.\nAn example, assuming:\n100 triples (rough estimate for a 10KB json-ld resource representation) 20 additional nexus triples on average 1.000.000 distinct resources 10 updates per resource 200 bytes triple size (using quads mode)\n… the total required disk size would be:\n(100 + 20) * 1.000.000 * 10 * 200 / 1024 * 3 ~= 700.000.000KB ~= 670GB\nCompactions can be applied to the journal using the CompactJournalUtility to reduce the disk usage, but it takes quite a bit a time and requires taking the software offline during the process.","title":"BlazeGraph"},{"location":"/docs/getting-started/webapps.html","text":"","title":"Web applications"},{"location":"/docs/getting-started/webapps.html#web-applications","text":"","title":"Web applications"},{"location":"/docs/getting-started/webapps.html#nexus-web","text":"Nexus Web is the web interface for Blue Brain Nexus, allowing users to interact with data and perform administration tasks. It is being actively developed and new features are regularly added.\nIt currently contains the following features:","title":"Nexus Web"},{"location":"/docs/getting-started/webapps.html#login","text":"You can login with your user to access non-public resources (depending on your permissions).","title":"Login"},{"location":"/docs/getting-started/webapps.html#copy-auth-token-for-reuse-with-other-nexus-related-tools","text":"Once logged-in, you can copy your authentication token, in order to easily reuse it in, for example, an IPython Notebook or the Nexus CLI client.","title":"Copy Auth Token for reuse with other Nexus-related tools"},{"location":"/docs/getting-started/webapps.html#browsing-data","text":"To group and control access to your data, Nexus provides you Organizations and Projects. Much like in Github (if you’re familiar with it), there are Organizations which contain Projects (Repositories in Github), which in turn contain your data (files in GitHub, Resources in Nexus).\nIn Nexus Web, the landing page will show you the list of Organizations you have access to.\nAfter selecting an organization, you will see the list of Projects you have access to inside this organization.\nSelect a Project, you’ll get to the list of its Resources.\nYou can search resources using the ElasticSearch query syntax.","title":"Browsing data"},{"location":"/docs/getting-started/webapps.html#details-view","text":"Click on a resource and you’ll see a more detailed view with important metadata displayed on a card on the top, as well as a JSON-lD form that may or not be editable, depending on the selected resource’s schema (uploaded files cannot be edited, for example.)","title":"Details View"},{"location":"/docs/getting-started/webapps.html#links-view","text":"Inside the Details View you’ll find a tab called Links. Here you can find two lists, one for Incoming Links and one for Outgoing Links. Incoming Links are other datasets that reference this dataset. Outgoing links are other datasets that are referenced inside this one. This is very helpful to navigate down the chains of references you have, by clicking on a link you’ll be taken to that resource’s details page, or brought to the web url if it’s an external resource (a referenced URI, but not a resource integrated into the platform)","title":"Links View"},{"location":"/docs/getting-started/webapps.html#graph-view","text":"Inside the Details View you’ll also find a tab that contains a WIP graph visualizer. This will be more useful as navigation functionalities are implemented, but for now it’s helpful to visualize how the dataset is a collection of nodes (subjects) linking predicates (the yellow lines) to objects (other nodes).","title":"Graph View"},{"location":"/docs/getting-started/webapps.html#advanced-use-cases","text":"If you want to have several filtered lists of resources side by side, you can create additional filterable lists by using the “New Query” button in the side panel. It can be handy to make comparisons, or to build a set of ElasticSearch queries we want to reuse in an IPython Notebook or in a script.\nYou can also clone one of the active Queries to use it as a starting point.\nIf you need to make complex ElasticSearch queries or if you want to see the raw payload returned by ElasticSearch, you can click on “ElasticSearch query editor”. Results will be displayed in JSON-LD format.\nFor graph and RDF-related queries, we also offer a SPARQL query editor that runs against our triple-store. Results are displayed in a table.","title":"Advanced use-cases"},{"location":"/docs/getting-started/webapps.html#managing-your-nexus-instance","text":"","title":"Managing your Nexus instance"},{"location":"/docs/getting-started/webapps.html#creating-an-organization","text":"Click on the “Create organization” icon next to the title of the homepage to create a new organization.","title":"Creating an Organization"},{"location":"/docs/getting-started/webapps.html#editing-or-deprecating-an-organization","text":"On the list of organizations, click on the “edit” button that appear when hovering on an organization. You’ll be able to edit the description of the organization and hit “Save” to modify it. To deprecate the organization, hit the “Deprecate” button.","title":"Editing or deprecating an Organization"},{"location":"/docs/getting-started/webapps.html#creating-a-project","text":"Navigate to the organization where you want to create your project. Click on the “Create Project” icon next to the title of the page.","title":"Creating a Project"},{"location":"/docs/getting-started/webapps.html#editing-or-deprecating-a-project","text":"Navigate to the organization where your project is. Click on the “Edit” button that appear when you hover a project in the list. You’ll be able to edit its description and hit save to modify it. Hit “Deprecate” to deprecate the project.","title":"Editing or deprecating a Project"},{"location":"/docs/getting-started/webapps.html#making-a-project-publicly-accessible","text":"Navigate to the edition page for the project. Hit the “Make project public” to make the project and all the data it contains publicly accessible.","title":"Making a project publicly accessible"},{"location":"/docs/getting-started/webapps.html#creating-resources","text":"Navigate to the project where you want to create a resource. Click on the “Create Resource” button in the right sidebar. Build the JSON payload with the help of the interactive editor, then hit “Save”.","title":"Creating Resources"},{"location":"/docs/tutorial/index.html","text":"","title":"Tutorials"},{"location":"/docs/tutorial/index.html#tutorials","text":"This documentation contains a set of example-driven tutorials and guides showing how to quickly start with, understand and use the Blue Brain Nexus Knowledge Graph. These tutorials were presented during a Blue Brain Nexus workshop organized at the 2019 edition of the Applied Machine Learning Days (AMLD 2019) Conference held at the STCC, EPFL on January 27 2019.\nQuick Start guide Querying Blue Brain Nexus Knowledge Graph Extending and Linking entities in the Knowledge Graph Building a Data Pipeline for a Recommender System","title":"Tutorials"},{"location":"/docs/tutorial/getting-started/index.html","text":"","title":"Quick Start Guide"},{"location":"/docs/tutorial/getting-started/index.html#quick-start-guide","text":"","title":"Quick Start Guide"},{"location":"/docs/tutorial/getting-started/index.html#overview","text":"This Getting Started tutorial introduces basic Blue Brain Nexus features and capabilities.","title":"Overview"},{"location":"/docs/tutorial/getting-started/index.html#what-youll-build","text":"A project within a Blue Brain Nexus deployment where a subset of the MovieLens dataset is ingested and queriable.","title":"What you’ll build"},{"location":"/docs/tutorial/getting-started/index.html#what-youll-learn","text":"How to set up the Nexus CLI How to create a project in Nexus How to ingest data How to access data How to share data","title":"What you’ll learn"},{"location":"/docs/tutorial/getting-started/index.html#what-youll-need","text":"A Python 3.5 or higher with support of Jupyter notebook","title":"What you’ll need"},{"location":"/docs/tutorial/getting-started/quick-start/index.html","text":"","title":"Quick Start"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#quick-start","text":"","title":"Quick Start"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#overview","text":"This example-driven tutorial presents 5 steps to get started with Blue Brain Nexus to build and query a simple knowledge graph. The goal is to go over some capabilities of Blue Brain Nexus enabling:\nThe creation of a project as a protected data space to work with An easy ingestion of dataset and management of it’s lifecycle Querying a dataset to retrieve various information Sharing a dataset by making it public\nFor that we will work with the small version of the MovieLens dataset containing a set of movies (movies.csv) along with their ratings (ratings.csv) and tags (tags.csv) made by users. An overview of this dataset can be found here.\nNote This tutorial makes use of an AWS deployment of Blue Brain Nexus available at https://sandbox.bluebrainnexus.io/v1. We will be using Nexus CLI, a python client, to interact with the deployment.\nLet’s get started.","title":"Overview"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#set-up","text":"","title":"Set up"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#install-and-setup-the-nexus-cli","text":"Since the CLI is written in python, you may want to create a virtual environment for a clean set up. To do so, Conda can be used. If you don’t have it installed follow the instructions here.\nconda create -n nexus-cli python=3.5\nconda activate nexus-cli\npip install git+https://github.com/BlueBrain/nexus-cli","title":"Install and setup the Nexus CLI"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#create-and-select-a-profile","text":"To ease the usage of the CLI, we will create a profile named ‘tutorial’ storing locally various configurations such as the Nexus deployment url.\nCommand nexus profiles create tutorial https://sandbox.bluebrainnexus.io/v1 && nexus profiles listFull source at GitHub Output Profile created.\n+------------+----------+-------------------------------------+-------+\n| Profile    | Selected | URL                                 | Token |\n+------------+----------+-------------------------------------+-------+\n| tutorial   |   Yes    | https://sandbox.bluebrainnexus.io/v1         |  None |\n+------------+----------+-------------------------------------+-------+Full source at GitHub\nLet select the tutorial profile we just created.\nCommand nexus profiles select tutorialFull source at GitHub Output Selected profile: tutorial\n+------------+----------+-------------------------------------+-------+\n| Profile    | Selected | URL                                 | Token |\n+------------+----------+-------------------------------------+-------+\n| tutorial   |   Yes    | https://sandbox.bluebrainnexus.io/v1         |  None |\n+------------+----------+-------------------------------------+-------+Full source at GitHub","title":"Create and select a ‘tutorial’ profile"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#login","text":"A bearer token is needed to authenticate to Nexus. For the purpose of this tutorial, you’ll login using your github account.\nNote If you don’t have a github account, please follow the instructions on this page to create one.\nThe following command will open a browser window from where you can login using your github account.\nCommand nexus auth loginFull source at GitHub Output A browser window will now open, please login, copy your token and use the auth set-token command to store it in the CLI\nPress ENTER to continue...Full source at GitHub\nFrom the opened web page, click on the login button on the right corner and follow the instructions.\nAt the end you’ll see a token button on the right corner. Click on it to copy the token.\nThe token can now be added to the tutorial profile. In the output of the following command you should see that the token column has now an expiry date.\nCommand nexus auth set-token $TOKEN && nexus profiles listFull source at GitHub Output +--------------+----------+-------------------------------------+-----------------------------+\n| Profile      | Selected | URL                                 |            Token            |\n+--------------+----------+-------------------------------------+-----------------------------+\n| tutorial     |   Yes    | https://sandbox.bluebrainnexus.io/v1         | Expiry: YYYY-MM-DD HH:mm:s |\n+--------------+----------+-------------------------------------+-----------------------------+Full source at GitHub","title":"Login"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#create-a-project","text":"Projects in BlueBrain Nexus are spaces where data can be:\nmanaged: created, updated, deprecated, validated, secured; accessed: directly by ids or through various search interfaces; shared: through fine grain Access Control List.\nA project is always created within an organization just like a git repository is created in a github organization. Organizations can be understood as accounts hosting multiple projects.","title":"Create a project"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#select-an-organization","text":"Note A public organization named tutorialnexus is already created for the purpose of this tutorial. All projects will be created under this organization.\nThe following command should list the organizations you have access to. The tutorialnexus organization should be listed and tagged as non-deprecated in the output.\nCommand nexus orgs listFull source at GitHub Output +----------------+-------------------+-----------------------------------------------------+------------+\n| Name           | Description       | Id                                                  | Deprecated |\n+----------------+-------------------+-----------------------------------------------------+------------+\n| tutorialnexus  | Nexus sandbox     | https://sandbox.bluebrainnexus.io/v1/tutorialnexus     | False      |Full source at GitHub\nLet select the tutorialnexus organization.\nCommand nexus orgs select tutorialnexusFull source at GitHub Output tutorialnexus organization selected.Full source at GitHub","title":"Select an organization"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#create-a-project","text":"A project is created with a label and within an organization. The label should be made of alphanumerical characters and its length should be between 3 and 32 (it should match the regex: [a-zA-Z0-9-_]{3,32}).\nPick a label (hereafter referred to as $PROJECTLABEL) and create a project using the following command. It is recommended to use your username to avoid collision of projects labels within an organization.\nCommand nexus projects create $PROJECTLABEL && nexus projects listFull source at GitHub Output Project created (id: https://sandbox.bluebrainnexus.io/v1/projects/tutorialnexus/$PROJECTLABEL)\n+---------------+-------------+------------------------------------------------------------------------+------------+\n| Label         | Description | Id                                                                     | Deprecated |\n+---------------+-------------+------------------------------------------------------------------------+------------+\n| $PROJECTLABEL |             | https://sandbox.bluebrainnexus.io/v1/projects/tutorialnexus/$PROJECTLABEL | False      |\n+---------------+-------------+------------------------------------------------------------------------+------------+Full source at GitHub\nBy default, created projects are private meaning that only the project creator (you) has read and write access to it. We’ll see below how to make a project public.\nThe output of the previous command shows the list of projects you have read access to. The project you just created should be the only one listed at this point. Let select it.\nCommand nexus projects select $PROJECTLABEL && nexus projects listFull source at GitHub Output $PROJECTLABEL project selected\n+---------------+-------------+------------------------------------------------------------------------+------------+\n| Label         | Description | Id                                                                     | Deprecated |\n+---------------+-------------+------------------------------------------------------------------------+------------+\n| $PROJECTLABEL |             | https://sandbox.bluebrainnexus.io/v1/projects/tutorialnexus/$PROJECTLABEL | False      |\n+---------------+-------------+------------------------------------------------------------------------+------------+Full source at GitHub\nWe are all set to bring some data within the project we just created.","title":"Create a project"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#ingest-data","text":"","title":"Ingest data"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#download-the-dataset","text":"The MovieLens dataset can be downloaded either directly on a browser or using a curl command as shown below.\nThe following command download, unzip the dataset in the folder ~/ml-latest-small and list the files. The downloaded MovieLens dataset is made of four csv files as shown in the output tab.\nCommand cd ~ && curl -s -O http://files.grouplens.org/datasets/movielens/ml-latest-small.zip && unzip -qq ml-latest-small.zip && cd ml-latest-small && lsFull source at GitHub Output README.txt\tlinks.csv\tmovies.csv\tratings.csv\ttags.csvFull source at GitHub","title":"Download the dataset"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#load-the-dataset","text":"Let first load the movies and merge them with the links.\nnexus resources create -f ~/ml-latest-small/movies.csv -t Movie --format csv --idcolumn movieId --mergewith ~/ml-latest-small/links.csv --mergeon movieId --max-connections 4\nThen we can load the tags.\nnexus resources create -f ~/ml-latest-small/tags.csv -t Tag --format csv --max-connections 50\nAnd finally load the ratings. Loading 100837 resources might take some time and also it is not needed to load them all to follow this tutorial. The maximum number of concurrent connections (–max-connections) can be increased for better loading performance.\nnexus resources create -f ~/ml-latest-small/ratings.csv -t Rating --format csv --max-connections 50","title":"Load the dataset"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#access-data","text":"","title":"Access data"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#view-data-in-nexus-web","text":"Nexus is deployed with a web application allowing to browse organizations, projects, data and schemas you have access to. You can go to the address https://sandbox.bluebrainnexus.io/web and browse the data you just loaded.","title":"View data in Nexus Web"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#list-data","text":"The simplest way to accessed data within Nexus is by listing them. The following command lists 5 resources:\nCommand nexus resources list --size 5Full source at GitHub Output +------------------------------------------------------------------------------------+----------------------------------------------------------------------------+----------+------------+\n| Id                                                                                 | Type                                                                       | Revision | Deprecated |\n+------------------------------------------------------------------------------------+----------------------------------------------------------------------------+----------+------------+\n| https://sandbox.bluebrainnexus.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Movie_1  | https://sandbox.bluebrainnexus.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Movie | 1        | False      |\n| https://sandbox.bluebrainnexus.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Movie_9  | https://sandbox.bluebrainnexus.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Movie | 1        | False      |\n| https://sandbox.bluebrainnexus.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Movie_12 | https://sandbox.bluebrainnexus.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Movie | 1        | False      |\n| https://sandbox.bluebrainnexus.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Movie_7  | https://sandbox.bluebrainnexus.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Movie | 1        | False      |\n| https://sandbox.bluebrainnexus.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Movie_8  | https://sandbox.bluebrainnexus.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Movie | 1        | False      |\n+------------------------------------------------------------------------------------+----------------------------------------------------------------------------+----------+------------+Full source at GitHub\nThe full payload of the resources are not retrieved when listing them: only identifier, type as well as Nexus added metadata are. But the result list can be scrolled and each resource fetched by identifier.\nCommand nexus resources fetch https://sandbox.bluebrainnexus.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Movie_1Full source at GitHub Output {\n  \"@context\": [\n    {\n      \"@base\": \"https://sandbox.bluebrainnexus.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/\",\n      \"@vocab\": \"https://sandbox.bluebrainnexus.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/\"\n    },\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"Movie_1\",\n  \"@type\": \"Movie\",\n  \"genres\": \"Adventure|Animation|Children|Comedy|Fantasy\",\n  \"imdbId\": 114709,\n  \"movieId\": 1,\n  \"title\": \"Toy Story (1995)\",\n  \"tmdbId\": 862.0,\n  \"_self\": \"../../resource/https%3A%2F%2Fbbp.epfl.ch%2Fnexus%2Fv1%2Fresources%2Ftutorialnexus%2F$PROJECTLABEL%2F_%2FMovie_1\",\n  \"_constrainedBy\": \"nxs:resource.json\",\n  \"_project\": \"../../../../../projects/tutorialnexus/$PROJECTLABEL\",\n  \"_createdAt\": \"2019-01-17T10:32:02.221Z\",\n  \"_createdBy\": \"....\",\n  \"_updatedAt\": \"2019-01-17T10:32:02.221Z\",\n  \"_updatedBy\": \"....\",\n  \"_rev\": 1,\n  \"_deprecated\": false\n}Full source at GitHub\nWhenever a resource is created, Nexus injects some useful metadata. The table below details some of them:\nMetadata Description Value Type @id Generated resource identifier. The user can provide its own identifier. URI @type The type of the resource if provided by the user. URI _self The resource address within Nexus. It contains the resource management details such as the organization, the project and the schema. URI _createdAt The resource creation date. DateTime _createdBy The resource creator. DateTime\nNote that Nexus uses JSON-LD as data exchange format.\nFilters are available to list specific resources. For example a list of resources of type Rating can be retrieved by running the following command:\nCommand nexus resources list --type Rating --size 5Full source at GitHub Output +------------------------------------------------------------------------------------+----------------------------------------------------------------------------+----------+------------+\n| Id                                                                                 | Type                                                                       | Revision | Deprecated |\n+------------------------------------------------------------------------------------+----------------------------------------------------------------------------+----------+------------+\n| https://sandbox.bluebrainnexus.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Rating_1  | https://sandbox.bluebrainnexus.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Rating | 1        | False      |\n| https://sandbox.bluebrainnexus.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Rating_9  | https://sandbox.bluebrainnexus.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Rating | 1        | False      |\n| https://sandbox.bluebrainnexus.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Rating_12 | https://sandbox.bluebrainnexus.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Rating | 1        | False      |\n| https://sandbox.bluebrainnexus.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Rating_7  | https://sandbox.bluebrainnexus.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Rating | 1        | False      |\n| https://sandbox.bluebrainnexus.io/v1/resources/tutorialnexus/$PROJECTLABEL/_/Rating_8  | https://sandbox.bluebrainnexus.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Rating | 1        | False      |\n+------------------------------------------------------------------------------------+----------------------------------------------------------------------------+----------+------------+Full source at GitHub\nListing with various filters using the CLI As an exercise try to filter by tag to only retrieve resources of type Tag.","title":"List data"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#query-data","text":"Listing is usually not enough to select specific subset of data. Data ingested within each project can be searched through two complementary search interfaces called views.\nView Description ElasticSearchView Exposes data in ElasticSearch a document oriented search engine and provide access to it using the ElasticSearch query language. SparqlView Exposes data as a graph and allows to navigate and explore the data using the W3C Sparql query language.","title":"Query data"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#query-data-using-the-elasticsearchview","text":"The ElasticSearchView URL is available at the address [https://sandbox.bluebrainnexus.io/v1/views/tutorialnexus/$PROJECTLABEL/documents/_search].\nSelect queries # Select 5 ratings sorted by creation date in descending order\nnexus views query-es --data \\\n'{\n     \"size\":5,\n     \"sort\" : [\n       {\n        \"_createdAt\" : {\"order\" : \"desc\"}\n       }\n     ],\n     \"query\": {\n     \t\"terms\" : {\"@type\":[\"https://sandbox.bluebrainnexus.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/Rating\"]}\n     }\n }'\nFull source at GitHub Graph navigation queries # Not possible by default.\n# Relationships handling needs to be made explicit to ElasticSearch through a mapping.\n\nFull source at GitHub","title":"Query data using the ElasticSearchView"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#query-data-using-the-sparqlview","text":"The SparqlView is available at the address [https://sandbox.bluebrainnexus.io/v1/views/tutorialnexus/$PROJECTLABEL/graph/sparql]. The following diagram shows how the MovieLens data is structured in the default Nexus SparqlView. Note that the ratings, tags and movies are joined by the movieId property.\nSelect queries # Select 5 ratings sorted by creation date in descending order\nnexus views query-sparql --data \\\n'\nPREFIX vocab: <https://sandbox.bluebrainnexus.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/>\nPREFIX nxv: <https://bluebrain.github.io/nexus/vocabulary/>\n\nSelect ?userId ?moviedId ?rating ?createdAt\n WHERE  {\n\n    ?ratingNode a vocab:Rating.\n    ?ratingNode nxv:createdAt ?createdAt.\n    ?ratingNode vocab:userId  ?userId.\n    ?ratingNode vocab:movieId ?moviedId.\n    ?ratingNode vocab:rating  ?rating.\n}\nORDER BY DESC (?creationDate)\nLIMIT 5'Full source at GitHub Graph navigation queries # Average rating score for movies tagged as funny\nnexus views query-sparql --data \\\n'\nPREFIX vocab: <https://sandbox.bluebrainnexus.io/v1/vocabs/tutorialnexus/$PROJECTLABEL/>\nPREFIX nxv: <https://bluebrain.github.io/nexus/vocabulary/>\n\nSelect (AVG(?ratingvalue) AS ?score)\n WHERE  {\n    # Select movies\n    ?movie a vocab:Movie.\n\n    # Select their movieId values\n    ?movie vocab:movieId ?movieId.\n\n    # Keep movies with 'funny' tags\n    ?tag a vocab:Tag.\n    ?tag vocab:movieId ?movieId.\n    ?tag vocab:tag ?tagvalue.\n    FILTER(?tagvalue = \"funny\").\n    \n    # Keep movies with ratings\n    ?rating a vocab:Rating.\n    ?rating vocab:movieId ?ratingmovieId.\n    FILTER(xsd:integer(?ratingmovieId) = xsd:integer(?movieId))\n    ?rating vocab:rating ?ratingvalue.\n\n}'Full source at GitHub","title":"Query data using the SparqlView"},{"location":"/docs/tutorial/getting-started/quick-start/index.html#share-data","text":"Making a dataset public means granting read permissions to “anonymous” user.\n$ nexus acls make-public\nTo check that the dataset is now public:\nAsk the person next to you to list resources in your project. Or create and select another profile named public-tutorial (following the instructions in the Set up. You should see the that the public-tutorial is selected and its corresponding token column is None.\nOutput Selected profile: tutorial\n+-------------------+----------+-------------------------------------+------------------+\n| Profile           | Selected | URL                                 |       Token      |\n+-------------------+----------+-------------------------------------+------------------+\n| tutorial          |          | https://sandbox.bluebrainnexus.io/v1         |  Expiry: 2019... |\n| public-tutorial   |   Yes    | https://sandbox.bluebrainnexus.io/v1         |       None       |\n+-------------------+----------+-------------------------------------+------------------+Full source at GitHub\nResources in your project should be listed with the command even though you are not authenticated.\nCommand nexus resources list --size 5 -o tutorialnexus -p $PROJECTLABELFull source at GitHub","title":"Share data"},{"location":"/docs/tutorial/getting-started/dataset/index.html","text":"","title":"The MovieLens Dataset"},{"location":"/docs/tutorial/getting-started/dataset/index.html#the-movielens-dataset","text":"","title":"The MovieLens Dataset"},{"location":"/docs/tutorial/getting-started/dataset/index.html#overview","text":"The picture below describes the structure of the 4 files contained in the MovieLens dataset:\nOnce you have downloaded and unpacked the archive, you will find 4 CSV files, below is the top 10 lines of each to give you a feel for the data it contains. As you can see the movieId column of each of these files will be instrumental to linking the data together.\n$ head *.csv\n\n==> links.csv <==\nmovieId,imdbId,tmdbId\n1,0114709,862\n2,0113497,8844\n3,0113228,15602\n4,0114885,31357\n5,0113041,11862\n6,0113277,949\n7,0114319,11860\n8,0112302,45325\n9,0114576,9091\n\n==> movies.csv <==\nmovieId,title,genres\n1,Toy Story (1995),Adventure|Animation|Children|Comedy|Fantasy\n2,Jumanji (1995),Adventure|Children|Fantasy\n3,Grumpier Old Men (1995),Comedy|Romance\n4,Waiting to Exhale (1995),Comedy|Drama|Romance\n5,Father of the Bride Part II (1995),Comedy\n6,Heat (1995),Action|Crime|Thriller\n7,Sabrina (1995),Comedy|Romance\n8,Tom and Huck (1995),Adventure|Children\n9,Sudden Death (1995),Action\n\n==> ratings.csv <==\nuserId,movieId,rating,timestamp\n1,1,4.0,964982703\n1,3,4.0,964981247\n1,6,4.0,964982224\n1,47,5.0,964983815\n1,50,5.0,964982931\n1,70,3.0,964982400\n1,101,5.0,964980868\n1,110,4.0,964982176\n1,151,5.0,964984041\n\n==> tags.csv <==\nuserId,movieId,tag,timestamp\n2,60756,funny,1445714994\n2,60756,Highly quotable,1445714996\n2,60756,will ferrell,1445714992\n2,89774,Boxing story,1445715207\n2,89774,MMA,1445715200\n2,89774,Tom Hardy,1445715205\n2,106782,drugs,1445715054\n2,106782,Leonardo DiCaprio,1445715051\n2,106782,Martin Scorsese,1445715056","title":"Overview"},{"location":"/docs/tutorial/knowledge-graph/index.html","text":"","title":"Understanding knowledge graphs"},{"location":"/docs/tutorial/knowledge-graph/index.html#understanding-knowledge-graphs","text":"","title":"Understanding knowledge graphs"},{"location":"/docs/tutorial/knowledge-graph/index.html#overview","text":"How does Google display information card like in the following search ? Well they use the Google Knowledge Graph. Knowledge graphs are now ubiquitous and serves as data integration hub to integrate and connect data of different types, formats and sources.","title":"Overview"},{"location":"/docs/tutorial/knowledge-graph/index.html#what-youll-build","text":"Queries to explore and navigate a knowledge graph using Sparql","title":"What you’ll build"},{"location":"/docs/tutorial/knowledge-graph/index.html#what-youll-learn","text":"An understanding of what is a knowledge graph Understanding RDF and JSON-LD data model","title":"What you’ll learn"},{"location":"/docs/tutorial/knowledge-graph/index.html#what-youll-need","text":"A Python 3.5 or higher with support of Jupyter notebook","title":"What you’ll need"},{"location":"/docs/tutorial/knowledge-graph/thinking-in-graph.html","text":"","title":"Thinking in graph"},{"location":"/docs/tutorial/knowledge-graph/thinking-in-graph.html#thinking-in-graph","text":"","title":"Thinking in graph"},{"location":"/docs/tutorial/knowledge-graph/thinking-in-graph.html#what-is-a-knowledge-graph-","text":"In this section, we will explain what a Knowledge Graph and some of the advantages of using them.","title":"What is a Knowledge Graph ?"},{"location":"/docs/tutorial/knowledge-graph/thinking-in-graph.html#it-is-a-graph-structure","text":"A knowledge graph uses a graph data structure to represent information, it uses the concept of nodes and edges to represent respectively entities and their relations. An entity could be a person, a company, a product. Each entity can have properties that describes it, for example, a person could have a first name, last name, address, birth date and age. These properties are also refered to as the entity’s metadata.\nRelations between entities are first class citizen, consequently, it becomes easy to traverse and discover related entities. Examples of relations could be a person is friend with an other person (John –friend–> Ann) or a person works for a company (Eric –works for–> EPFL).\nFurthermore, a graph data structure makes it easy to merge new data in existing graph.","title":"It is a graph structure"},{"location":"/docs/tutorial/knowledge-graph/thinking-in-graph.html#it-is-semantic","text":"The metadata definition is encoded, alongside the metadata, in an ontology. This is a formal description that both humans and computers can understand and process. The metadata is said to be self descriptive.\nIn the example below, you can see that the entity Toy Story is an Animated movie (also known as the type of the entity) and it has a property Release date for this the value is March 29th, 1995.","title":"It is semantic"},{"location":"/docs/tutorial/knowledge-graph/thinking-in-graph.html#it-is-smart","text":"Since all this information is represented in an ontology, it enables us to run a tool called an inference engine on the data and derive new information from explicitly asserted data. This inference can make information easier to discover.\nIn the example below, we have Toy Story, it has characters (using the relation called Character) and we have asserted the cast of characters. Having define this, we can now define a rule that instructs the inference engine to create new relations Voice Cast whenever we find the Cast of a Character. This enables us to query the graph and directly get Toy Story’s voices cast without having to navigate through its cast first.","title":"It is smart"},{"location":"/docs/tutorial/knowledge-graph/thinking-in-graph.html#it-is-alive","text":"A graph is a flexible data structure, and an ontology can evolve as new data comes in. As a result, Data can be continually be added to help serve new usecases.\nThe illustration below shows how the initial graph representing Toy Story can be augmented to capture many other related domains such as:\nToy Story’s similar movies (e.g. Cars) Cities and associations related to motion picture production (e.g. Motion Picture Association of America) Places and people connected to animation movies (e.g. Steve Jobs)","title":"It is alive"},{"location":"/docs/tutorial/knowledge-graph/understanding-jsonld.html","text":"","title":"Understanding JSON-LD"},{"location":"/docs/tutorial/knowledge-graph/understanding-jsonld.html#understanding-json-ld","text":"","title":"Understanding JSON-LD"},{"location":"/docs/tutorial/knowledge-graph/understanding-jsonld.html#rdf","text":"RDF (Resource Description Framework) is a (extremely simple and truly schemaless) data model where every piece of knowledge is broken down in (subject, predicate and object) called triple.","title":"RDF"},{"location":"/docs/tutorial/knowledge-graph/understanding-jsonld.html#json-ld","text":"JSON-LD stands for JSON for Linking Data.","title":"JSON-LD"},{"location":"/docs/tutorial/knowledge-graph/understanding-jsonld.html#more-than-a-json-format","text":"A simple json example:\n[\n  \t {\n  \t\t\"name\":\"python\",\n  \t\t\"loadedFrom\":\"java\"\n  \t },\n  \t{\n  \t\t\"name\":\"java\",\n  \t\t\"testedFrom\":\"java\"\n  \t }\n\n  ]\nWhat this data is about ? Programming languages or particular snake type and coffee you would find in the Java Indonesia ? There is clearly a lack of context resulting in an ambiguity. JSON-LD allows to solve the ambiguity problem by enabling a semantic-preserving data exchange. It does that by adding to a json document a @context object where every key is associated with an identifier.\nFor example with the payload below machine and human agents can look up the context to find out which JAVA are this data talking about.\n[\n  \t {\n  \t    \"@context\":\"https://json-ld.org/contexts/programminglanguage.jsonld\",\n  \t\t\"name\":\"python\",\n  \t\t\"loadedFrom\":\"java\"\n  \t },\n  \t{\n  \t    \"@context\":\"https://json-ld.org/contexts/programminglanguage.jsonld\",\n  \t\t\"name\":\"java\",\n  \t\t\"testedFrom\":\"java\"\n  \t }\n\n  ]\nLet go the JSON-LD playground to have a closer look at its data model.","title":"More than a JSON format"},{"location":"/docs/tutorial/knowledge-graph/querying-knowledge-graph.html","text":"","title":"Querying knowledge graph"},{"location":"/docs/tutorial/knowledge-graph/querying-knowledge-graph.html#querying-knowledge-graph","text":"","title":"Querying knowledge graph"},{"location":"/docs/tutorial/knowledge-graph/querying-knowledge-graph.html#overview","text":"This tutorial introduces the basics of SPARQL, a query language for querying RDF based knowledge graph. It also demonstrates how to query a Nexus SparqlView.","title":"Overview"},{"location":"/docs/tutorial/knowledge-graph/querying-knowledge-graph.html#what-youll-build","text":"Queries to explore and navigate a knowledge graph using SPARQL and Nexus","title":"What you’ll build"},{"location":"/docs/tutorial/knowledge-graph/querying-knowledge-graph.html#what-youll-learn","text":"Basics of the SPARQL query language How to connect to and query a SparqlView in Nexus","title":"What you’ll learn"},{"location":"/docs/tutorial/knowledge-graph/querying-knowledge-graph.html#what-youll-need","text":"A Python 3.5 or higher with support of Jupyter notebook","title":"What you’ll need"},{"location":"/docs/tutorial/knowledge-graph/querying-knowledge-graph.html#get-the-tutorial-code","text":"This tutorial code is available:\nat Github on Google Colab","title":"Get the tutorial code"},{"location":"/docs/tutorial/linking-data/index.html","text":"","title":"Linking data on the web"},{"location":"/docs/tutorial/linking-data/index.html#linking-data-on-the-web","text":"","title":"Linking data on the web"},{"location":"/docs/tutorial/linking-data/index.html#overview","text":"In this tutorial, we demonstrate how to consume structured data published on the web according to the Linked data principles to extend and enrich a knowledge graph.","title":"Overview"},{"location":"/docs/tutorial/linking-data/index.html#what-youll-build","text":"A simple pipeline to query entities managed within Blue Brain Nexus, connect them with entities available on the web as structured data and extend and enrich their metadata.","title":"What you’ll build"},{"location":"/docs/tutorial/linking-data/index.html#what-youll-learn","text":"An understanding of linked data principles How to query data stored in a Nexus SparqlView. How to query structured data on the web. How to extend the metadata of entities managed within Blue Brain Nexus with external structured data on the web. We target Wikidata as an example. How to update entities within Blue Brain Nexus using the SDK and enrich their metadata","title":"What you’ll learn"},{"location":"/docs/tutorial/linking-data/index.html#what-youll-need","text":"A Python 3.5 or higher environment with support of Jupyter notebook","title":"What you’ll need"},{"location":"/docs/tutorial/linking-data/index.html#get-the-tutorial-code","text":"This tutorial code is available:\nat Github on Google Colab","title":"Get the tutorial code"},{"location":"/docs/tutorial/build-recommender/index.html","text":"","title":"Building a Data Pipeline for a Recommender System"},{"location":"/docs/tutorial/build-recommender/index.html#building-a-data-pipeline-for-a-recommender-system","text":"","title":"Building a Data Pipeline for a Recommender System"},{"location":"/docs/tutorial/build-recommender/index.html#overview","text":"Recommendation engines are among the most well known, widely used and highest-value use cases for applying machine learning. Despite this, while there are many resources available for the basics of training a recommendation model, there are relatively few that explain how to use Nexus to build a data pipeline, actually deploy these models to create a production-level machine learning eco-system for a recommender system.","title":"Overview"},{"location":"/docs/tutorial/build-recommender/index.html#what-youll-build","text":"You will use a Jupyter notebook to build a pipeline to train a recommendation system.","title":"What you’ll build"},{"location":"/docs/tutorial/build-recommender/index.html#what-youll-learn","text":"Set up a Nexus environment. Query the data from Nexus using SPARQL. Prepare the data into a good shape for collaborative filtering. Perform a classical collaborative filtering algorithm - matrix factorization Push the training output to Nexus Recommend movies by querying the output from Nexus","title":"What you’ll learn"},{"location":"/docs/tutorial/build-recommender/index.html#what-youll-need","text":"A Python environment with support of Jupyter notebook","title":"What you’ll need"},{"location":"/docs/tutorial/build-recommender/index.html#get-the-tutorial-code","text":"This tutorial code is available:\nat Github on Google Colab","title":"Get the tutorial code"},{"location":"/docs/api/index.html","text":"","title":"API reference"},{"location":"/docs/api/index.html#api-reference","text":"Here you’ll find the full usage reference for deprecated, current and future versions of the REST API.\nAt this time, the stable version is the 1.0.","title":"API reference"},{"location":"/docs/api/1.0/index.html","text":"","title":"1.0 (stable)"},{"location":"/docs/api/1.0/index.html#1-0-stable-","text":"All Nexus services expose a RESTful interface over HTTP(S) for synchronous communication. The generally adopted transport format is JSON based, specifically JSON-LD.\nThe services operates on 3 primary types of resources: Organizations, Projects and Resources. Each of them is constrained by a set of SHACL constraints, grouped in what is called a Schema.\nAn organization is used to organize and categorize its sub-resources. A project is rooted on a given organization. It is used to organize and categorize its sub-resources while providing a way to interact with them conveniently. A resource is rooted on a given project. In this level of the hierarchy, multiple types of resources can be found. Each of them has a different purpose: A schema is a resource that defines a set of constraints using SHACL. A resolvers: is a resource that defines the way ids are retrieved inside a project. A views: is a resource that describes the way indexing is applied to certain resources inside a project. A file: is a binary resource.","title":"1.0 (stable)"},{"location":"/docs/api/1.0/index.html#resource-lifecycle","text":"Our services are build using the event sourcing approach. This strategy captures all changes to an application state as a sequence of events.\nAll resources in the system generally follow the very same lifecycle, as depicted in the diagram below. Every interaction with an API resource (creation, updates, state changes) is recorded into the system as revisions.\nData is never removed from the system, but rather is marked as deprecated. Depending on the type of resource, the deprecation flag may have various semantics:\nOrganizations: the resource itself and sub-resources cannot be updated. Views and resolvers contained within this organization will not be considered during indexing and resolution processes. Projects: the resource itself and sub-resources cannot be updated. Views and resolvers contained within this project will not be considered during indexing and resolution processes. Schemas: the resource itself cannot be updated and new data conformant to it cannot be created Resolvers: the resource itself will not be considered during the resolution process Views: the resource itself will not be considered during the indexing process Files: attachments cannot be added/deleted Data: the resource itself cannot be updated\nFuture policies may use this flag to determine if or when the deprecated data may be archived.","title":"Resource Lifecycle"},{"location":"/docs/api/1.0/anatomy.html","text":"","title":"Services anatomy"},{"location":"/docs/api/1.0/anatomy.html#services-anatomy","text":"Nexus services are assembled by a series of components\nWrite Model: This component is executed when a customer performs a write API operation (create, update, tag, …). The business logic is triggered (validation, state computation, Json and Graph manipulations, etc). As a result, an Event gets stored into the Primary Store or a rejection is delivered to the client. Event Stream: This is an asynchronous process that gets triggered as soon as there are elements to be read from the Primary Store. The stream runs several operations that take the stored Events and transform them. The result is then saved into a target index. Write Model: This component gets triggered when a customer performs a read API operation (get, list). A call to the index is performed. The resulting data is transformed if required and delivered to the client.\nThe service structure and workflow has been designed following the CQRS and [Event sourcing](Event sourcing) strategies. The distinction between the write and read model, as well as the use of event streams is a perfect match to CQRS and Event Sourcing.","title":"Services anatomy"},{"location":"/docs/api/1.0/operating-on-resources.html","text":"","title":"Operating on resources"},{"location":"/docs/api/1.0/operating-on-resources.html#operating-on-resources","text":"Access to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nAll resources in the system share a base set of operations. Assuming a nexus deployment at http(s)://nexus.example.com resource address of /v1/{address} the following operations should apply to most (all) resources:","title":"Operating on resources"},{"location":"/docs/api/1.0/operating-on-resources.html#fetch-the-current-revision-of-the-resource","text":"GET /v1/{address}\nStatus Codes\n200 OK: the resource is found and returned successfully 404 Not Found: the resource was not found","title":"Fetch the current revision of the resource"},{"location":"/docs/api/1.0/operating-on-resources.html#fetch-a-specific-revision-of-the-resource","text":"GET /v1/{address}?rev={rev}\n… where {rev} is the revision number, starting at 1.\nStatus Codes\n200 OK: the resource revision is found and returned successfully 404 Not Found: the resource revision was not found","title":"Fetch a specific revision of the resource"},{"location":"/docs/api/1.0/operating-on-resources.html#fetch-a-specific-tag-of-the-resource","text":"GET /v1/{address}?tag={tag}\n… where {tag} is the tag name linked to a certain revision number.\nStatus Codes\n200 OK: the resource tag is found and returned successfully 404 Not Found: the resource tag was not found","title":"Fetch a specific tag of the resource"},{"location":"/docs/api/1.0/operating-on-resources.html#create-a-new-resource","text":"Depending on whether the resource is a singleton resource or is part of a wider collection of resources of the same type the verbs POST and PUT are used.\nFor a singleton resource:\nPUT /v1/{address}\n{...}\nFor a collection resources:\nPOST /v1/{collection_address}\n{...}\n… where {collection_address} is the address of the collection the resource belongs to.\nStatus Codes\n201 Created: the resource was created successfully 400 Bad Request: the resource is not valid or cannot be created at this time 409 Conflict: the resource already exists","title":"Create a new resource"},{"location":"/docs/api/1.0/operating-on-resources.html#update-a-resource","text":"In order to ensure a client does not perform any changes to a resource without having had seen the previous revision of the resource, the last revision needs to be passed as a query parameter.\nPUT /v1/{address}?rev={previous_rev}\n{...}\nStatus Codes\n200 OK: the resource was created successfully 400 Bad Request: the resource is not valid or cannot be updated at this time 409 Conflict: the provided revision is not the current resource revision number","title":"Update a resource"},{"location":"/docs/api/1.0/operating-on-resources.html#tag-a-resource","text":"Links a resource revision to a specific name.\nTagging a resource is considered to be an update as well.\nPUT /v1/{address}/tags?rev={previous_rev}\n{\n   \"tag\": \"{name}\",\n   \"rev\": {rev}\n}\n… where:\n{name}: String - the name given to the resource at specific revision. {rev}: Number - the revision to link the provided {name}.","title":"Tag a resource"},{"location":"/docs/api/1.0/operating-on-resources.html#deprecate-a-resource","text":"Locks the resource, so no further operations can be performed. It also deletes the resource from listing/querying results.\nDeprecating a resource is considered to be an update as well.\nDELETE /v1/{address}?rev={previous_rev}\nStatus Codes\n200 OK: the resource was created successfully 400 Bad Request: the resource is not valid or cannot be deprecated at this time 409 Conflict: the provided revision is not the current resource revision number\nStatus Codes\n200 OK: the resource was created successfully 400 Bad Request: the resource is not valid or cannot be created at this time 409 Conflict: the provided revision is not the current resource revision number","title":"Deprecate a resource"},{"location":"/docs/api/1.0/operating-on-resources.html#listing","text":"GET /v1/{collection_address}?from={from}&size={size}&deprecated={deprecated}\n… where all of the query parameters are individually optional.\n{collection_address} Path - the selected collection to list, filter or search; for example: /v1/projects/, /v1/schemas/{org_label}/{project}, {from}: Number - the parameter that describes the offset for the current query; defaults to 0 {size}: Number - the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting resources based on their deprecation status","title":"Listing"},{"location":"/docs/api/1.0/operating-on-resources.html#list-response-format","text":"The response to any search requests follows the described format:\n\"_total\": {hits},\n  \"_maxScore\": {maxScore},\n  \"_next\": \"{next_page_address}\",\n  \"_previous\": \"{previous_page_address}\",\n  \"_results\": [\n    {\n      \"@id\": \"{resource_id}\",\n      ...\n    },\n    {\n      \"@id\": \"{resource_id}\",\n      ...\n    }\n  ]\n… where:\n{hits}: Number - the total number of results found for the requested search. {maxScore} Float - the maximum score found across all hits. {resource_id} Iri - the qualified id for one of the results.\nThe relationships _next and _previous at the top level offer discovery of more resources, in terms of navigation/pagination.\nThe fields {maxScore} and {score_id} are optional fields and will only be present whenever a q query parameter is provided on the request.","title":"List response format"},{"location":"/docs/api/1.0/admin/index.html","text":"","title":"Admin API"},{"location":"/docs/api/1.0/admin/index.html#admin-api","text":"The Admin API provides operations on two types of resources, organizations and projects. Those resources define the tree-like structure or grouping of the platform","title":"Admin API"},{"location":"/docs/api/1.0/admin/index.html#organizations","text":"The top level resources in the platform. They are used to group and categorize projects.\nOperations on organizations","title":"Organizations"},{"location":"/docs/api/1.0/admin/index.html#projects","text":"The 2nd level resources in the platform. They are used to group and categorize any sub-resources supported by the Knowledge Graph.\nOperations on projects","title":"Projects"},{"location":"/docs/api/1.0/admin/admin-orgs-api.html","text":"","title":"Organizations"},{"location":"/docs/api/1.0/admin/admin-orgs-api.html#organizations","text":"Organizations are rooted in the /v1/orgs path and are used to group and categorize sub-resources.\nAccess to resources in the system depends on the access control list set for them. A caller may need to prove its identity by means of an access token passed in the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about retrieving access tokens.\nAuthorization notes When creating organizations, the caller must have organizations/create permissions on the current path of the organization or /. When updating organizations, the caller must have organizations/write permissions on the current path of the organization or /. When reading organizations, the caller must have organizations/read permissions on the current path of the organization or /.","title":"Organizations"},{"location":"/docs/api/1.0/admin/admin-orgs-api.html#create-an-organization","text":"PUT /v1/orgs/{label}\n  {...}\n…where {label} is the user friendly name assigned to this organization. The semantics of the label should be consistent with the type of data provided by its sub-resources, since it’ll be a part of the sub-resources’ URI.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/orgs/myorg\" -d \\\n'{\n  \"description\": \"My organization\"\n}'Full source at GitHub Payload {\n  \"description\": \"My organization\"\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/orgs/myorg\",\n  \"@type\": \"Organization\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create an organization"},{"location":"/docs/api/1.0/admin/admin-orgs-api.html#update-an-organization","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to an organization without having had seen the previous revision of the organization, the last revision needs to be passed as a query parameter.\nPUT /v1/orgs/{label}?rev={previous_rev}\n  {...}\n… where\n{previous_rev}: Number - is the last known revision for the organization. {label}: String - is the user friendly name that identifies this organization.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/orgs/myorg?rev=1\" -d \\\n'{\n  \"description\": \"A new description\"\n}'Full source at GitHub Payload {\n  \"description\": \"My organization\"\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/orgs/myorg\",\n  \"@type\": \"Organization\",\n  \"description\": \"My organization\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Update an organization"},{"location":"/docs/api/1.0/admin/admin-orgs-api.html#deprecate-an-organization","text":"Locks the organization, so that no further operations can be performed on the resource or on the child resources.\nDeprecating an organization is considered to be an update as well.\nDELETE /v1/orgs/{label}?rev={previous_rev}\n… where\n{label}: String - is the user friendly name that identifies this organization. {previous_rev}: Number - is the last known revision for the organization.\nExample\nRequest curl -XDELETE \"https://nexus.example.com/v1/orgs/myorg/tags?rev=3\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/orgs/myorg\",\n  \"@type\": \"Organization\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Deprecate an organization"},{"location":"/docs/api/1.0/admin/admin-orgs-api.html#fetch-an-organization-current-version-","text":"GET /v1/orgs/{label}\n…where {label} is the user friendly String name that identifies this organization.\nExample\nRequest curl \"https://nexus.example.com/v1/orgs/myorg\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/orgs/myorg\",\n  \"@type\": \"Organization\",\n  \"description\": \"My Organization\",\n  \"_label\": \"myorg\",\n  \"_uuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch an organization (current version)"},{"location":"/docs/api/1.0/admin/admin-orgs-api.html#fetch-an-organization-specific-version-","text":"GET /v1/orgs/{label}?rev={rev}\n… where\n{rev}: Number - is the revision of the organization to be retrieved. {label}: String - is the user friendly name that identifies this organization.\nExample\nRequest curl \"https://nexus.example.com/v1/orgs/myorg?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/orgs/myorg\",\n  \"@type\": \"Organization\",\n  \"description\": \"My Organization\",\n  \"_label\": \"myorg\",\n  \"_uuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch an organization (specific version)"},{"location":"/docs/api/1.0/admin/admin-orgs-api.html#list-organizations","text":"GET /v1/orgs?from={from}&size={size}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20\nExample\nRequest curl \"https://nexus.example.com/v1/orgs\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 2,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/orgs/myorg\",\n      \"@type\": \"Organization\",\n      \"description\": \"My Organization\",\n      \"_label\": \"myorg\",\n      \"_uuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/orgs/myorg2\",\n      \"@type\": \"Organization\",\n      \"description\": \"My Second Organization\",\n      \"_label\": \"myorg2\",\n      \"_uuid\": \"b42e5206-f81e-430b-808d-5dac2599153d\",\n      \"_rev\": 1,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2019-01-14T09:29:39.416Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2019-01-14T09:29:39.416Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    }\n  ]\n}Full source at GitHub","title":"List organizations"},{"location":"/docs/api/1.0/admin/admin-projects-api.html","text":"","title":"Projects"},{"location":"/docs/api/1.0/admin/admin-projects-api.html#projects","text":"Projects belong to an organization and are rooted in the corresponding /v1/projects/{org_label} path. The purposes of projects are:\nGroup and categorize sub-resources. Define settings that apply for operations on all sub-resources. Provide isolation from resources inside other projects. This behavior can be changed by defining resolvers\nAccess to resources in the system depends on the access control list set for them. A caller may need to prove its identity by means of an access token passed in the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about retrieving access tokens.\nAuthorization notes When creating projects, the caller must have projects/create permissions on the current path of the project or the ancestor paths. When updating projects, the caller must have projects/write permissions on the current path of the project or the ancestor paths. When reading projects, the caller must have projects/read permissions on the current path of the project or the ancestor paths.","title":"Projects"},{"location":"/docs/api/1.0/admin/admin-projects-api.html#project-payload","text":"{\n  \"description\": \"{description}\",\n  \"base\": \"{base}\",\n  \"vocab\": \"{vocab}\",\n  \"apiMappings\": [\n   {\n      \"prefix\": \"{prefix}\",\n      \"namespace\": \"{namespace}\"\n    },\n    ...\n  ]\n}\nwhere…\n{description}: String - an optional description for this project. {base}: IRI - is going to be used as a curie in the generation of the @id children resources. E.g.: Let base be http://example.com/. When a resource is created and no @id is present in the payload, the platform will generate an @id which will look like http://example.com/{UUID}. This field is optional and will default to {{base}}/v1/resources/{org_label}/{project_label}/_/. {vocab}: IRI - is going to be used as a curie prefix for all unqualified predicates in children resources. E.g. if the vocab is set to https://schema.org/, when a field a resource is created and a field name is present in the payload, it will be expanded to http://schema.org/name by the system during indexing and fetch operations. This field is optional and will default to {{base}}/v1/vocabs/{org_label}/{project_label}/. {apiMappings}: Json object - provides a convinient way to deal with URIs when performing operations on a sub-resource. This field is optional.","title":"Project payload"},{"location":"/docs/api/1.0/admin/admin-projects-api.html#api-mappings","text":"The apiMappings Json object array maps each prefix to its namespace so that curies on children endpoints can be used.\nHaving the following apiMappings:\n{\n  \"apiMappings\": [\n   {\n      \"prefix\": \"{prefix}\",\n      \"namespace\": \"{namespace}\"\n    },\n    { ... }\n  ]\n}\nwhere…\n{prefix}: String - the left hand side of a curie. It has certain constrains. {namespace}: IRI - the right hand side of a curie. It has certain constrains (irelative-ref).\nLet’s see an example:\njson { \"apiMappings\": [ { \"prefix\": \"person\", \"namespace\": \"http://example.com/some/person\" }, { \"prefix\": \"schemas\", \"namespace\": \"https://bluebrainnexus.io/schemas/\" } ] }\nThe previous payload allows us to create a schema using the following endpoints:\n/v1/schemas/{org_label}/{project_label}/person. The @id of the resulting schema will be http://example.com/some/person /v1/schemas/{org_label}/{project_label}/schema:other. The @id of the resulting schema will be https://bluebrainnexus.io/schemas/other","title":"API Mappings"},{"location":"/docs/api/1.0/admin/admin-projects-api.html#create-a-project","text":"PUT /v1/projects/{org_label}/{label}\n  {...}\n…where {label} is the user friendly name assigned to this project. The semantics of the label should be consistent with the type of data provided by its sub-resources, since it’ll be a part of the sub-resources’ URI.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/orgs/myorg/myproject\" -d \\\n'{\n  \"description\": \"example project creation\",\n  \"base\": \"https://nexus.example.com/v1/projects/myorg/myproject/\",\n  \"vocab\": \"https://schema.org/\",\n  \"apiMappings\": [\n    {\n      \"prefix\": \"person\",\n      \"namespace\": \"http://example.com/some/person\"\n    },\n    {\n      \"prefix\": \"schemas\",\n      \"namespace\": \"https://bluebrain.github.io/nexus/schemas/\"\n    },\n    {\n      \"prefix\": \"ex\",\n      \"namespace\": \"http://example.com/\"\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"description\": \"example project creation\",\n  \"base\": \"https://nexus.example.com/v1/myorg/myproject/\",\n  \"vocab\": \"https://schema.org/\",\n  \"apiMappings\": [\n    {\n      \"prefix\": \"person\",\n      \"namespace\": \"http://example.com/some/person\"\n    },\n    {\n      \"prefix\": \"schemas\",\n      \"namespace\": \"https://bluebrain.github.io/nexus/schemas/\"\n    },\n    {\n      \"prefix\": \"ex\",\n      \"namespace\": \"http://example.com/\"\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n  \"@type\": \"Project\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create a project"},{"location":"/docs/api/1.0/admin/admin-projects-api.html#update-a-project","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to a project without having had seen the previous revision of the project, the last revision needs to be passed as a query parameter.\nPUT /v1/projects/{org_label}/{label}?rev={previous_rev}\n  {...}\n… where\n{previous_rev}: Number - the last known revision for the organization. {label}: String - the user friendly name that identifies this project.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/projects/myorg/myproject?rev=1\" -d \\\n'{\n  \"description\": \"example project creation\",\n  \"base\": \"https://nexus.example.com/v1/myorg/myproject/\",\n  \"vocab\": \"https://schema.org/\",\n  \"apiMappings\": [\n    {\n      \"prefix\": \"person\",\n      \"namespace\": \"http://example.com/some/person\"\n    },\n    {\n      \"prefix\": \"schemas\",\n      \"namespace\": \"https://bluebrain.github.io/nexus/schemas/\"\n    },\n    {\n      \"prefix\": \"ex\",\n      \"namespace\": \"http://example.com/\"\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"description\": \"example project creation\",\n  \"base\": \"https://nexus.example.com/v1/myorg/myproject/\",\n  \"vocab\": \"https://schema.org/\",\n  \"apiMappings\": [\n    {\n      \"prefix\": \"person\",\n      \"namespace\": \"http://example.com/some/person\"\n    },\n    {\n      \"prefix\": \"schemas\",\n      \"namespace\": \"https://bluebrain.github.io/nexus/schemas/\"\n    },\n    {\n      \"prefix\": \"ex\",\n      \"namespace\": \"http://example.com/\"\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n  \"@type\": \"Project\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Update a project"},{"location":"/docs/api/1.0/admin/admin-projects-api.html#deprecate-a-project","text":"Locks the project, so no further operations can be performed on it or on the children resources.\nDeprecating a project is considered to be an update as well.\nDELETE /v1/projects/{org_label}/{label}?rev={previous_rev}\n… where\n{previous_rev}: Number - the last known revision for the organization. {label}: String - the user friendly name that identifies this project.\nExample\nRequest curl -XDELETE \"https://nexus.example.com/v1/projects/myorg/myproject?rev=3\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n  \"@type\": \"Project\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:30:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Deprecate a project"},{"location":"/docs/api/1.0/admin/admin-projects-api.html#fetch-a-project-current-version-","text":"GET /v1/projects/{org_label}/{label}\n…where {label} is the user friendly name that identifies this project.\nExample\nRequest curl \"https://nexus.example.com/v1/projects/myorg/myproject\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n  \"@type\": \"Project\",\n  \"base\": \"https://nexus.example.com/v1/myorg/myproject/\",\n  \"vocab\": \"https://schema.org/\",\n  \"apiMappings\": [\n    {\n      \"prefix\": \"person\",\n      \"namespace\": \"http://example.com/some/person\"\n    },\n    {\n      \"prefix\": \"schemas\",\n      \"namespace\": \"https://bluebrain.github.io/nexus/schemas/\"\n    },\n    {\n      \"prefix\": \"ex\",\n      \"namespace\": \"http://example.com/\"\n    }\n  ],\n  \"_label\": \"myproject\",\n  \"_organizationLabel\": \"myorg\",\n  \"_organizationUuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n  \"_uuid\": \"e622745d-5eea-4dc5-8318-58a3dd4101ff\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:30:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a project (current version)"},{"location":"/docs/api/1.0/admin/admin-projects-api.html#fetch-a-project-specific-version-","text":"GET /v1/projects/{org_label}/{label}?rev={rev}\n…where\n{label}: String - the user friendly name that identifies this project. {rev}: Number - the revision of the project to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/projects/myorg/myproject?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n  \"@type\": \"Project\",\n  \"base\": \"https://nexus.example.com/v1/myorg/myproject/\",\n  \"vocab\": \"https://schema.org/\",\n  \"apiMappings\": [\n    {\n      \"prefix\": \"person\",\n      \"namespace\": \"http://example.com/some/person\"\n    },\n    {\n      \"prefix\": \"schemas\",\n      \"namespace\": \"https://bluebrain.github.io/nexus/schemas/\"\n    },\n    {\n      \"prefix\": \"ex\",\n      \"namespace\": \"http://example.com/\"\n    }\n  ],\n  \"_label\": \"myproject\",\n  \"_organizationLabel\": \"myorg\",\n  \"_organizationUuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n  \"_uuid\": \"e622745d-5eea-4dc5-8318-58a3dd4101ff\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:30:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a project (specific version)"},{"location":"/docs/api/1.0/admin/admin-projects-api.html#list-projects","text":"GET /v1/projects?from={from}&size={size}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20\nExample\nRequest curl \"https://nexus.example.com/v1/projects\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 1,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n      \"@type\": \"Project\",\n      \"base\": \"http://nexus.example.com/\",\n      \"vocab\": \"http://schema.org/\",\n      \"apiMappings\": [\n        {\n          \"namespace\": \"http://schema.org/\",\n          \"prefix\": \"schema\"\n        }\n      ],\n      \"_uuid\": \"e622745d-5eea-4dc5-8318-58a3dd4101ff\",\n      \"_label\": \"myproject\",\n      \"_organizationUuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n      \"_organizationLabel\": \"myorg\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T10:30:00.801Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    }\n  ]\n}Full source at GitHub","title":"List projects"},{"location":"/docs/api/1.0/admin/admin-projects-api.html#list-projects-belonging-to-an-organization","text":"GET /v1/projects/{org_label}?from={from}&size={size}&deprecated={deprecated}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20\nExample\nRequest curl \"https://nexus.example.com/v1/projects/myorg\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 1,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n      \"@type\": \"Project\",\n      \"base\": \"http://nexus.example.com/\",\n      \"vocab\": \"http://schema.org/\",\n      \"apiMappings\": [\n        {\n          \"namespace\": \"http://schema.org/\",\n          \"prefix\": \"schema\"\n        }\n      ],\n      \"_uuid\": \"e622745d-5eea-4dc5-8318-58a3dd4101ff\",\n      \"_label\": \"myproject\",\n      \"_organizationUuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n      \"_organizationLabel\": \"myorg\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T10:30:00.801Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    }\n  ]\n}Full source at GitHub","title":"List projects belonging to an organization"},{"location":"/docs/api/1.0/kg/index.html","text":"","title":"Knowledge Graph API"},{"location":"/docs/api/1.0/kg/index.html#knowledge-graph-api","text":"","title":"Knowledge Graph API"},{"location":"/docs/api/1.0/kg/index.html#schemas","text":"A schema is a resource which defines a set of rules and constrains using SHACL.\nOperations on schemas","title":"Schemas"},{"location":"/docs/api/1.0/kg/index.html#resolvers","text":"A resolver is a resource which defines the way ids are retrieved inside a project.\nOperations on resolvers","title":"Resolvers"},{"location":"/docs/api/1.0/kg/index.html#views","text":"A view is a resource which defines the way indexing is applied to certain resources inside a project.\nOperations on views","title":"Views"},{"location":"/docs/api/1.0/kg/index.html#files","text":"A file is a binary attachment resource.\nOperations on files","title":"Files"},{"location":"/docs/api/1.0/kg/index.html#resources","text":"A resource is the most generic entity on the Knowledge Graph. Resources can be schemas, resolvers, views, files or data.\nOperations on resources","title":"Resources"},{"location":"/docs/api/1.0/kg/kg-schemas-api.html","text":"","title":"Schemas"},{"location":"/docs/api/1.0/kg/kg-schemas-api.html#schemas","text":"Schemas are rooted in the /v1/schemas/{org_label}/{project_label} collection. They define a set of rules and constraints using SHACL. Once those schemas are present, other resources can be created against them. Those resources won’t be successfully created unless they match the required constraints defined on the schema.\nEach schema…\nbelongs to a project identifier by the label {project_label} inside an organization identifier by the label {org_label} it is validated against the shacl schema (version 20170720).\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nAuthorization notes When modifying schemas, the caller must have schemas/write permissions on the current path of the project or the ancestor paths. When reading schemas, the caller must have resources/read permissions on the current path of the project or the ancestor paths.","title":"Schemas"},{"location":"/docs/api/1.0/kg/kg-schemas-api.html#create-a-schema-using-post","text":"POST /v1/schemas/{org_label}/{project_label}\n  {...}\nThe json payload:\nIf the @id value is found on the payload, this @id will be used. If the @id value is not found on the payload, an @id will be generated as follows: base:{UUID}. The base is the prefix defined on the resource’s project ({project_label}).\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/schemas/myorg/myproj\" -d \\\n'{\n  \"@context\": {\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n      \"ex\": \"http://example.com/\"\n  },\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"@context\": {\n    \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n    \"ex\": \"http://example.com/\"\n  },\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"Schema\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl-20170720.ttl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create a schema using POST"},{"location":"/docs/api/1.0/kg/kg-schemas-api.html#create-a-schema-using-put","text":"This alternative endpoint to create a schema is useful in case the json payload does not contain an @id but you want to specify one. The @id will be specified in the last segment of the endpoint URI.\nPUT /v1/schemas/{org_label}/{project_label}/{schema_id}\n  {...}\nNote that if the payload contains an @id different from the {schema_id}, the request will fail.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\" -d \\\n'{\n  \"@context\":  {\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n      \"ex\": \"http://example.com/\"\n  },\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"@context\": {\n    \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n    \"ex\": \"http://example.com/\"\n  },\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"Schema\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl-20170720.ttl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create a schema using PUT"},{"location":"/docs/api/1.0/kg/kg-schemas-api.html#update-a-schema","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to a resource without having had seen the previous revision of the resource, the last revision needs to be passed as a query parameter.\nPUT /v1/schemas/{org_label}/{project_label}/{schema_id}?rev={previous_rev}\n  {...}\n… where {previous_rev} is the last known revision number for the schema.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c?rev=1\" -d \\\n'{\n  \"@context\": {\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n      \"ex\": \"http://example.com/\"\n  },\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"@context\": {\n    \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n    \"ex\": \"http://example.com/\"\n  },\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"Schema\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl-20170720.ttl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:56:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Update a schema"},{"location":"/docs/api/1.0/kg/kg-schemas-api.html#tag-a-schema","text":"Links a schema revision to a specific name.\nTagging a schema is considered to be an update as well.\nPUT /v1/schemas/{org_label}/{project_label}/{schema_id}/tags?rev={previous_rev}\n  {\n    \"tag\": \"{name}\",\n    \"rev\": {rev}\n  }\n… where\n{previous_rev}: Number - is the last known revision for the resolver. {name}: String - label given to the schemas at specific revision. {rev}: Number - the revision to link the provided {name}.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/schemas/myorg/myproj/myschema/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/tags?rev=2\" -d \\\n'{\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}'Full source at GitHub Payload {\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"Schema\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl-20170720.ttl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 3,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:58:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Tag a schema"},{"location":"/docs/api/1.0/kg/kg-schemas-api.html#deprecate-a-schema","text":"Locks the schema, so no further operations can be performed. It also deletes the schema from listing/querying results.\nDeprecating a schema is considered to be an update as well.\nDELETE /v1/schemas/{org_label}/{project_label}/{schema_id}?rev={previous_rev}\n… where {previous_rev} is the last known revision number for the schema.\nExample\nRequest curl -XDELETE \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c?rev=5\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"Schema\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl-20170720.ttl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 6,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:05:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Deprecate a schema"},{"location":"/docs/api/1.0/kg/kg-schemas-api.html#fetch-a-schema-current-version-","text":"GET /v1/schemas/{org_label}/{project_label}/{schema_id}\nExample\nRequest curl \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\"Full source at GitHub Response {\n  \"@context\": [\n    {\n      \"ex\": \"http://example.com/\",\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n    },\n    \"https://bluebrain.github.io/nexus/contexts/shacl-20170720.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://bluebrain.github.io/nexus/schemas/myschema2\",\n  \"@type\": \"Schema\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"NodeShape\",\n      \"nodeKind\": \"BlankNode:OrIRI\",\n      \"property\": [\n        {\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1,\n          \"path\": \"ex:name\"\n        },\n        {\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1,\n          \"path\": \"ex:bool\"\n        },\n        {\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1,\n          \"path\": \"ex:number\"\n        }\n      ],\n      \"targetClass\": \"ex:Custom\"\n    }\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"Schema\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl-20170720.ttl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:05:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a schema (current version)"},{"location":"/docs/api/1.0/kg/kg-schemas-api.html#fetch-a-schema-specific-version-","text":"GET /v1/schemas/{org_label}/{project_label}/{schema_id}?rev={rev}\n… where {rev} is the revision number of the schema to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    {\n      \"ex\": \"http://example.com/\",\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n    },\n    \"https://bluebrain.github.io/nexus/contexts/shacl-20170720.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://bluebrain.github.io/nexus/schemas/myschema2\",\n  \"@type\": \"Schema\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"NodeShape\",\n      \"nodeKind\": \"BlankNode:OrIRI\",\n      \"property\": [\n        {\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1,\n          \"path\": \"ex:name\"\n        },\n        {\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1,\n          \"path\": \"ex:bool\"\n        },\n        {\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1,\n          \"path\": \"ex:number\"\n        }\n      ],\n      \"targetClass\": \"ex:Custom\"\n    }\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"Schema\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl-20170720.ttl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:05:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a schema (specific version)"},{"location":"/docs/api/1.0/kg/kg-schemas-api.html#fetch-a-schema-specific-tag-","text":"GET /v1/schemas/{org_label}/{project_label}/{schema_id}?tag={tag}\n… where {tag} is the tag of the resource to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c?tag=mytag\"Full source at GitHub Response {\n  \"@context\": [\n    {\n      \"ex\": \"http://example.com/\",\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\"\n    },\n    \"https://bluebrain.github.io/nexus/contexts/shacl-20170720.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://bluebrain.github.io/nexus/schemas/myschema2\",\n  \"@type\": \"Schema\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"NodeShape\",\n      \"nodeKind\": \"BlankNode:OrIRI\",\n      \"property\": [\n        {\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1,\n          \"path\": \"ex:name\"\n        },\n        {\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1,\n          \"path\": \"ex:bool\"\n        },\n        {\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1,\n          \"path\": \"ex:number\"\n        }\n      ],\n      \"targetClass\": \"ex:Custom\"\n    }\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"Schema\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl-20170720.ttl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a schema (specific tag)"},{"location":"/docs/api/1.0/kg/kg-schemas-api.html#list-schemas","text":"GET /v1/schemas/{org_label}/{project_label}?from={from}&size={size}&deprecated={deprecated}&rev={rev}&type={type}&createdBy={createdBy}&updatedBy={updatedBy}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting schemas based on their deprecation status {rev}: Number - can be used to filter the resulting schemas based on their revision value {type}: Iri - can be used to filter the resulting schemas based on their @type value. This parameter can appear multiple times, filtering further the @type value. {createdBy}: Iri - can be used to filter the resulting schemas based on their creator {updatedBy}: Iri - can be used to filter the resulting schemas based on the person which performed the last update\nExample\nRequest curl \"https://nexus.example.com/v1/schemas/myorg/myproj\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 1,\n  \"_results\": [\n    {\n      \"@id\": \"https://bluebrain.github.io/nexus/schemas/myschema2\",\n      \"@type\": \"https://bluebrain.github.io/nexus/vocabulary/Schema\",\n      \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl-20170720.ttl\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-17T15:05:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    }\n  ]\n}Full source at GitHub","title":"List schemas"},{"location":"/docs/api/1.0/kg/kg-resolvers-api.html","text":"","title":"Resolvers"},{"location":"/docs/api/1.0/kg/kg-resolvers-api.html#resolvers","text":"Resolvers are rooted in the /v1/resolvers/{org_label}/{project_label} collection and are used in the following scenarios:\nBring the content of the owl:imports predicate for schema resources. The value is the @id of the resource. E.g.: You can define owl imports on a schema, as follows \"owl:imports\": \"http://example.com/myid\". The resolver will try to find a resource with \"@id\": \"http://example.com/myid\" and if found, will bring the payload into the original resource. Bring the content of the @context links. The value is the @id of the resource. E.g.: A resource might define the context as follows: \"@context\": \"http://example.com/id\". The resolver will try to find a resource with \"@id\": \"http://example.com/id\" and if found, will bring the payload into the original resource.\nEach resolver…\nbelongs to a project identifier by the label {project_label} inside an organization identifier by the label {org_label} it is validated against the resolver schema.\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nAuthorization notes When modifying resolvers, the caller must have resolvers/write permissions on the current path of the project or the ancestor paths. When reading resolvers, the caller must have resources/read permissions on the current path of the project or the ancestor paths.","title":"Resolvers"},{"location":"/docs/api/1.0/kg/kg-resolvers-api.html#resolver-types","text":"There are several types of resolvers, which perform resolution in different scopes.","title":"Resolver types"},{"location":"/docs/api/1.0/kg/kg-resolvers-api.html#inproject-resolver","text":"The scope of the resolution is the current project where the resource resides. In other words:\nSchema A can import schema B using the owl:import as long as schema B is located on the same project as schema A. Resource A can reference resource’s context B (inside @context) as long as resource B is located on the same project as resource A.\nThis resolver gets automatically created when the project is created and it cannot be modified.\nInProject resolver payload\n{\n    \"@id\": \"nxv:InProject\",\n    \"@type\": [ \"InProject\", \"Resolver\" ],\n    \"priority\": {priority},\n}\nwhere {priority} is a numeric value (from 1 - 100) which defines the resolution priority when attempting to find the resource with a particular @id.","title":"InProject resolver"},{"location":"/docs/api/1.0/kg/kg-resolvers-api.html#crossproject-resolver","text":"The scope of the resolution is the collections of projects P defined on the resolver. CrossProject resolution also defines a collection of identities I to enforce ACLs. In other words:\nSchema A can import schema B using the owl:import as long as schema B is located on some of the projects from the collection P and as long I have resources/read permissions on the schema B project. Resource A can reference resource’s context B (inside @context) as long as resource B is located on some of the projects from the collection P and as long as I have resources/read permissions on the schema B project.\nCrossProject resolver payload\n{\n  \"@id\": \"{someid}\",\n  \"@type\": [\"Resolver\", \"CrossProject\"],\n  \"resourceTypes\": [\"{resourceType}\", ...],\n  \"projects\": [\"{project}\", ... ],\n  \"identities\": [ {_identity_}, {...} ],\n  \"priority\": 50\n}\nwhere…\n{resourceType}: Iri - resolves only the resources with @type containing {resourceType}. This field is optional. {priority}: Number - value (from 1 - 100) which defines the resolution priority when attempting to find the resource with a particular @id. {project}: String - the user friendly reference to the project from where the resolution process will attempt to find the @id’s. It follows the format {organization}/{project}. _identity_: Json object - the identity against which to enforce ACLs during resolution process. {someid}: Iri - the @id value for this resolver.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver\" -d \\\n'{\n  \"@type\": [\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}'Full source at GitHub Payload {\n  \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myresolver\",\n  \"@type\": [\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"CrossProject resolver"},{"location":"/docs/api/1.0/kg/kg-resolvers-api.html#create-a-resolver-using-post","text":"POST /v1/resolvers/{org_label}/{project_label}\n  {...}\nThe json payload:\nIf the @id value is found on the payload, this @id will be used. If the @id value is not found on the payload, an @id will be generated as follows: base:{UUID}. The base is the prefix defined on the resolver’s project ({project_label}).\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resolvers/myorg/myproj\" -d \\\n'{\n  \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myresolver\",\n  \"@type\": [\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}'Full source at GitHub Payload {\n  \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myresolver\",\n  \"@type\": [\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create a resolver using POST"},{"location":"/docs/api/1.0/kg/kg-resolvers-api.html#create-a-resolver-using-put","text":"This alternative endpoint to create a resolver is useful in case the json payload does not contain an @id but you want to specify one. The @id will be specified in the last segment of the endpoint URI.\nPUT /v1/resolvers/{org_label}/{project_label}/{resolver_id}\n  {...}\nNote that if the payload contains an @id different from the {resolver_id}, the request will fail.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver\" -d \\\n'{\n  \"@type\": [\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}'Full source at GitHub Payload {\n  \"@type\": [\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create a resolver using PUT"},{"location":"/docs/api/1.0/kg/kg-resolvers-api.html#update-a-resolver","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to a resolver without having had seen the previous revision of the resolver, the last revision needs to be passed as a query parameter.\nPUT /v1/resolvers/{org_label}/{project_label}/{resolver_id}?rev={previous_rev}\n  {...}\n… where {previous_rev} is the last known revision number for the resolver.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver?rev=1\" -d \\\n'{\n  \"@type\": [\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}'Full source at GitHub Payload {\n  \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myresolver\",\n  \"@type\": [\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:10:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Update a resolver"},{"location":"/docs/api/1.0/kg/kg-resolvers-api.html#tag-a-resolver","text":"Links a resolver revision to a specific name.\nTagging a resolver is considered to be an update as well.\nPUT /v1/resolvers/{org_label}/{project_label}/{resolver_id}/tags?rev={previous_rev}\n  {\n    \"tag\": \"{name}\",\n    \"rev\": {rev}\n  }\n… where\n{previous_rev}: Number - the last known revision for the resolver. {name}: String - label given to the resolver at specific revision. {rev}: Number - the revision to link the provided {name}.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver/tags?rev=2\" -d \\\n'{\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}'Full source at GitHub Payload {\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 3,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Tag a resolver"},{"location":"/docs/api/1.0/kg/kg-resolvers-api.html#deprecate-a-resolver","text":"Locks the resolver, so no further operations can be performed. It will also not be taken into account in the resolution process.\nDeprecating a resolver is considered to be an update as well.\nDELETE /v1/resolvers/{org_label}/{project_label}/{resolver_id}?rev={previous_rev}\n… where {previous_rev} is the last known revision number for the resolver.\nExample\nRequest curl -XDELETE \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver?rev=5\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 6,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Deprecate a resolver"},{"location":"/docs/api/1.0/kg/kg-resolvers-api.html#fetch-a-resolver-current-version-","text":"GET /v1/resolvers/{org_label}/{project_label}/{resolver_id}\nExample\nRequest curl \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resolver.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myresolver\",\n\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"@type\": \"User\",\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50,\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a resolver (current version)"},{"location":"/docs/api/1.0/kg/kg-resolvers-api.html#fetch-a-resolver-specific-version-","text":"GET /v1/resolvers/{org_label}/{project_label}/{resolver_id}?rev={rev}\n… where {rev} is the revision number of the resolver to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resolver.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myresolver\",\n\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"@type\": \"User\",\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50,\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a resolver (specific version)"},{"location":"/docs/api/1.0/kg/kg-resolvers-api.html#fetch-a-resolver-specific-tag-","text":"GET /v1/resolvers/{org_label}/{project_label}/{resolver_id}?tag={tag}\n… where {tag} is the tag of the resolver to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver?tag=mytag\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resolver.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myresolver\",\n\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"@type\": \"User\",\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50,\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a resolver (specific tag)"},{"location":"/docs/api/1.0/kg/kg-resolvers-api.html#list-resolvers","text":"GET /v1/resolvers/{org_label}/{project_label}?from={from}&size={size}&deprecated={deprecated}&rev={rev}&type={type}&createdBy={createdBy}&updatedBy={updatedBy}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting resolvers based on their deprecation status {rev}: Number - can be used to filter the resulting resolvers based on their revision value {type}: Iri - can be used to filter the resulting resolvers based on their @type value. This parameter can appear multiple times, filtering further the @type value. {createdBy}: Iri - can be used to filter the resulting resolvers based on their creator {updatedBy}: Iri - can be used to filter the resulting resolvers based on the person which performed the last update\nExample\nRequest curl \"https://nexus.example.com/v1/resolvers/myorg/myproj\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 2,\n  \"_results\": [\n    {\n      \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/InProject\",\n      \"@type\": [\n        \"https://bluebrain.github.io/nexus/vocabulary/Resolver\",\n        \"https://bluebrain.github.io/nexus/vocabulary/InProject\"\n      ],\n      \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:InProject\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_createdAt\": \"2018-09-18T09:50:00.801Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T10:00:00.801Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_rev\": 1,\n      \"_deprecated\": true\n    },\n    {\n      \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myresolver\",\n      \"@type\": [\n        \"https://bluebrain.github.io/nexus/vocabulary/Resolver\",\n        \"https://bluebrain.github.io/nexus/vocabulary/CrossProject\"\n      ],\n      \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_rev\": 4,\n      \"_deprecated\": true\n    }\n  ]\n}Full source at GitHub","title":"List resolvers"},{"location":"/docs/api/1.0/kg/kg-views-api.html","text":"","title":"Views"},{"location":"/docs/api/1.0/kg/kg-views-api.html#views","text":"Views are rooted in the /v1/views/{org_label}/{project_label} collection and are used to index the selected resources into a bucket.\nEach view…\nbelongs to a project identifier by the label {project_label} inside an organization identifier by the label {org_label} it is validated against the view schema.\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nAuthorization notes When modifying views, the caller must have views/write permissions on the current path of the project or the ancestor paths. When querying views, the caller must have views/query permissions on the current path of the project or the ancestor paths. When reading views, the caller must have resources/read permissions on the current path of the project or the ancestor paths.","title":"Views"},{"location":"/docs/api/1.0/kg/kg-views-api.html#view-types","text":"There are several types of views, which relies on different technology to perform the indexing","title":"View types"},{"location":"/docs/api/1.0/kg/kg-views-api.html#sparqlview","text":"This view creates a SPARQL namespace where it stores all the resource’s graph inside the view project.\nThis view gets automatically created when the project is created and it cannot be modified.\nSparqlView payload\n{\n  \"@id\": \"nxv:defaultSparqlIndex\",\n  \"@type\": [ \"View\", \"SparqlView\" ]\n}","title":"SparqlView"},{"location":"/docs/api/1.0/kg/kg-views-api.html#elasticsearchview","text":"Note The described features are in @Alpha phase of development. The operations might change in the future.\nThis view creates an ElasticSearch index where it stores the selected resources inside the view project.\nA default view gets automatically created when the project is created but other views can be created.\nElasticSearchView payload\n{\n  \"@id\": \"{someid}\",\n  \"@type\": [ \"View\", \"ElasticSearchView\", \"Alpha\" ],\n  \"resourceSchemas\": [ \"{resourceSchema}\", ...],\n  \"resourceTag\": \"{tag}\",\n  \"sourceAsText\": {sourceAsText},\n  \"includeMetadata\": {includeMetadata},\n  \"mapping\": _elasticsearch mapping_\n}\nwhere…\n{resourceSchema}: Iri - It selects the resources that are validated against the provided schema Iri. This field is optional. {tag}: String - It selects the resources with the provided tag. This field is optional. _elasticsearch mapping_: Json object - It defines the value types for the Json keys, as stated at the ElasticSearch mapping documentation. {sourceAsText}: Boolean - If true, the resource’s payload will be stored in the ElasticSearch document as a single escaped string value of the key _original_source. If false, the resource’s payload will be stored normally in the ElasticSearch document. The default value is false. {includeMetadata}: Boolean - If true, the resource’s nexus metadata (_constrainedBy, _deprecated, …) will be stored in the ElasticSearch document. Otherwise it won’t. The default value is false. {someid}: Iri - the @id value for this view.","title":"ElasticSearchView"},{"location":"/docs/api/1.0/kg/kg-views-api.html#aggregateelasticsearchview","text":"Note The described features are in @Alpha phase of development. The operations might change in the future.\nThis view is an aggregate of ElasticSearchViews. The view itself does not create any index, but it reference to the already existing indices of the linked ElasticSearchViews.\nWhen performing queries on the _search endpoint, this view will make use of the multi-index query capabilities of ElasticSearch in order to select the indices of every view present on this aggregate view.\nIf the caller does not have the permission views/query on all the projects defined on the aggregated view, only a subset of indices (or none) will be selecting, respecting the defined permissions.\nAggregateElasticSearchView payload\n{\n  \"@id\": \"{someid}\",\n  \"@type\": [ \"View\", \"AggregateElasticSearchView\", \"Alpha\" ],\n  \"views\": [ \n    {\n        \"project\": \"{project}\",\n        \"viewId\": \"{viewId}\"\n    },\n    ...\n  ]\n}\nwhere…\n{project}: String - the project, defined as {org_label}/{project_label}, where the {viewId} is located. {viewId}: Iri - The view @id value to be aggregated.","title":"AggregateElasticSearchView"},{"location":"/docs/api/1.0/kg/kg-views-api.html#create-an-elasticsearchview-using-post","text":"POST /v1/view/{org_label}/{project_label}\n  {...}\nThe json payload:\nIf the @id value is found on the payload, this @id will be used. If the @id value is not found on the payload, an @id will be generated as follows: base:{UUID}. The base is the prefix defined on the view’s project ({project_label}).\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/views/myorg/myproj\" -d \\\n'{\n  \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myview\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"Alpha\"\n  ],\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      }\n    }\n  },\n  \"includeMetadata\": false,\n  \"sourceAsText\": false,\n  \"resourceSchemas\": \"https://bluebrain.github.io/nexus/schemas/myschema\"\n}'Full source at GitHub Payload {\n  \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myview\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"Alpha\"\n  ],\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      }\n    }\n  },\n  \"includeMetadata\": false,\n  \"sourceAsText\": false,\n  \"resourceSchemas\": \"https://bluebrain.github.io/nexus/schemas/myschema\"\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myview\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\",\n    \"Alpha\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create an ElasticSearchView using POST"},{"location":"/docs/api/1.0/kg/kg-views-api.html#create-an-elasticsearchview-using-put","text":"This alternative endpoint to create a view is useful in case the json payload does not contain an @id but you want to specify one. The @id will be specified in the last segment of the endpoint URI.\nPUT /v1/views/{org_label}/{project_label}/{view_id}\n  {...}\nNote that if the payload contains an @id different from the {view_id}, the request will fail.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview\" -d \\\n'{\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"Alpha\"\n  ],\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      }\n    }\n  },\n  \"includeMetadata\": false,\n  \"sourceAsText\": false,\n  \"resourceSchemas\": \"https://bluebrain.github.io/nexus/schemas/myschema\"\n}'Full source at GitHub Payload {\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"Alpha\"\n  ],\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      }\n    }\n  },\n  \"includeMetadata\": false,\n  \"sourceAsText\": false,\n  \"resourceSchemas\": \"https://bluebrain.github.io/nexus/schemas/myschema\"\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myview\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\",\n    \"Alpha\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create an ElasticSearchView using PUT"},{"location":"/docs/api/1.0/kg/kg-views-api.html#update-an-elasticsearchview","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to a view without having had seen the previous revision of the view, the last revision needs to be passed as a query parameter.\nPUT /v1/views/{org_label}/{project_label}/{view_id}?rev={previous_rev}\n  {...}\n… where {previous_rev} is the last known revision number for the view.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview?rev=1\" -d \\\n'{\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"Alpha\"\n  ],\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      }\n    }\n  },\n  \"includeMetadata\": false,\n  \"sourceAsText\": false,\n  \"resourceSchemas\": \"https://bluebrain.github.io/nexus/schemas/myschema\"\n}'Full source at GitHub Payload {\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"Alpha\"\n  ],\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      }\n    }\n  },\n  \"includeMetadata\": false,\n  \"sourceAsText\": false,\n  \"resourceSchemas\": \"https://bluebrain.github.io/nexus/schemas/myschema\"\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myview\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\",\n    \"Alpha\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T16:42:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Update an ElasticSearchView"},{"location":"/docs/api/1.0/kg/kg-views-api.html#create-an-aggregateelasticsearchview-using-put","text":"This alternative endpoint to create a view is useful in case the json payload does not contain an @id but you want to specify one. The @id will be specified in the last segment of the endpoint URI.\nPUT /v1/views/{org_label}/{project_label}/{view_id}\n  {...}\nNote that if the payload contains an @id different from the {view_id}, the request will fail.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/views/myorg/myproj3/nxv:myagg\" -d \\\n'{\n  \"@context\": {\n    \"nxv\": \"https://bluebrain.github.io/nexus/vocabulary/\"\n  },\n  \"@type\": [\n    \"AggregateElasticSearchView\",\n    \"Alpha\"\n  ],\n  \"views\": [\n    {\n      \"project\": \"myorg/myproj\",\n      \"viewId\": \"nxv:myview\"\n    },\n    {\n      \"project\": \"myorg/myproj2\",\n      \"viewId\": \"nxv:myview2\"\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"@context\": {\n    \"nxv\": \"https://bluebrain.github.io/nexus/vocabulary/\"\n  },\n  \"@type\": [\n    \"AggregateElasticSearchView\",\n    \"Alpha\"\n  ],\n  \"views\": [\n    {\n      \"project\": \"myorg/myproj\",\n      \"viewId\": \"nxv:myview\"\n    },\n    {\n      \"project\": \"myorg/myproj2\",\n      \"viewId\": \"nxv:myview2\"\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myview\",\n  \"@type\": [\n    \"AggregateElasticSearchView\",\n    \"View\",\n    \"Alpha\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj3/nxv:myagg\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj3\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create an AggregateElasticSearchView using PUT"},{"location":"/docs/api/1.0/kg/kg-views-api.html#tag-a-view","text":"Links a view’s revision to a specific name.\nTagging a view is considered to be an update as well.\nPUT /v1/views/{org_label}/{project_label}/{view_id}/tags?rev={previous_rev}\n  {\n    \"tag\": \"{name}\",\n    \"rev\": {rev}\n  }\n… where\n{previous_rev}: Number - the last known revision for the resolver. {name}: String - label given to the view at specific revision. {rev}: Number - the revision to link the provided {name}.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview/tags?rev=2\" -d \\\n'{\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}'Full source at GitHub Payload {\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myview\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\",\n    \"Alpha\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 3,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T16:52:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Tag a View"},{"location":"/docs/api/1.0/kg/kg-views-api.html#deprecate-a-view","text":"Locks the view, so no further operations can be performed. It also stops indexing any more resources into it.\nDeprecating a view is considered to be an update as well.\nDELETE /v1/views/{org_label}/{project_label}/{view_id}?rev={previous_rev}\n… where {previous_rev} is the last known revision number for the view.\nExample\nRequest curl -XDELETE \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview?rev=5\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myview\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\",\n    \"Alpha\"\n  ],\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 6,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Deprecate a view"},{"location":"/docs/api/1.0/kg/kg-views-api.html#fetch-a-view-current-version-","text":"GET /v1/views/{org_label}/{project_label}/{view_id}\nExample\nRequest curl \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/view.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myview2\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\",\n    \"Alpha\"\n  ],\n  \"includeMetadata\": false,\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      }\n    }\n  },\n  \"resourceSchemas\": [\n    \"https://bluebrain.github.io/nexus/schemas/myschema\"\n  ],\n  \"sourceAsText\": false,\n  \"_uuid\": \"4f90ceff-45b7-442d-8536-d41705321d50\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 4,\n  \"_deprecated\": true\n}Full source at GitHub","title":"Fetch a view (current version)"},{"location":"/docs/api/1.0/kg/kg-views-api.html#fetch-a-view-specific-version-","text":"GET /v1/views/{org_label}/{project_label}/{view_id}?rev={rev}\n… where {rev} is the revision number of the view to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/view.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myview2\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\",\n    \"Alpha\"\n  ],\n  \"includeMetadata\": false,\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      }\n    }\n  },\n  \"resourceSchemas\": [\n    \"https://bluebrain.github.io/nexus/schemas/myschema\"\n  ],\n  \"sourceAsText\": false,\n  \"_uuid\": \"4f90ceff-45b7-442d-8536-d41705321d50\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 4,\n  \"_deprecated\": true\n}Full source at GitHub","title":"Fetch a view (specific version)"},{"location":"/docs/api/1.0/kg/kg-views-api.html#fetch-a-view-specific-tag-","text":"GET /v1/views/{org_label}/{project_label}/{view_id}?tag={tag}\n… where {tag} is the tag of the view to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview?tag=mytag\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/view.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myview2\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\",\n    \"Alpha\"\n  ],\n  \"includeMetadata\": false,\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      }\n    }\n  },\n  \"resourceSchemas\": [\n    \"https://bluebrain.github.io/nexus/schemas/myschema\"\n  ],\n  \"sourceAsText\": false,\n  \"_uuid\": \"4f90ceff-45b7-442d-8536-d41705321d50\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 1,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Fetch a view (specific tag)"},{"location":"/docs/api/1.0/kg/kg-views-api.html#list-views","text":"GET /v1/views/{org_label}/{project_label}?from={from}&size={size}&deprecated={deprecated}&rev={rev}&type={type}&createdBy={createdBy}&updatedBy={updatedBy}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting views based on their deprecation status {rev}: Number - can be used to filter the resulting views based on their revision value {type}: Iri - can be used to filter the resulting views based on their @type value. This parameter can appear multiple times, filtering further the @type value. {createdBy}: Iri - can be used to filter the resulting views based on their creator {updatedBy}: Iri - can be used to filter the resulting views based on the person which performed the last update\nExample\nRequest curl \"https://nexus.example.com/v1/views/myorg/myproj\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 3,\n  \"_results\": [\n    {\n      \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/defaultElasticIndex\",\n      \"@type\": [\n        \"https://bluebrain.github.io/nexus/vocabulary/View\",\n        \"https://bluebrain.github.io/nexus/vocabulary/Alpha\",\n        \"https://bluebrain.github.io/nexus/vocabulary/ElasticSearchView\"\n      ],\n      \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:defaultElasticIndex\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_rev\": 1,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    },\n    {\n      \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/defaultSparqlIndex\",\n      \"@type\": [\n        \"https://bluebrain.github.io/nexus/vocabulary/View\",\n        \"https://bluebrain.github.io/nexus/vocabulary/SparqlView\"\n      ],\n      \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:defaultSparqlIndex\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_rev\": 1,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    },\n    {\n      \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myview2\",\n      \"@type\": [\n        \"https://bluebrain.github.io/nexus/vocabulary/ElasticSearchView\",\n        \"https://bluebrain.github.io/nexus/vocabulary/View\",\n        \"https://bluebrain.github.io/nexus/vocabulary/Alpha\"\n      ],\n      \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    }\n  ]\n}Full source at GitHub","title":"List views"},{"location":"/docs/api/1.0/kg/kg-views-api.html#elasticsearch-query","text":"Provides search functionality on the ElasticSearchView or AggregateElasticSearchView content.\nPOST /v1/views/{org_label}/{project_label}/{view_id}/_search\n  {...}\nThe supported payload is defined on the ElasticSearch documentation\nThe string documents is used as a prefix of the default ElasticSearch view_id\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview/_search\" -d \\\n'{\n  \"query\": {\n    \"term\": {\n      \"_deprecated\": true\n    }\n  }\n}'Full source at GitHub Response {\n  \"_shards\": {\n    \"failed\": 0,\n    \"skipped\": 0,\n    \"successful\": 0,\n    \"total\": 0\n  },\n  \"hits\": {\n    \"hits\": [\n      {\n        \"_score\": 1.2039728,\n        \"_id\": \"http://example.com/myview\",\n        \"_index\": \"kg_v1_803da242-d510-4e1a-a12d-d0e0b7018a41_684bd815-9273-46f4-ac1c-0383d4a98254_1\",\n        \"_source\": {\n          \"@id\": \"http://example.com/myview\",\n          \"@type\": [\n            \"https://bluebrain.github.io/nexus/vocabulary/View\",\n            \"https://bluebrain.github.io/nexus/vocabulary/ElasticSearchView\",\n            \"https://bluebrain.github.io/nexus/vocabulary/Alpha\"\n          ],\n          \"_original_source\": \"{\\\"mapping\\\":\\\"{\\\\\\\"dynamic\\\\\\\":false,\\\\\\\"properties\\\\\\\":{\\\\\\\"@id\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"keyword\\\\\\\"},\\\\\\\"@type\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"keyword\\\\\\\"},\\\\\\\"name\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"keyword\\\\\\\"},\\\\\\\"number\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"long\\\\\\\"},\\\\\\\"bool\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"boolean\\\\\\\"}}}\\\",\\\"_uuid\\\":\\\"89dd9858-cf87-4c46-94c2-24da0fcae0aa\\\",\\\"@context\\\":\\\"https://bluebrain.github.io/nexus/contexts/view\\\",\\\"@type\\\":[\\\"View\\\",\\\"ElasticSearchView\\\",\\\"Alpha\\\"],\\\"includeMetadata\\\":true,\\\"sourceAsText\\\":false}\",\n          \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n          \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n          \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n          \"_rev\": 6,\n          \"_deprecated\": true,\n          \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n          \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n          \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n          \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n        },\n        \"_type\": \"doc\"\n      }\n    ],\n    \"max_score\": 1.2039728,\n    \"total\": 1\n  },\n  \"timed_out\": false,\n  \"took\": 11\n}Full source at GitHub","title":"ElasticSearch query"},{"location":"/docs/api/1.0/kg/kg-views-api.html#sparql-query","text":"Provides search functionality on the SparqlView content.\nPOST /v1/views/{org_label}/{project_label}/graph/sparql\n  \"...\"\nThe supported payload is defined on the SparQL documentation The Content-Type HTTP header for this request is application/sparql-query.\nExample\nRequest curl -XPOST -H \"Content-Type: application/sparql-query\" \"https://nexus.example.com/v1/views/myorg/myproj/graph/sparql\" -d \\\n'SELECT ?s where {?s ?p ?o} LIMIT 2'Full source at GitHub Response {\n  \"head\": {\n    \"vars\": [\n      \"s\"\n    ]\n  },\n  \"results\": {\n    \"bindings\": [\n      {\n        \"s\": {\n          \"type\": \"uri\",\n          \"value\": \"http://example.com/myview\"\n        }\n      },\n      {\n        \"s\": {\n          \"type\": \"uri\",\n          \"value\": \"http://example.com/other\"\n        }\n      }\n    ]\n  }\n}Full source at GitHub","title":"SparQL query"},{"location":"/docs/api/1.0/kg/kg-views-api.html#views-internals","text":"When an asynchronous process that reads the view events from the Primary Store gets triggered, a new index (SparQL or ElasticSearch) gets created. After that, an endpoint (/sparql for SparQL view or /_search for ElasticSearch view) becomes available. The client can then perform queries against those endpoints.\nThe view provides the configuration of the index and defines which Events are going to be indexed.","title":"Views internals"},{"location":"/docs/api/1.0/kg/kg-files-api.html","text":"","title":"Files"},{"location":"/docs/api/1.0/kg/kg-files-api.html#files","text":"Files are attachment resources rooted in the /v1/files/{org_label}/{project_label}/ collection.\nEach file…\nbelongs to a project identifier by the label {project_label} inside an organization identifier by the label {org_label}\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nAuthorization notes When modifying files, the caller must have projects/write permissions on the current path of the project or the ancestor paths. When reading files, the caller must have projects/read permissions on the current path of the project or the ancestor paths.","title":"Files"},{"location":"/docs/api/1.0/kg/kg-files-api.html#create-a-file-using-post","text":"POST /v1/files/{org_label}/{project_label}\nThe json payload:\nIf the @id value is found on the payload, this @id will be used. If the @id value is not found on the payload, an @id will be generated as follows: base:{UUID}. The base is the prefix defined on the resource’s project ({project_label}).\nExample\nRequest curl -XPOST -F \"file=@/path/to/myfile.jpg;type=image/jpeg\" \"https://nexus.example.com/v1/files/myorg/myproj\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9\",\n  \"@type\": \"File\",\n  \"_bytes\": 670,\n  \"_digest\": {\n    \"_algorithm\": \"SHA-256\",\n    \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n  },\n  \"_filename\": \"myfile.jpg\",\n  \"_mediaType\": \"image/jpeg\",\n  \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Create a file using POST"},{"location":"/docs/api/1.0/kg/kg-files-api.html#create-a-resource-using-put","text":"This alternative endpoint to create a resource is useful in case the json payload does not contain an @id but you want to specify one. The @id will be specified in the last segment of the endpoint URI.\nPUT /v1/files/{org_label}/{project_label}/{file_id}\nNote that if the payload contains an @id different from the {file_id}, the request will fail.\nExample\nRequest curl -XPUT -F \"file=@/path/to/myfile.jpg;type=image/jpeg\" \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile.jpg\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myfile\",\n  \"@type\": \"File\",\n  \"_bytes\": 670,\n  \"_digest\": {\n    \"_algorithm\": \"SHA-256\",\n    \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n  },\n  \"_filename\": \"myfile.jpg\",\n  \"_mediaType\": \"image/jpeg\",\n  \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Create a resource using PUT"},{"location":"/docs/api/1.0/kg/kg-files-api.html#update-a-file","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to a file without having had seen the previous revision of the file, the last revision needs to be passed as a query parameter.\nPUT /v1/files/{org_label}/{project_label}/{resource_id}?rev={previous_rev}\n… where {previous_rev} is the last known revision number for the resource.\nExample\nRequest curl -XPUT -F \"file=@/path/to/myfile2.png;type=image/png\" \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile.jpg?rev=1\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myfile\",\n  \"@type\": \"File\",\n  \"_bytes\": 2670,\n  \"_digest\": {\n    \"_algorithm\": \"SHA-256\",\n    \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n  },\n  \"_filename\": \"myfile2.png\",\n  \"_mediaType\": \"image/png\",\n  \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Update a file"},{"location":"/docs/api/1.0/kg/kg-files-api.html#tag-a-file","text":"Links a file revision to a specific name.\nTagging a file is considered to be an update as well.\nPUT /v1/files/{org_label}/{project_label}/{file_id}/tags?rev={previous_rev}\n  {\n    \"tag\": \"{name}\",\n    \"rev\": {rev}\n  }\n… where\n{previous_rev}: is the last known revision number for the file. {name}: String - label given to the file at specific revision. {rev}: Number - the revision to link the provided {name}.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile/tags?rev=2\" -d \\\n'{\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}'Full source at GitHub Payload {\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myfile\",\n  \"@type\": \"File\",\n  \"_bytes\": 2670,\n  \"_digest\": {\n    \"_algorithm\": \"SHA-256\",\n    \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n  },\n  \"_filename\": \"myfile2.png\",\n  \"_mediaType\": \"image/png\",\n  \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 3,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-10-28T12:15:33.238Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Tag a file"},{"location":"/docs/api/1.0/kg/kg-files-api.html#deprecate-a-file","text":"Locks the file, so no further operations can be performed.\nDeprecating a file is considered to be an update as well.\nDELETE /v1/files/{org_label}/{project_label}?rev={previous_rev}\n… where {previous_rev} is the last known revision number for the file.\nExample\nRequest curl -XDELETE \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile/tags?rev=3\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myfile\",\n  \"@type\": \"File\",\n  \"_bytes\": 2670,\n  \"_digest\": {\n    \"_algorithm\": \"SHA-256\",\n    \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n  },\n  \"_filename\": \"myfile2.png\",\n  \"_mediaType\": \"image/png\",\n  \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-12-28T12:15:33.238Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Deprecate a file"},{"location":"/docs/api/1.0/kg/kg-files-api.html#fetch-a-file-current-version-","text":"GET /v1/files/{org_label}/{project_label}/{file_id}\nExample\nRequest (binary) curl \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile.jpg\"Full source at GitHub Request (metadata) curl -H \"Accept: application/json\" \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile.jpg\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myfile\",\n  \"@type\": \"File\",\n  \"_bytes\": 2670,\n  \"_digest\": {\n    \"_algorithm\": \"SHA-256\",\n    \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n  },\n  \"_filename\": \"myfile2.png\",\n  \"_mediaType\": \"image/png\",\n  \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-12-28T12:15:33.238Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Fetch a file (current version)"},{"location":"/docs/api/1.0/kg/kg-files-api.html#fetch-a-resource-specific-version-","text":"GET /v1/files/{org_label}/{project_label}/{file_id}?rev={rev}\n… where {rev} is the revision number of the file to be retrieved.\nExample\nRequest (binary) curl \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile.jpg?rev=4\"Full source at GitHub Request (metadata) curl -H \"Accept: application/json\" \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile.jpg/rev=4\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myfile\",\n  \"@type\": \"File\",\n  \"_bytes\": 2670,\n  \"_digest\": {\n    \"_algorithm\": \"SHA-256\",\n    \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n  },\n  \"_filename\": \"myfile2.png\",\n  \"_mediaType\": \"image/png\",\n  \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-12-28T12:15:33.238Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Fetch a resource (specific version)"},{"location":"/docs/api/1.0/kg/kg-files-api.html#fetch-a-resource-specific-tag-","text":"GET /v1/files/{org_label}/{project_label}/{file_id}?tag={tag}\n… where {tag} is the tag of the file to be retrieved.\nExample\nRequest (binary) curl \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile.jpg?tag=mytag\"Full source at GitHub Request (metadata) curl -H \"Accept: application/json\" \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile.jpg/tag=mytag\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9\",\n  \"@type\": \"File\",\n  \"_bytes\": 670,\n  \"_digest\": {\n    \"_algorithm\": \"SHA-256\",\n    \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n  },\n  \"_filename\": \"myfile.jpg\",\n  \"_mediaType\": \"image/jpeg\",\n  \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Fetch a resource (specific tag)"},{"location":"/docs/api/1.0/kg/kg-files-api.html#list-files","text":"GET /v1/files/{org_label}/{project_label}?from={from}&size={size}&deprecated={deprecated}&rev={rev}&type={type}&createdBy={createdBy}&updatedBy={updatedBy}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting files based on their deprecation status {rev}: Number - can be used to filter the resulting files based on their revision value {type}: Iri - can be used to filter the resulting files based on their @type value. This parameter can appear multiple times, filtering further the @type value. {createdBy}: Iri - can be used to filter the resulting files based on their creator {updatedBy}: Iri - can be used to filter the resulting files based on the person which performed the last update\nExample\nRequest curl \"https://nexus.example.com/v1/files/myorg/myproj\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 2,\n  \"_results\": [\n    {\n      \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myfile\",\n      \"@type\": \"https://bluebrain.github.io/nexus/vocabulary/File\",\n      \"_bytes\": 670,\n      \"_digest\": {\n        \"_algorithm\": \"SHA-256\",\n        \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n      },\n      \"_filename\": \"myfile.jpg\",\n      \"_mediaType\": \"image/jpeg\",\n      \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/https%3A%2F%2Fbluebrain.github.io%2Fnexus%2Fvocabulary%2Fmyfile\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n      \"_updatedAt\": \"2019-01-28T12:15:33.238Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/mybase/d8848d4c-68f7-4ffd-952f-63a8cbcb86a9\",\n      \"@type\": \"https://bluebrain.github.io/nexus/vocabulary/File\",\n      \"_bytes\": 2670,\n      \"_digest\": {\n        \"_algorithm\": \"SHA-256\",\n        \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n      },\n      \"_filename\": \"myfile2.png\",\n      \"_mediaType\": \"image/png\",\n      \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/https%3A%2F%2Fnexus.example.com%2Fmybase%2Fd8848d4c-68f7-4ffd-952f-63a8cbcb86a9\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_rev\": 1,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n      \"_updatedAt\": \"2019-12-28T12:15:33.238Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n    }\n  ]\n}Full source at GitHub","title":"List files"},{"location":"/docs/api/1.0/kg/kg-resources-api.html","text":"","title":"Resources"},{"location":"/docs/api/1.0/kg/kg-resources-api.html#resources","text":"Generic resources are rooted in the /v1/resources/{org_label}/{project_label}/{schema_id} collection.\nEach resource…\nbelongs to a project identifier by the label {project_label} inside an organization identifier by the label {org_label} it is validated against a schema with id {schema_id}. In case of using _ for this segment, the schema segment reads as irrelevant.\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nAuthorization notes When modifying resources, the caller must have resources/write permissions on the current path of the project or the ancestor paths. When reading resources, the caller must have resources/read permissions on the current path of the project or the ancestor paths.","title":"Resources"},{"location":"/docs/api/1.0/kg/kg-resources-api.html#create-a-resource-using-post","text":"POST /v1/resources/{org_label}/{project_label}/{schema_id}\n  {...}\nThe json payload:\nIf the @id value is found on the payload, this @id will be used. If the @id value is not found on the payload, an @id will be generated as follows: base:{UUID}. The base is the prefix defined on the resource’s project ({project_label}).\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resources/myorg/myproj/myschema\" -d \\\n'{\n  \"@context\": {\n    \"ex\": \"http://example.com/\",\n    \"@vocab\": \"http://example.com/\"\n  },\n  \"@type\": \"ex:Custom\",\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"bool\": false\n}'Full source at GitHub Payload {\n  \"@context\": {\n    \"ex\": \"http://example.com/\",\n    \"@vocab\": \"http://example.com/\"\n  },\n  \"@type\": \"ex:Custom\",\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"bool\": false\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create a resource using POST"},{"location":"/docs/api/1.0/kg/kg-resources-api.html#create-a-resource-using-put","text":"This alternative endpoint to create a resource is useful in case the json payload does not contain an @id but you want to specify one. The @id will be specified in the last segment of the endpoint URI.\nPUT /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}\n  {...}\nNote that if the payload contains an @id different from the {resource_id}, the request will fail.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\" -d \\\n'{\n  \"@context\": {\n    \"ex\": \"http://example.com/\",\n    \"@vocab\": \"http://example.com/\"\n  },\n  \"@type\": \"ex:Custom\",\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"bool\": false\n}'Full source at GitHub Payload {\n  \"@context\": {\n    \"ex\": \"http://example.com/\",\n    \"@vocab\": \"http://example.com/\"\n  },\n  \"@type\": \"ex:Custom\",\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"bool\": false\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create a resource using PUT"},{"location":"/docs/api/1.0/kg/kg-resources-api.html#update-a-resource","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to a resource without having had seen the previous revision of the resource, the last revision needs to be passed as a query parameter.\nPUT /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}?rev={previous_rev}\n  {...}\n… where {previous_rev} is the last known revision number for the resource.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0?rev=1\" -d \\\n'{\n  \"@context\": {\n    \"ex\": \"http://example.com/\",\n    \"@vocab\": \"http://example.com/\"\n  },\n  \"@type\": \"ex:Custom\",\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"bool\": false\n}'Full source at GitHub Payload {\n  \"@context\": {\n    \"ex\": \"http://example.com/\",\n    \"@vocab\": \"http://example.com/\"\n  },\n  \"@type\": \"ex:Custom\",\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"bool\": false\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:56:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Update a resource"},{"location":"/docs/api/1.0/kg/kg-resources-api.html#tag-a-resource","text":"Links a resource revision to a specific name.\nTagging a resource is considered to be an update as well.\nPUT /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}/tags?rev={previous_rev}\n  {\n    \"tag\": \"{name}\",\n    \"rev\": {rev}\n  }\n… where\n{previous_rev}: is the last known revision number for the resource. {name}: String - label given to the resources at specific revision. {rev}: Number - the revision to link the provided {name}.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/tags?rev=2\" -d \\\n'{\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}'Full source at GitHub Payload {\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 3,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:58:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Tag a resource"},{"location":"/docs/api/1.0/kg/kg-resources-api.html#deprecate-a-resource","text":"Locks the resource, so no further operations can be performed. It also deletes the resource from listing/querying results.\nDeprecating a resource is considered to be an update as well.\nDELETE /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}?rev={previous_rev}\n… where {previous_rev} is the last known revision number for the resource.\nExample\nRequest curl -XDELETE -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0?rev=5\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 6,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:02:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Deprecate a resource"},{"location":"/docs/api/1.0/kg/kg-resources-api.html#fetch-a-resource-current-version-","text":"GET /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\"Full source at GitHub Response {\n  \"@context\": [\n    {\n      \"@vocab\": \"http://example.com/\",\n      \"ex\": \"http://example.com/\"\n    },\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"Custom\",\n  \"bool\": false,\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:02:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a resource (current version)"},{"location":"/docs/api/1.0/kg/kg-resources-api.html#fetch-a-resource-specific-version-","text":"GET /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}?rev={rev}\n… where {rev} is the revision number of the resource to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    {\n      \"@vocab\": \"http://example.com/\",\n      \"ex\": \"http://example.com/\"\n    },\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"Custom\",\n  \"bool\": false,\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:02:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a resource (specific version)"},{"location":"/docs/api/1.0/kg/kg-resources-api.html#fetch-a-resource-specific-tag-","text":"GET /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}?tag={tag}\n… where {tag} is the tag of the resource to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0?tag=mytag\"Full source at GitHub Response {\n  \"@context\": [\n    {\n      \"@vocab\": \"http://example.com/\",\n      \"ex\": \"http://example.com/\"\n    },\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"Custom\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a resource (specific tag)"},{"location":"/docs/api/1.0/kg/kg-resources-api.html#list-resources","text":"GET /v1/resources/{org_label}/{project_label}?from={from}&size={size}&deprecated={deprecated}&rev={rev}&type={type}&createdBy={createdBy}&updatedBy={updatedBy}&schema={schema}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting resources based on their deprecation status {rev}: Number - can be used to filter the resulting resources based on their revision value {type}: Iri - can be used to filter the resulting resources based on their @type value. This parameter can appear multiple times, filtering further the @type value. {createdBy}: Iri - can be used to filter the resulting resources based on their creator {updatedBy}: Iri - can be used to filter the resulting resources based on the person which performed the last update {schema}: Iri - can be used to filter the resulting resources based on the conformant schema\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 1,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n      \"@type\": \"http://example.com/Custom\",\n      \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-17T15:02:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    }\n  ]\n}Full source at GitHub","title":"List resources"},{"location":"/docs/api/1.0/kg/kg-resources-api.html#list-resources-belonging-to-a-schema","text":"GET /v1/resources/{org_label}/{project_label}/{schemaId}?from={from}&size={size}&deprecated={deprecated}&rev={rev}&type={type}&createdBy={createdBy}&updatedBy={updatedBy}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting resources based on their deprecation status {rev}: Number - can be used to filter the resulting resources based on their revision value {type}: Iri - can be used to filter the resulting resources based on their @type value. This parameter can appear multiple times, filtering further the @type value. {createdBy}: Iri - can be used to filter the resulting resources based on their creator {updatedBy}: Iri - can be used to filter the resulting resources based on the person which performed the last update\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj/myschema\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 1,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n      \"@type\": \"http://example.com/Custom\",\n      \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-17T15:02:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    }\n  ]\n}Full source at GitHub","title":"List resources belonging to a schema"},{"location":"/docs/api/1.0/iam/index.html","text":"","title":"Identity & Access Management API"},{"location":"/docs/api/1.0/iam/index.html#identity-access-management-api","text":"The IAM API provides operations on three types of resources, realms, permissions and acls.","title":"Identity & Access Management API"},{"location":"/docs/api/1.0/iam/index.html#realms","text":"A realm provides with the necessary information to perform authentication against a certain OIDC provider .\nOperations on realms","title":"Realms"},{"location":"/docs/api/1.0/iam/index.html#permissions","text":"A permission is the basic unit to provide a way to limit applications’ access to sensitive information.\nOperations on permisions","title":"Permissions"},{"location":"/docs/api/1.0/iam/index.html#acls","text":"In order to restrict applications’ access to data by placing restrictions on them, three parameters are important:\npermission: the value used to limit a client (user, group) access to resources. identity: a client identity reference, e.g. a certain user, a group, an anonymous user or someone who is authenticated to a certain realm. path: the location where to apply the restrictions\nAn ACL defines the set of permissions that certain identities have on a concrete path.\nOperations on ACLs","title":"ACLs"},{"location":"/docs/api/1.0/iam/index.html#identities","text":"Identities endpoint can be used to fetch user identities.\nOperations on identities","title":"Identities"},{"location":"/docs/api/1.0/iam/iam-realms-api.html","text":"","title":"Realms"},{"location":"/docs/api/1.0/iam/iam-realms-api.html#realms","text":"Realms are rooted in /v1/realms collection.\nEach realm defines a specific authentication provider. Any of the authentication providers can be used to obtain access tokens that can be used with Nexus.\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nAuthorization notes When modifying realms, the caller must have realms/write permissions on the path /. When reading realms, the caller must have realms/read permissions on the path /.","title":"Realms"},{"location":"/docs/api/1.0/iam/iam-realms-api.html#create-a-realm","text":"This operation creates a realm.\nPUT /v1/realms/{realm}\nThe following examples describe the payload used to create a realm.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/realms/realm1\" \\\n    -d '{\"name\":\"Nexus Dev\",\"openIdConfig\":\"https://nexus.example.com/auth/realms/bbp-test/.well-known/openid-configuration\",\"logo\":\"http://nexus.example.com/logo.png\"}'Full source at GitHub Payload {\n  \"name\": \"Nexus Dev\",\n  \"openIdConfig\": \"https://nexus.example.com/auth/realms/bbp-test/.well-known/openid-configuration\",\n  \"logo\": \"http://nexus.example.com/logo.png\"\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/realms/realm1\",\n  \"@type\": \"Realm\",\n  \"_label\": \"realm1\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub\nThe logo parameter is optional.","title":"Create a realm"},{"location":"/docs/api/1.0/iam/iam-realms-api.html#update-a-realm","text":"This operation updates a realm.\nPUT /v1/realms/{realm}?rev={previous_rev}\n  {...}\nwhere {previous_rev} is the last known revision number for the realm. The json payload should be the same as the one used to create realms.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/realms/realm1?rev=1\" \\\n    -d '{\"name\":\"Nexus Dev\",\"openIdConfig\":\"https://nexus.example.com/auth/realms/bbp-test/.well-known/openid-configuration\",\"logo\":\"http://nexus.example.com/logo.png\"}'Full source at GitHub Payload {\n  \"name\": \"Nexus Dev\",\n  \"openIdConfig\": \"https://nexus.example.com/auth/realms/bbp-test/.well-known/openid-configuration\",\n  \"logo\": \"http://nexus.example.com/logo.png\"\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/realms/realm1\",\n  \"@type\": \"Realm\",\n  \"_label\": \"realm1\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Update a realm"},{"location":"/docs/api/1.0/iam/iam-realms-api.html#delete-a-realm","text":"This operation deletes a realm.\nDELETE /v1/realms/{realm}?rev={previous_rev} {...}\nwhere {previous_rev} is the last known revision number for the realm.\nRequest curl -XDELETE  -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/realms/realm1?rev=2\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/realms/realm1\",\n  \"@type\": \"Realm\",\n  \"_label\": \"realm1\",\n  \"_rev\": 3,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Delete a realm"},{"location":"/docs/api/1.0/iam/iam-realms-api.html#list-realms","text":"Lists all available realms.\nGET /v1/realms\nRequest curl \"https://nexus.example.com/v1/realms\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\"\n  ],\n  \"_total\": 2,\n  \"_results\": [\n    {\n      \"@id\": \"http://nexus.example.com/v1/realms/realm1\",\n      \"@type\": \"Realm\",\n      \"name\": \"Github Dev\",\n      \"openIdConfig\": \"http://nexus.example.com/auth/realms/realm1/.well-known/openid-configuration\",\n      \"_label\": \"realm1\",\n      \"_grantTypes\": [\n        \"password\",\n        \"clientCredentials\",\n        \"refreshToken\",\n        \"authorizationCode\",\n        \"implicit\"\n      ],\n      \"_issuer\": \"http://nexus.example.com/auth/realms/realm1\",\n      \"_authorizationEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/auth\",\n      \"_tokenEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/token\",\n      \"_userInfoEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/userinfo\",\n      \"_endSessionEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/logout\",\n      \"_rev\": 3,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2019-01-22T10:50:47.351Z\",\n      \"_createdBy\": \"http://nexus.example.com/v1/anonymous\",\n      \"_updatedAt\": \"2019-01-22T12:24:13.029Z\",\n      \"_updatedBy\": \"http://nexus.example.com/v1/anonymous\"\n    },\n    {\n      \"@id\": \"http://nexus.example.com/v1/realms/realm2\",\n      \"@type\": \"Realm\",\n      \"name\": \"Realm 2\",\n      \"openIdConfig\": \"http://nexus.example.com/auth/realms/realm2/.well-known/openid-configuration\",\n      \"_label\": \"realm2\",\n      \"_grantTypes\": [\n        \"password\",\n        \"clientCredentials\",\n        \"refreshToken\",\n        \"authorizationCode\",\n        \"implicit\"\n      ],\n      \"_issuer\": \"http://nexus.example.com/auth/realms/realm2\",\n      \"_authorizationEndpoint\": \"http://nexus.example.com/auth/realms/realm2/protocol/openid-connect/auth\",\n      \"_tokenEndpoint\": \"http://nexus.example.com/auth/realms/realm2/protocol/openid-connect/token\",\n      \"_userInfoEndpoint\": \"http://nexus.example.com/auth/realms/realm2/protocol/openid-connect/userinfo\",\n      \"_endSessionEndpoint\": \"http://nexus.example.com/auth/realms/realm2/protocol/openid-connect/logout\",\n      \"_rev\": 1,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2019-01-22T12:22:50.738Z\",\n      \"_createdBy\": \"http://nexus.example.com/v1/anonymous\",\n      \"_updatedAt\": \"2019-01-22T12:22:50.738Z\",\n      \"_updatedBy\": \"http://nexus.example.com/v1/anonymous\"\n    }\n  ]\n}Full source at GitHub","title":"List realms"},{"location":"/docs/api/1.0/iam/iam-realms-api.html#fetch-a-realm-current-version-","text":"GET /v1/realms/{realm}\nExample\nRequest curl \"https://nexus.example.com/v1/realms/realm1\"Full source at GitHub Response {\n  \"@id\": \"http://nexus.example.com/v1/realms/realm1\",\n  \"@type\": \"Realm\",\n  \"name\": \"Github Dev\",\n  \"openIdConfig\": \"http://nexus.example.com/auth/realms/realm1/.well-known/openid-configuration\",\n  \"_label\": \"realm1\",\n  \"_grantTypes\": [\n    \"password\",\n    \"clientCredentials\",\n    \"refreshToken\",\n    \"authorizationCode\",\n    \"implicit\"\n  ],\n  \"_issuer\": \"http://nexus.example.com/auth/realms/realm1\",\n  \"_authorizationEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/auth\",\n  \"_tokenEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/token\",\n  \"_userInfoEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/userinfo\",\n  \"_endSessionEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/logout\",\n  \"_rev\": 3,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2019-01-22T10:50:47.351Z\",\n  \"_createdBy\": \"http://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T12:24:13.029Z\",\n  \"_updatedBy\": \"http://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Fetch a realm (current version)"},{"location":"/docs/api/1.0/iam/iam-realms-api.html#fetch-a-realm-specific-version-","text":"GET /v1/realms/{realm}?rev={rev}\n… where {rev} is the revision number of the resolver to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/realms/realm1?rev=3\"Full source at GitHub Response {\n  \"@id\": \"http://nexus.example.com/v1/realms/realm1\",\n  \"@type\": \"Realm\",\n  \"name\": \"Github Dev\",\n  \"openIdConfig\": \"http://nexus.example.com/auth/realms/realm1/.well-known/openid-configuration\",\n  \"_label\": \"realm1\",\n  \"_grantTypes\": [\n    \"password\",\n    \"clientCredentials\",\n    \"refreshToken\",\n    \"authorizationCode\",\n    \"implicit\"\n  ],\n  \"_issuer\": \"http://nexus.example.com/auth/realms/realm1\",\n  \"_authorizationEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/auth\",\n  \"_tokenEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/token\",\n  \"_userInfoEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/userinfo\",\n  \"_endSessionEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/logout\",\n  \"_rev\": 3,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2019-01-22T10:50:47.351Z\",\n  \"_createdBy\": \"http://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T12:24:13.029Z\",\n  \"_updatedBy\": \"http://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Fetch a realm (specific version)"},{"location":"/docs/api/1.0/iam/authentication.html","text":"","title":"Authentication"},{"location":"/docs/api/1.0/iam/authentication.html#authentication","text":"In order to interact with Nexus, clients need a valid access token. Tokens can be obtained from authentication providers. Please see, realms for documentation on how to find available providers(realms).\nEach realm defines openid-configuration endpoint. From that endpoint, clients can obtain the information necessary to obtain an access token, especially the authorize and token endpoints for the provider.\nPlease see oauth2 documentation for different authentication flows available for different types of applications.","title":"Authentication"},{"location":"/docs/api/1.0/iam/iam-permissions-api.html","text":"","title":"Permissions"},{"location":"/docs/api/1.0/iam/iam-permissions-api.html#permissions","text":"Permissions are rooted in the /v1/permissions collection.\nEach permission is the basic unit to provide a way to limit applications’ access to sensitive information.\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nAuthorization notes When modifying permissions, the caller must have permissions/write permissions on the path /. When reading permissions, the caller must have permissions/read permissions on the path /.","title":"Permissions"},{"location":"/docs/api/1.0/iam/iam-permissions-api.html#minimum-permissions","text":"IAM is configured to include minimum permissions, i.e. permissions that cannot be removed, because they are necessary for correct functioning of Nexus.\nCurrently the following permissions are required:\ndefault permissions for acls, with the exception that everyone should be able to see his own permissions acls/read acls/write default permissions for permissions permissions/read permissions/write default permissions for realms realms/read realms/write generic permissions for full read access to the global event log events/read admin specific permissions projects/read projects/write projects/create organizations/read organizations/write organizations/create KG specific permissions resources/read resources/write resolvers/write views/query views/write schemas/write files/write","title":"Minimum permissions"},{"location":"/docs/api/1.0/iam/iam-permissions-api.html#replace-permissions","text":"This operation overrides the collection of permissions.\nPUT /v1/permissions?rev={previous_rev}\n  {...}\n…where {previous_rev} is the last known revision number for the permissions. If there are only minimum permissions present present, this query parameter can be omitted.\nThe json payload contains the set of permissions to be added.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/permissions?rev=1\" -d \\\n'{\n  \"permissions\": [\n    \"newpermission/read\",\n    \"newpermission/write\"\n  ]\n}'Full source at GitHub Payload {\n  \"permissions\": [\n    \"newpermission/read\",\n    \"newpermission/write\"\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/permissions\",\n  \"@type\": \"Permissions\",\n  \"_rev\": 2,\n  \"_createdAt\": \"2019-01-22T13:15:54.667Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T13:22:03.007Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Replace permissions"},{"location":"/docs/api/1.0/iam/iam-permissions-api.html#subtract-permissions","text":"This operation removes the provided permissions from the existing collection of permissions.\nPATCH /v1/permissions?rev={previous_rev}\n  {...}\n…where {previous_rev} is the last known revision number for the permissions.\nThe json payload contains the set of permissions to be deleted. Example\nRequest curl -XPATCH -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/permissions?rev=2\" -d \\\n'{\n  \"@type\": \"Subtract\",\n  \"permissions\": [\n    \"newpermission/write\"\n  ]\n}'Full source at GitHub Payload {\n  \"@type\": \"Subtract\",\n  \"permissions\": [\n    \"newpermission/write\"\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/permissions\",\n  \"@type\": \"Permissions\",\n  \"_rev\": 1,\n  \"_createdAt\": \"2019-01-22T13:15:54.667Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T13:22:03.007Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Subtract permissions"},{"location":"/docs/api/1.0/iam/iam-permissions-api.html#append-permissions","text":"This operation appends the provided permissions to the existing collection of permissions.\nPATCH /v1/permissions?rev={previous_rev}\n  {...}\n…where {previous_rev} is the last known revision number for the permissions.\nThe json payload contains the set of permissions to be added.\nExample\nRequest curl -XPATCH -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/permissions?rev=3\" -d \\\n'{\n  \"@type\": \"Append\",\n  \"permissions\": [\n    \"newpermission/create\"\n  ]\n}'Full source at GitHub Payload {\n  \"@type\": \"Append\",\n  \"permissions\": [\n    \"newpermission/create\"\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/permissions\",\n  \"@type\": \"Permissions\",\n  \"_rev\": 2,\n  \"_createdAt\": \"2019-01-22T13:15:54.667Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T13:22:03.007Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Append permissions"},{"location":"/docs/api/1.0/iam/iam-permissions-api.html#delete-all-permissions","text":"This operation deletes the all the user defined permission and resets the collection to minimum permissions.\nDELETE /v1/permissions?rev={previous_rev}\n…where {previous_rev} is the last known revision number for the permissions.\nRequest curl -XDELETE \"https://nexus.example.com/v1/permissions?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/permissions\",\n  \"@type\": \"Permissions\",\n  \"_rev\": 3,\n  \"_createdAt\": \"2019-01-22T13:15:54.667Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T13:22:03.007Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Delete all permissions"},{"location":"/docs/api/1.0/iam/iam-permissions-api.html#fetch-permissions-latest-revision-","text":"GET /v1/permissions\nRequest curl \"https://nexus.example.com/v1/permissions\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/permissions\",\n  \"@type\": \"Permissions\",\n  \"permissions\": [\n    \"acls/read\",\n    \"acls/write\",\n    \"events/read\",\n    \"files/write\",\n    \"organizations/create\",\n    \"organizations/read\",\n    \"organizations/write\",\n    \"permissions/read\",\n    \"permissions/write\",\n    \"projects/create\",\n    \"projects/read\",\n    \"projects/write\",\n    \"realms/read\",\n    \"realms/write\",\n    \"resolvers/write\",\n    \"resources/read\",\n    \"resources/write\",\n    \"schemas/write\",\n    \"views/query\",\n    \"views/write\"\n  ],\n  \"_rev\": 10,\n  \"_createdAt\": \"2019-01-22T13:15:54.667Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T13:22:03.007Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Fetch permissions (latest revision)"},{"location":"/docs/api/1.0/iam/iam-permissions-api.html#fetch-permissions-specific-revision-","text":"GET /v1/permissions?rev={rev}\n…where {rev} is the revision number of the permissions to be retrieved.\nRequest curl \"https://nexus.example.com/v1/permissions?rev=1\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/permissions\",\n  \"@type\": \"Permissions\",\n  \"permissions\": [\n    \"acls/read\",\n    \"acls/write\",\n    \"events/read\",\n    \"files/write\",\n    \"organizations/create\",\n    \"organizations/read\",\n    \"organizations/write\",\n    \"permissions/read\",\n    \"permissions/write\",\n    \"projects/create\",\n    \"projects/read\",\n    \"projects/write\",\n    \"realms/read\",\n    \"realms/write\",\n    \"resolvers/write\",\n    \"resources/read\",\n    \"resources/write\",\n    \"schemas/write\",\n    \"views/query\",\n    \"views/write\"\n  ],\n  \"_rev\": 3,\n  \"_createdAt\": \"2019-01-22T13:15:54.667Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T13:22:03.007Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Fetch permissions (specific revision)"},{"location":"/docs/api/1.0/iam/iam-acls-api.html","text":"","title":"Access Control Lists"},{"location":"/docs/api/1.0/iam/iam-acls-api.html#access-control-lists","text":"Access Control Lists are rooted in the /v1/acls collection.\nAn ACL defines the applications’ data access restriction using the following three parameters:\npermission: the value used to limit a client (user, group) access to resources. identity: a client identity reference, e.g. a certain user, a group, an anonymous user or someone who is authenticated to a certain realm. path: the location where to apply the restrictions. Examples of paths are: /, /myorg or /myorg/myproject\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nAuthorization notes When modifying ACLs, the caller must have acls/write permissions on the path where the ACLs are being modified or its ancestors. When reading ACLs, the caller must have acls/read permissions on the path where the ACLs are being modified or its ancestors.","title":"Access Control Lists"},{"location":"/docs/api/1.0/iam/iam-acls-api.html#default-permissions","text":"When IAM starts for the first time, it applies the default permissions to /. This gives all permissions to the anonymous user to enable setting up realms. It is recommended to replace these permissions once user has setup an authorization realm.","title":"Default permissions"},{"location":"/docs/api/1.0/iam/iam-acls-api.html#acls-hierarchy","text":"It is important to know that ACLs are represented in a tree-like structure depending on their path. Imagine the following scenario:\nEach block is identified by a path that contains a list of permissions for a certain identity (identities are color code divided).\nThere is a special set of permissions which restrict the use of the ACLs API:\nacls/read - an auth. token containing an identity with this permission is allowed to fetch a collection of ACL from any other identity. acls/write - an auth. token containing an identity with this permission is allowed to perform the call to the following endpoints: create ACLs, replace ACLs, subtract ACLs, append ACLs and delete ACLs.\nThose permissions need to be present in the current {path} where the API interaction occurs or in any parent path. In other words, they are inherited.\nLet’s clarify this concept with an example from the previous diagram. identity 1 could call the create ACLs endpoint on any {path} while identity 2 could only call the same endpoint for any path child of /myorg (like /myorg/myproj). At the same time, identity 3 could not perform any of the write operations.","title":"ACLs Hierarchy"},{"location":"/docs/api/1.0/iam/iam-acls-api.html#create-acls","text":"This operation creates a collection of ACL on the provided path.\nPUT /v1/acls/{path}\n  {...}\n…where {path} is the target location for the ACL collection.\nThe json payload contains the collection of ACL to set.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/acls/org1\" -d  \\\n'{\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"projects/read\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"projects/read\",\n        \"projects/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"realm\",\n        \"group\": \"some-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"acls/read\",\n        \"acls/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"realm\",\n        \"subject\": \"alice\"\n      }\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"projects/read\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"projects/read\",\n        \"projects/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"some-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"acls/read\",\n        \"acls/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"subject\": \"alice\"\n      }\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/acls/org1\",\n  \"@type\": \"AccessControlList\",\n  \"_rev\": 1,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create ACLs"},{"location":"/docs/api/1.0/iam/iam-acls-api.html#replace-acls","text":"This operation overrides the collection of ACL on the provided path.\nPUT /v1/acls/{path}?rev={previous_rev}\n  {...}\n…where:\n{previous_rev}: Number - the last known revision for the ACL collection. Not required for replacing empty ACLs. {path}: String - is the target location for the ACL collection.\nThe json payload contains the collection of ACL to set.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/acls/org1?rev=1\" -d \\\n'{\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"projects/read\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"projects/read\",\n        \"projects/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"realm\",\n        \"group\": \"some-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"acls/read\",\n        \"acls/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"realm\",\n        \"subject\": \"alice\"\n      }\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"projects/read\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"projects/read\",\n        \"projects/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"some-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"acls/read\",\n        \"acls/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"subject\": \"alice\"\n      }\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/acls/org1\",\n  \"@type\": \"AccessControlList\",\n  \"_rev\": 2,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:07:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Replace ACLs"},{"location":"/docs/api/1.0/iam/iam-acls-api.html#subtract-acls","text":"This operation removes the provided ACL collection from the existing collection of ACL on the provided path.\nPATCH /v1/acls/{path}?rev={previous_rev}\n  {...}\n…where:\n{previous_rev}: Number - the last known revision for the ACL collection. {path}: String - is the target location for the ACL collection.\nThe json payload contains the collection of ACL to remove.\nExample\nRequest curl -XPATCH -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/acls/org1?rev=2\" -d \\\n'{\n  \"@type\": \"Subtract\",\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"projects/read\"\n      ],\n      \"identity\": {\n        \"group\": \"a-group\",\n        \"realm\": \"myrealm\"\n      }\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"@type\": \"Subtract\",\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"projects/read\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/acls/org1\",\n  \"@type\": \"AccessControlList\",\n  \"_rev\": 3,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:10:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Subtract ACLs"},{"location":"/docs/api/1.0/iam/iam-acls-api.html#append-acls","text":"This operation appends the provided ACL collection to the existing collection of ACL on the provided path.\nPATCH /v1/acls/{path}?rev={previous_rev}\n  {...}\n…where:\n{previous_rev}: Number - the last known revision for the ACL collection. Not required for appending to empty ACLs. {path}: String - is the target location for the ACL collection.\nThe json payload contains the collection of ACL to add.\nExample\nRequest curl -XPATCH -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/acls/org1?rev=3\" -d  \\\n'{\n  \"@type\": \"Append\",\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"own\",\n        \"other\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"@type\": \"Append\",\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"own\",\n        \"other\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/acls/org1\",\n  \"@type\": \"nxv:AccessControlList\",\n  \"_rev\": 4,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:15:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Append ACLs"},{"location":"/docs/api/1.0/iam/iam-acls-api.html#delete-acls","text":"This operation deletes the entire collection of ACL on the provided path.\nDELETE /v1/acls/{path}?rev={previous_rev}\n…where:\n{previous_rev}: Number - the last known revision for the ACL collection. {path}: String - is the target location for the ACL collection.\nRequest curl -XDELETE \"https://nexus.example.com/v1/acls/org1?rev=4\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/acls/org1\",\n  \"@type\": \"nxv:AccessControlList\",\n  \"_rev\": 5,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:30:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Delete ACLs"},{"location":"/docs/api/1.0/iam/iam-acls-api.html#fetch-acls","text":"GET /v1/acls/{path}?rev={rev}&self={self}\n…where\n{path}: String - is the target location for the ACL collection. {rev}: Number - the revision of the ACL to be retrieved. This parameter is optional and it defaults to the current revision. {self}: Boolean - if true, only the ACLs containing the identities found on the auth. token are included in the response. If false all the ACLs on the current {path} are included. This parameter is optional and it defaults to true.\nThe ability to use the query parameter self=false depends on whether or not any of the identities found on the auth. token contains the acls:read permission on the provided {path} or its ancestors. For further details, check ACLs hierarchy.\nRequest curl \"https://nexus.example.com/v1/acls/org1?rev=1&self=false\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/acls.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/acls/org1\",\n  \"@type\": \"nxv:AccessControlList\",\n  \"path\": \"/org1\",\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"read\"\n      ],\n      \"identity\": {\n        \"@id\": \"https://nexus.example.com/v1/realms/myrealm/groups/a-group\",\n        \"@type\": \"Group\",\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"read\",\n        \"write\"\n      ],\n      \"identity\": {\n        \"@id\": \"https://nexus.example.com/v1/realms/myrealm/groups/some-group\",\n        \"@type\": \"Group\",\n        \"realm\": \"myrealm\",\n        \"group\": \"some-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"acls/read\",\n        \"acls/write\"\n      ],\n      \"identity\": {\n        \"@id\": \"https://nexus.example.com/v1/realms/myrealm/users/user\",\n        \"@type\": \"User\",\n        \"realm\": \"myrealm\",\n        \"subject\": \"alice\"\n      }\n    }\n  ],\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 1\n}Full source at GitHub","title":"Fetch ACLs"},{"location":"/docs/api/1.0/iam/iam-acls-api.html#list-acls","text":"GET /v1/acls/{path}?ancestors={ancestors}&self={self}\n…where\n{path}: String - is the target location for the ACL collection. {ancestors}: Boolean - if true, the ACLs of the parent {path} are included in the response. If false only the ACLs on the current {path} are included. This parameter is optional and it defaults to false. {self}: Boolean - if true, only the ACLs containing the identities found on the auth. token are included in the response. If false all the ACLs on the current {path} are included. This parameter is optional and it defaults to true.\nThe ability to use the query parameter self=false and ancestors=true depends on whether or not any of the identities found on the auth. token contains the acls:read permission on the provided {path} or its parents. For further details, check ACLs hierarchy.\nThe {path} can contain the special character * which can be read as any.\nLet’s imagine we have the ACLs from the following diagram in place. If we query this endpoint with the path /myorg/*, we are selecting the ACLs defined in /myorg/myproj and myorg/myproj2. Likewise If we use the path /*, we are selecting the ACLs defined in /myorg and myorg2.\nThe following examples illustrate listings from the diagram on the section ACLs hierarchy with the following considerations:\nidentity 1: Is a group called one identity 2: Is a group called two identity 3: Is a user called me The auth. token is linked to the identity 1.\nRequest curl \"https://nexus.example.com/v1/acls/*?ancestors=true&self=true\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\"\n  ],\n  \"_total\": 2,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/acls/myorg/myproj\",\n      \"@type\": \"AccessControlList\",\n      \"acl\": [\n        {\n          \"permissions\": [\n            \"read\",\n            \"write\"\n          ],\n          \"identity\": {\n            \"@id\": \"https://nexus.example.com/v1/realm/groups/two\",\n            \"@type\": \"Group\",\n            \"realm\": \"myrealm\",\n            \"group\": \"two\"\n          }\n        }\n      ],\n      \"_path\": \"/myorg/myproj\",\n      \"_rev\": 1,\n      \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-17T15:05:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/acls/myorg/myproj2\",\n      \"@type\": \"AccessControlList\",\n      \"acl\": [\n        {\n          \"permissions\": [\n            \"read\"\n          ],\n          \"identity\": {\n            \"@id\": \"https://nexus.example.com/v1/realms/myrealm/users/me\",\n            \"@type\": \"User\",\n            \"realm\": \"myrealm\",\n            \"subject\": \"me\"\n          }\n        }\n      ],\n      \"_path\": \"/myorg/myproj2\",\n      \"_rev\": 2,\n      \"_createdAt\": \"2018-09-17T14:00:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/alice\",\n      \"_updatedAt\": \"2018-09-17T14:05:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/alice\"\n    }\n  ]\n}Full source at GitHub Request (with ancestors) curl \"https://nexus.example.com/v1/acls/myorg/*?ancestors=false&self=false\"Full source at GitHub Response (with ancestors) {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\"\n  ],\n  \"_total\": 3,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/acls/\",\n      \"@type\": \"AccessControlList\",\n      \"acl\": [\n        {\n          \"permissions\": [\n            \"acls/write\"\n          ],\n          \"identity\": {\n            \"@id\": \"https://nexus.example.com/v1/realms/myrealm/groups/one\",\n            \"@type\": \"Group\",\n            \"realm\": \"myrealm\",\n            \"group\": \"one\"\n          }\n        }\n      ],\n      \"_path\": \"/\",\n      \"_rev\": 1,\n      \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-17T15:05:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/acls/myorg\",\n      \"@type\": \"AccessControlList\",\n      \"acl\": [\n        {\n          \"permissions\": [\n            \"acls/write\"\n          ],\n          \"identity\": {\n            \"@id\": \"https://nexus.example.com/v1/realms/myrealm/groups/two\",\n            \"@type\": \"Group\",\n            \"realm\": \"myrealm\",\n            \"group\": \"two\"\n          }\n        }\n      ],\n      \"_path\": \"/myorg\",\n      \"_rev\": 2,\n      \"_createdAt\": \"2018-09-17T14:00:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/alice\",\n      \"_updatedAt\": \"2018-09-17T14:05:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/alice\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/acls/myorg2\",\n      \"@type\": \"nxv:AccessControlList\",\n      \"acl\": [\n        {\n          \"permissions\": [\n            \"other\"\n          ],\n          \"identity\": {\n            \"@id\": \"https://nexus.example.com/v1/realms/myrealm/groups/one\",\n            \"@type\": \"Group\",\n            \"realm\": \"myrealm\",\n            \"group\": \"one\"\n          }\n        }\n      ],\n      \"_path\": \"/myorg2\",\n      \"_rev\": 1,\n      \"_createdAt\": \"2018-09-17T14:00:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/alice\",\n      \"_updatedAt\": \"2018-09-17T14:05:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/alice\"\n    }\n  ]\n}Full source at GitHub","title":"List ACLs"},{"location":"/docs/api/1.0/iam/iam-identities.html","text":"","title":"Identities"},{"location":"/docs/api/1.0/iam/iam-identities.html#identities","text":"The /v1/identities endpoint allows user to retrieve the identities that the user has in the platform. Calling the endpoint without a token will result in only one identity returned: Anonymous. Calling it with token should return multiple identities. There are four different types of identities:\nAnonymous - represents anonymous user Authenticated - represents a realm via which the user is authenticated Group - represents a group to which a user belongs in a realm User - represents the user.\nThe following HTTP call can used to retrieve the identities:\nGET /v1/identities\nExample\nRequest curl \"https://nexus.example.com/v1/identities\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"identities\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/anonymous\",\n      \"@type\": \"Anonymous\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/realms/nexusdev/authenticated\",\n      \"@type\": \"Authenticated\",\n      \"realm\": \"nexusdev\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/realms/nexusdev/groups/test-group\",\n      \"@type\": \"Group\",\n      \"group\": \"test-group\",\n      \"realm\": \"nexusdev\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/realms/nexusdev/users/test-user\",\n      \"@type\": \"User\",\n      \"realm\": \"nexusdev\",\n      \"subject\": \"test-user\"\n    }\n  ]\n}Full source at GitHub","title":"Identities"},{"location":"/docs/api/1.0/error-signaling.html","text":"","title":"Error Signaling"},{"location":"/docs/api/1.0/error-signaling.html#error-signaling","text":"The services makes use of the HTTP Status Codes to report the outcome of each API call. The status codes are complemented by a consistent response data model for reporting client and system level failures.\nFormat {\n  \"@context\": {\n    \"@vocab\": \"{{base}}/voc/nexus/core\"\n  },\n  \"code\": \"<a machine readable unique code>\",\n  \"message\": \"<a human readable description of the error>\"\n}Full source at GitHub Example {\n  \"@context\": {\n    \"@vocab\": \"{{base}}/voc/nexus/core\"\n  },\n  \"code\": \"IllegalFilterFormat\",\n  \"message\": \"Unable to parse 'path' as an uri\",\n  \"field\": \"DownField(filter)/DownField(path)\"\n}Full source at GitHub\nWhile the format only specifies _code and _message fields, additional fields may be presented for additional information in certain scenarios.","title":"Error Signaling"},{"location":"/docs/api/1.1/index.html","text":"","title":"1.1 (preview)"},{"location":"/docs/api/1.1/index.html#1-1-preview-","text":"API preview The following documentation applies to the next version of Nexus, which is currently under active development. The API is subject to changes until its official release.\nAll Nexus services expose a RESTful interface over HTTP(S) for synchronous communication. The generally adopted transport format is JSON based, specifically JSON-LD.\nThe services operates on 3 primary types of resources: Organizations, Projects and Resources. Each of them is constrained by a set of SHACL constraints, grouped in what is called a Schema.\nAn organization is used to organize and categorize its sub-resources. A project is rooted on a given organization. It is used to organize and categorize its sub-resources while providing a way to interact with them conveniently. A resource is rooted on a given project. In this level of the hierarchy, multiple types of resources can be found. Each of them has a different purpose: A schema is a resource that defines a set of constraints using SHACL. A resolvers: is a resource that defines the way ids are retrieved inside a project. A views: is a resource that describes the way indexing is applied to certain resources inside a project. A file: is a binary resource.","title":"1.1 (preview)"},{"location":"/docs/api/1.1/index.html#resource-lifecycle","text":"Our services are build using the event sourcing approach. This strategy captures all changes to an application state as a sequence of events.\nAll resources in the system generally follow the very same lifecycle, as depicted in the diagram below. Every interaction with an API resource (creation, updates, state changes) is recorded into the system as revisions.\nData is never removed from the system, but rather is marked as deprecated. Depending on the type of resource, the deprecation flag may have various semantics:\nOrganizations: the resource itself and sub-resources cannot be updated. Views and resolvers contained within this organization will not be considered during indexing and resolution processes. Projects: the resource itself and sub-resources cannot be updated. Views and resolvers contained within this project will not be considered during indexing and resolution processes. Schemas: the resource itself cannot be updated and new data conformant to it cannot be created Resolvers: the resource itself will not be considered during the resolution process Views: the resource itself will not be considered during the indexing process Files: attachments cannot be added/deleted Data: the resource itself cannot be updated\nFuture policies may use this flag to determine if or when the deprecated data may be archived.","title":"Resource Lifecycle"},{"location":"/docs/api/1.1/anatomy.html","text":"","title":"Services anatomy"},{"location":"/docs/api/1.1/anatomy.html#services-anatomy","text":"Nexus services are assembled by a series of components\nWrite Model: This component is executed when a customer performs a write API operation (create, update, tag, …). The business logic is triggered (validation, state computation, Json and Graph manipulations, etc). As a result, an Event gets stored into the Primary Store or a rejection is delivered to the client. Event Stream: This is an asynchronous process that gets triggered as soon as there are elements to be read from the Primary Store. The stream runs several operations that take the stored Events and transform them. The result is then saved into a target index. Write Model: This component gets triggered when a customer performs a read API operation (get, list). A call to the index is performed. The resulting data is transformed if required and delivered to the client.\nThe service structure and workflow has been designed following the CQRS and [Event sourcing](Event sourcing) strategies. The distinction between the write and read model, as well as the use of event streams is a perfect match to CQRS and Event Sourcing.","title":"Services anatomy"},{"location":"/docs/api/1.1/operating-on-resources.html","text":"","title":"Operating on resources"},{"location":"/docs/api/1.1/operating-on-resources.html#operating-on-resources","text":"Access to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nAll resources in the system share a base set of operations. Assuming a nexus deployment at http(s)://nexus.example.com resource address of /v1/{address} the following operations should apply to most (all) resources:","title":"Operating on resources"},{"location":"/docs/api/1.1/operating-on-resources.html#fetch-the-current-revision-of-the-resource","text":"GET /v1/{address}\nStatus Codes\n200 OK: the resource is found and returned successfully 404 Not Found: the resource was not found","title":"Fetch the current revision of the resource"},{"location":"/docs/api/1.1/operating-on-resources.html#fetch-a-specific-revision-of-the-resource","text":"GET /v1/{address}?rev={rev}\n… where {rev} is the revision number, starting at 1.\nStatus Codes\n200 OK: the resource revision is found and returned successfully 404 Not Found: the resource revision was not found","title":"Fetch a specific revision of the resource"},{"location":"/docs/api/1.1/operating-on-resources.html#fetch-a-specific-tag-of-the-resource","text":"GET /v1/{address}?tag={tag}\n… where {tag} is the tag name linked to a certain revision number.\nStatus Codes\n200 OK: the resource tag is found and returned successfully 404 Not Found: the resource tag was not found","title":"Fetch a specific tag of the resource"},{"location":"/docs/api/1.1/operating-on-resources.html#create-a-new-resource","text":"Depending on whether the resource is a singleton resource or is part of a wider collection of resources of the same type the verbs POST and PUT are used.\nFor a singleton resource:\nPUT /v1/{address}\n{...}\nFor a collection resources:\nPOST /v1/{collection_address}\n{...}\n… where {collection_address} is the address of the collection the resource belongs to.\nStatus Codes\n201 Created: the resource was created successfully 400 Bad Request: the resource is not valid or cannot be created at this time 409 Conflict: the resource already exists","title":"Create a new resource"},{"location":"/docs/api/1.1/operating-on-resources.html#update-a-resource","text":"In order to ensure a client does not perform any changes to a resource without having had seen the previous revision of the resource, the last revision needs to be passed as a query parameter.\nPUT /v1/{address}?rev={previous_rev}\n{...}\nStatus Codes\n200 OK: the resource was created successfully 400 Bad Request: the resource is not valid or cannot be updated at this time 409 Conflict: the provided revision is not the current resource revision number","title":"Update a resource"},{"location":"/docs/api/1.1/operating-on-resources.html#tag-a-resource","text":"Links a resource revision to a specific name.\nTagging a resource is considered to be an update as well.\nPUT /v1/{address}/tags?rev={previous_rev}\n{\n   \"tag\": \"{name}\",\n   \"rev\": {rev}\n}\n… where:\n{name}: String - the name given to the resource at specific revision. {rev}: Number - the revision to link the provided {name}.","title":"Tag a resource"},{"location":"/docs/api/1.1/operating-on-resources.html#deprecate-a-resource","text":"Locks the resource, so no further operations can be performed. It also deletes the resource from listing/querying results.\nDeprecating a resource is considered to be an update as well.\nDELETE /v1/{address}?rev={previous_rev}\nStatus Codes\n200 OK: the resource was created successfully 400 Bad Request: the resource is not valid or cannot be deprecated at this time 409 Conflict: the provided revision is not the current resource revision number\nStatus Codes\n200 OK: the resource was created successfully 400 Bad Request: the resource is not valid or cannot be created at this time 409 Conflict: the provided revision is not the current resource revision number","title":"Deprecate a resource"},{"location":"/docs/api/1.1/operating-on-resources.html#listing","text":"GET /v1/{collection_address}?from={from}&size={size}&{deprecated}&rev={rev}&type={type}&createdBy={createdBy}&updatedBy={updatedBy}\n… where all of the query parameters are individually optional.\n{collection_address} Path - the selected collection to list, filter or search; for example: /v1/projects/, /v1/schemas/{org_label}/{project}, {from}: Number - the parameter that describes the offset for the current query; defaults to 0 {size}: Number - the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting resources based on their deprecation status {rev}: Number - can be used to filter the resulting resources based on their revision value {type}: Iri - can be used to filter the resulting resources based on their @type value. This parameter can appear multiple times, filtering further the @type value. {createdBy}: Iri - can be used to filter the resulting resources based on their creator {updatedBy}: Iri - can be used to filter the resulting resources based on the person which performed the last update Note: Some endpoints might not support some of the above query parameters. Please check the specific section of the documentation related tot he endpoint you want to consume for more details.","title":"Listing"},{"location":"/docs/api/1.1/operating-on-resources.html#list-response-format","text":"The response to any search requests follows the described format:\n\"_total\": {hits},\n  \"_maxScore\": {maxScore},\n  \"_next\": \"{next_page_address}\",\n  \"_results\": [\n    {\n      \"@id\": \"{resource_id}\",\n      ...\n    },\n    {\n      \"@id\": \"{resource_id}\",\n      ...\n    }\n  ]\n… where:\n{hits}: Number - the total number of results found for the requested search. {maxScore} Float - the maximum score found across all hits. {resource_id} Iri - the qualified id for one of the results.\nThe relationship _next at the top level offer discovery of more resources, in terms of navigation/pagination.\nThe fields {maxScore} and {score_id} are optional fields and will only be present whenever a q query parameter is provided on the request.","title":"List response format"},{"location":"/docs/api/1.1/admin/index.html","text":"","title":"Admin API"},{"location":"/docs/api/1.1/admin/index.html#admin-api","text":"The Admin API provides operations on two types of resources, organizations and projects. Those resources define the tree-like structure or grouping of the platform","title":"Admin API"},{"location":"/docs/api/1.1/admin/index.html#organizations","text":"The top level resources in the platform. They are used to group and categorize projects.\nOperations on organizations","title":"Organizations"},{"location":"/docs/api/1.1/admin/index.html#projects","text":"The 2nd level resources in the platform. They are used to group and categorize any sub-resources supported by the Knowledge Graph.\nOperations on projects","title":"Projects"},{"location":"/docs/api/1.1/admin/admin-orgs-api.html","text":"","title":"Organizations"},{"location":"/docs/api/1.1/admin/admin-orgs-api.html#organizations","text":"Organizations are rooted in the /v1/orgs path and are used to group and categorize sub-resources.\nAccess to resources in the system depends on the access control list set for them. A caller may need to prove its identity by means of an access token passed in the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about retrieving access tokens.\nAuthorization notes When creating organizations, the caller must have organizations/create permissions on the current path of the organization or /. When updating organizations, the caller must have organizations/write permissions on the current path of the organization or /. When reading organizations, the caller must have organizations/read permissions on the current path of the organization or /.","title":"Organizations"},{"location":"/docs/api/1.1/admin/admin-orgs-api.html#create-an-organization","text":"PUT /v1/orgs/{label}\n  {...}\n…where {label} is the user friendly name assigned to this organization. The semantics of the label should be consistent with the type of data provided by its sub-resources, since it’ll be a part of the sub-resources’ URI.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/orgs/myorg\" -d \\\n'{\n  \"description\": \"My organization\"\n}'Full source at GitHub Payload {\n  \"description\": \"My organization\"\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/orgs/myorg\",\n  \"@type\": \"Organization\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create an organization"},{"location":"/docs/api/1.1/admin/admin-orgs-api.html#update-an-organization","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to an organization without having had seen the previous revision of the organization, the last revision needs to be passed as a query parameter.\nPUT /v1/orgs/{label}?rev={previous_rev}\n  {...}\n… where\n{previous_rev}: Number - is the last known revision for the organization. {label}: String - is the user friendly name that identifies this organization.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/orgs/myorg?rev=1\" -d \\\n'{\n  \"description\": \"A new description\"\n}'Full source at GitHub Payload {\n  \"description\": \"My organization\"\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/orgs/myorg\",\n  \"@type\": \"Organization\",\n  \"description\": \"My organization\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Update an organization"},{"location":"/docs/api/1.1/admin/admin-orgs-api.html#deprecate-an-organization","text":"Locks the organization, so that no further operations can be performed on the resource or on the child resources.\nDeprecating an organization is considered to be an update as well.\nDELETE /v1/orgs/{label}?rev={previous_rev}\n… where\n{label}: String - is the user friendly name that identifies this organization. {previous_rev}: Number - is the last known revision for the organization.\nExample\nRequest curl -XDELETE \"https://nexus.example.com/v1/orgs/myorg/tags?rev=3\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/orgs/myorg\",\n  \"@type\": \"Organization\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Deprecate an organization"},{"location":"/docs/api/1.1/admin/admin-orgs-api.html#fetch-an-organization-current-version-","text":"GET /v1/orgs/{label}\n…where {label} is the user friendly String name that identifies this organization.\nExample\nRequest curl \"https://nexus.example.com/v1/orgs/myorg\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/orgs/myorg\",\n  \"@type\": \"Organization\",\n  \"description\": \"My Organization\",\n  \"_label\": \"myorg\",\n  \"_uuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch an organization (current version)"},{"location":"/docs/api/1.1/admin/admin-orgs-api.html#fetch-an-organization-specific-version-","text":"GET /v1/orgs/{label}?rev={rev}\n… where\n{rev}: Number - is the revision of the organization to be retrieved. {label}: String - is the user friendly name that identifies this organization.\nExample\nRequest curl \"https://nexus.example.com/v1/orgs/myorg?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/orgs/myorg\",\n  \"@type\": \"Organization\",\n  \"description\": \"My Organization\",\n  \"_label\": \"myorg\",\n  \"_uuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch an organization (specific version)"},{"location":"/docs/api/1.1/admin/admin-orgs-api.html#list-organizations","text":"GET /v1/orgs?from={from}&size={size}&deprecated={deprecated}&rev={rev}&type={type}&createdBy={createdBy}&updatedBy={updatedBy}&label={label}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting organizations based on their deprecation status {rev}: Number - can be used to filter the resulting organizations based on their revision value {type}: Iri - can be used to filter the resulting organizations based on their @type value. This parameter can appear multiple times, filtering further the @type value. {createdBy}: Iri - can be used to filter the resulting organizations based on their creator {updatedBy}: Iri - can be used to filter the resulting organizations based on the person which performed the last update {label}: String - can be used to filter the resulting organizations based on its label. E.g.: label=my will match any organization’s label that contains the string my.\nExample\nRequest curl \"https://nexus.example.com/v1/orgs\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 2,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/orgs/myorg\",\n      \"@type\": \"Organization\",\n      \"description\": \"My Organization\",\n      \"_label\": \"myorg\",\n      \"_uuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/orgs/myorg2\",\n      \"@type\": \"Organization\",\n      \"description\": \"My Second Organization\",\n      \"_label\": \"myorg2\",\n      \"_uuid\": \"b42e5206-f81e-430b-808d-5dac2599153d\",\n      \"_rev\": 1,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2019-01-14T09:29:39.416Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2019-01-14T09:29:39.416Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    }\n  ]\n}Full source at GitHub","title":"List organizations"},{"location":"/docs/api/1.1/admin/admin-orgs-api.html#organization-server-sent-events","text":"This endpoint allows clients to receive automatic updates from the organizations in a streaming fashion.\nGET /v1/orgs/events\nwhere Last-Event-Id is an optional HTTP Header that identifies the last consumed organization event. It can be used for cases when a client does not want to retrieve the whole event stream, but to start after a specific event.\nThe response contains a series of organization events, represented in the following way\ndata:{payload}\nevent:{type}\nid:{id}\nwhere…\n{payload}: Json - is the actual payload of the current organization {type}: String - is a type identifier for the current organization. Possible types are: OrganizationCreated, OrganizationUpdated and OrganizationDeprecated {id}: String - is the identifier of the organization event. It can be used in the Last-Event-Id HTTP Header\nExample\nRequest curl \"https://nexus.example.com/v1/orgs/events\"Full source at GitHub Response data:{\"@context\":[\"https://bluebrain.github.io/nexus/contexts/admin.json\",\"https://bluebrain.github.io/nexus/contexts/resource.json\"],\"@type\":\"OrganizationCreated\",\"description\":\"l3dd4frl6axlueb organization\",\"_uuid\":\"3a793ee4-e973-4181-98f5-1eb3ac87d6f6\",\"_label\":\"l3dd4frl6axlueb\",\"_rev\":1,\"_instant\":\"2019-06-14T11:58:46.509Z\",\"_subject\":\"http://nexus.example.com/v1/realms/nexusdev/users/test\"}\nevent:OrganizationCreated\nid:c3abebd0-8e9b-11e9-81dd-338cb949d9cb\n\ndata:{\"@context\":[\"https://bluebrain.github.io/nexus/contexts/admin.json\",\"https://bluebrain.github.io/nexus/contexts/resource.json\"],\"@type\":\"OrganizationCreated\",\"description\":\"43rl0svyk8fcfki organization\",\"_uuid\":\"d8ed8e9f-6d4a-4cf7-8f9f-9ed6ed62838c\",\"_label\":\"43rl0svyk8fcfki\",\"_rev\":1,\"_instant\":\"2019-06-14T11:58:53.744Z\",\"_subject\":\"http://nexus.example.com/v1/realms/nexusdev/users/test\"}\nevent:OrganizationCreated\nid:c7fbe500-8e9b-11e9-81dd-338cb949d9cb\n\ndata:{\"@context\":[\"https://bluebrain.github.io/nexus/contexts/admin.json\",\"https://bluebrain.github.io/nexus/contexts/resource.json\"],\"@type\":\"OrganizationUpdated\",\"description\":\"43rl0svyk8fcfki organization update 1\",\"_uuid\":\"d8ed8e9f-6d4a-4cf7-8f9f-9ed6ed62838c\",\"_label\":\"43rl0svyk8fcfki\",\"_rev\":2,\"_instant\":\"2019-06-14T11:58:59.458Z\",\"_subject\":\"http://nexus.example.com/v1/realms/nexusdev/users/test\"}\nevent:OrganizationUpdated\nid:cb680de0-8e9b-11e9-81dd-338cb949d9cb\n\ndata:{\"@context\":[\"https://bluebrain.github.io/nexus/contexts/admin.json\",\"https://bluebrain.github.io/nexus/contexts/resource.json\"],\"@type\":\"OrganizationUpdated\",\"description\":\"43rl0svyk8fcfki organization update 2\",\"_uuid\":\"d8ed8e9f-6d4a-4cf7-8f9f-9ed6ed62838c\",\"_label\":\"43rl0svyk8fcfki\",\"_rev\":3,\"_instant\":\"2019-06-14T11:59:00.057Z\",\"_subject\":\"http://nexus.example.com/v1/realms/nexusdev/users/test\"}\nevent:OrganizationUpdated\nid:cbc6a8a0-8e9b-11e9-81dd-338cb949d9cb\n        \n\ndata:{\"@context\":[\"https://bluebrain.github.io/nexus/contexts/admin.json\",\"https://bluebrain.github.io/nexus/contexts/resource.json\"],\"@type\":\"OrganizationDeprecated\",\"_uuid\":\"eb50c21d-3dc7-45e4-94ed-5b2a62f44907\",\"_rev\":2,\"_instant\":\"2019-06-14T11:59:05.790Z\",\"_subject\":\"http://nexus.example.com/v1/realms/nexusdev/users/test\"}\nevent:OrganizationDeprecated\nid:cf2d2c30-8e9b-11e9-81dd-338cb949d9cbFull source at GitHub","title":"Organization Server Sent Events"},{"location":"/docs/api/1.1/admin/admin-projects-api.html","text":"","title":"Projects"},{"location":"/docs/api/1.1/admin/admin-projects-api.html#projects","text":"Projects belong to an organization and are rooted in the corresponding /v1/projects/{org_label} path. The purposes of projects are:\nGroup and categorize sub-resources. Define settings that apply for operations on all sub-resources. Provide isolation from resources inside other projects. This behavior can be changed by defining resolvers\nAccess to resources in the system depends on the access control list set for them. A caller may need to prove its identity by means of an access token passed in the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about retrieving access tokens.\nAuthorization notes When creating projects, the caller must have projects/create permissions on the current path of the project or the ancestor paths. When updating projects, the caller must have projects/write permissions on the current path of the project or the ancestor paths. When reading projects, the caller must have projects/read permissions on the current path of the project or the ancestor paths.","title":"Projects"},{"location":"/docs/api/1.1/admin/admin-projects-api.html#project-payload","text":"{\n  \"description\": \"{description}\",\n  \"base\": \"{base}\",\n  \"vocab\": \"{vocab}\",\n  \"apiMappings\": [\n   {\n      \"prefix\": \"{prefix}\",\n      \"namespace\": \"{namespace}\"\n    },\n    ...\n  ]\n}\nwhere…\n{description}: String - an optional description for this project. {base}: IRI - is going to be used as a curie in the generation of the @id children resources. E.g.: Let base be http://example.com/. When a resource is created and no @id is present in the payload, the platform will generate an @id which will look like http://example.com/{UUID}. This field is optional and will default to {{base}}/v1/resources/{org_label}/{project_label}/_/. {vocab}: IRI - is going to be used as a curie prefix for all unqualified predicates in children resources. E.g. if the vocab is set to https://schema.org/, when a field a resource is created and a field name is present in the payload, it will be expanded to http://schema.org/name by the system during indexing and fetch operations. This field is optional and will default to {{base}}/v1/vocabs/{org_label}/{project_label}/. {apiMappings}: Json object - provides a convinient way to deal with URIs when performing operations on a sub-resource. This field is optional.","title":"Project payload"},{"location":"/docs/api/1.1/admin/admin-projects-api.html#api-mappings","text":"The apiMappings Json object array maps each prefix to its namespace so that curies on children endpoints can be used.\nHaving the following apiMappings:\n{\n  \"apiMappings\": [\n   {\n      \"prefix\": \"{prefix}\",\n      \"namespace\": \"{namespace}\"\n    },\n    { ... }\n  ]\n}\nwhere…\n{prefix}: String - the left hand side of a curie. It has certain constrains. {namespace}: IRI - the right hand side of a curie. It has certain constrains (irelative-ref).\nLet’s see an example:\njson { \"apiMappings\": [ { \"prefix\": \"person\", \"namespace\": \"http://example.com/some/person\" }, { \"prefix\": \"schemas\", \"namespace\": \"https://bluebrainnexus.io/schemas/\" } ] }\nThe previous payload allows us to create a schema using the following endpoints:\n/v1/schemas/{org_label}/{project_label}/person. The @id of the resulting schema will be http://example.com/some/person /v1/schemas/{org_label}/{project_label}/schema:other. The @id of the resulting schema will be https://bluebrainnexus.io/schemas/other","title":"API Mappings"},{"location":"/docs/api/1.1/admin/admin-projects-api.html#create-a-project","text":"PUT /v1/projects/{org_label}/{label}\n  {...}\n…where {label} is the user friendly name assigned to this project. The semantics of the label should be consistent with the type of data provided by its sub-resources, since it’ll be a part of the sub-resources’ URI.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/orgs/myorg/myproject\" -d \\\n'{\n  \"description\": \"example project creation\",\n  \"base\": \"https://nexus.example.com/v1/projects/myorg/myproject/\",\n  \"vocab\": \"https://schema.org/\",\n  \"apiMappings\": [\n    {\n      \"prefix\": \"person\",\n      \"namespace\": \"http://example.com/some/person\"\n    },\n    {\n      \"prefix\": \"schemas\",\n      \"namespace\": \"https://bluebrain.github.io/nexus/schemas/\"\n    },\n    {\n      \"prefix\": \"ex\",\n      \"namespace\": \"http://example.com/\"\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"description\": \"example project creation\",\n  \"base\": \"https://nexus.example.com/v1/myorg/myproject/\",\n  \"vocab\": \"https://schema.org/\",\n  \"apiMappings\": [\n    {\n      \"prefix\": \"person\",\n      \"namespace\": \"http://example.com/some/person\"\n    },\n    {\n      \"prefix\": \"schemas\",\n      \"namespace\": \"https://bluebrain.github.io/nexus/schemas/\"\n    },\n    {\n      \"prefix\": \"ex\",\n      \"namespace\": \"http://example.com/\"\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n  \"@type\": \"Project\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create a project"},{"location":"/docs/api/1.1/admin/admin-projects-api.html#update-a-project","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to a project without having had seen the previous revision of the project, the last revision needs to be passed as a query parameter.\nPUT /v1/projects/{org_label}/{label}?rev={previous_rev}\n  {...}\n… where\n{previous_rev}: Number - the last known revision for the organization. {label}: String - the user friendly name that identifies this project.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/projects/myorg/myproject?rev=1\" -d \\\n'{\n  \"description\": \"example project creation\",\n  \"base\": \"https://nexus.example.com/v1/myorg/myproject/\",\n  \"vocab\": \"https://schema.org/\",\n  \"apiMappings\": [\n    {\n      \"prefix\": \"person\",\n      \"namespace\": \"http://example.com/some/person\"\n    },\n    {\n      \"prefix\": \"schemas\",\n      \"namespace\": \"https://bluebrain.github.io/nexus/schemas/\"\n    },\n    {\n      \"prefix\": \"ex\",\n      \"namespace\": \"http://example.com/\"\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"description\": \"example project creation\",\n  \"base\": \"https://nexus.example.com/v1/myorg/myproject/\",\n  \"vocab\": \"https://schema.org/\",\n  \"apiMappings\": [\n    {\n      \"prefix\": \"person\",\n      \"namespace\": \"http://example.com/some/person\"\n    },\n    {\n      \"prefix\": \"schemas\",\n      \"namespace\": \"https://bluebrain.github.io/nexus/schemas/\"\n    },\n    {\n      \"prefix\": \"ex\",\n      \"namespace\": \"http://example.com/\"\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n  \"@type\": \"Project\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Update a project"},{"location":"/docs/api/1.1/admin/admin-projects-api.html#deprecate-a-project","text":"Locks the project, so no further operations can be performed on it or on the children resources.\nDeprecating a project is considered to be an update as well.\nDELETE /v1/projects/{org_label}/{label}?rev={previous_rev}\n… where\n{previous_rev}: Number - the last known revision for the organization. {label}: String - the user friendly name that identifies this project.\nExample\nRequest curl -XDELETE \"https://nexus.example.com/v1/projects/myorg/myproject?rev=3\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n  \"@type\": \"Project\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:30:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Deprecate a project"},{"location":"/docs/api/1.1/admin/admin-projects-api.html#fetch-a-project-current-version-","text":"GET /v1/projects/{org_label}/{label}\n…where {label} is the user friendly name that identifies this project.\nExample\nRequest curl \"https://nexus.example.com/v1/projects/myorg/myproject\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n  \"@type\": \"Project\",\n  \"base\": \"https://nexus.example.com/v1/myorg/myproject/\",\n  \"vocab\": \"https://schema.org/\",\n  \"apiMappings\": [\n    {\n      \"prefix\": \"person\",\n      \"namespace\": \"http://example.com/some/person\"\n    },\n    {\n      \"prefix\": \"schemas\",\n      \"namespace\": \"https://bluebrain.github.io/nexus/schemas/\"\n    },\n    {\n      \"prefix\": \"ex\",\n      \"namespace\": \"http://example.com/\"\n    }\n  ],\n  \"_label\": \"myproject\",\n  \"_organizationLabel\": \"myorg\",\n  \"_organizationUuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n  \"_uuid\": \"e622745d-5eea-4dc5-8318-58a3dd4101ff\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:30:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a project (current version)"},{"location":"/docs/api/1.1/admin/admin-projects-api.html#fetch-a-project-specific-version-","text":"GET /v1/projects/{org_label}/{label}?rev={rev}\n…where\n{label}: String - the user friendly name that identifies this project. {rev}: Number - the revision of the project to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/projects/myorg/myproject?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n  \"@type\": \"Project\",\n  \"base\": \"https://nexus.example.com/v1/myorg/myproject/\",\n  \"vocab\": \"https://schema.org/\",\n  \"apiMappings\": [\n    {\n      \"prefix\": \"person\",\n      \"namespace\": \"http://example.com/some/person\"\n    },\n    {\n      \"prefix\": \"schemas\",\n      \"namespace\": \"https://bluebrain.github.io/nexus/schemas/\"\n    },\n    {\n      \"prefix\": \"ex\",\n      \"namespace\": \"http://example.com/\"\n    }\n  ],\n  \"_label\": \"myproject\",\n  \"_organizationLabel\": \"myorg\",\n  \"_organizationUuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n  \"_uuid\": \"e622745d-5eea-4dc5-8318-58a3dd4101ff\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:30:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a project (specific version)"},{"location":"/docs/api/1.1/admin/admin-projects-api.html#list-projects","text":"GET /v1/projects?from={from}&size={size}&deprecated={deprecated}&rev={rev}&type={type}&createdBy={createdBy}&updatedBy={updatedBy}&label=label\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting projects based on their deprecation status {rev}: Number - can be used to filter the resulting projects based on their revision value {type}: Iri - can be used to filter the resulting projects based on their @type value. This parameter can appear multiple times, filtering further the @type value. {createdBy}: Iri - can be used to filter the resulting projects based on their creator {updatedBy}: Iri - can be used to filter the resulting projects based on the person which performed the last update {label}: String - can be used to filter the resulting projects based on its label. E.g.: label=my will match any project’s label that contains the string my. label='my' will match any project where label is equal to my.\nExample\nRequest curl \"https://nexus.example.com/v1/projects\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 1,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n      \"@type\": \"Project\",\n      \"base\": \"http://nexus.example.com/\",\n      \"vocab\": \"http://schema.org/\",\n      \"apiMappings\": [\n        {\n          \"namespace\": \"http://schema.org/\",\n          \"prefix\": \"schema\"\n        }\n      ],\n      \"_uuid\": \"e622745d-5eea-4dc5-8318-58a3dd4101ff\",\n      \"_label\": \"myproject\",\n      \"_organizationUuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n      \"_organizationLabel\": \"myorg\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T10:30:00.801Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    }\n  ]\n}Full source at GitHub","title":"List projects"},{"location":"/docs/api/1.1/admin/admin-projects-api.html#list-projects-belonging-to-an-organization","text":"GET /v1/projects/{org_label}?from={from}&size={size}&deprecated={deprecated}&rev={rev}&type={type}&createdBy={createdBy}&updatedBy={updatedBy}&label=label\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting projects based on their deprecation status {rev}: Number - can be used to filter the resulting projects based on their revision value {type}: Iri - can be used to filter the resulting projects based on their @type value. This parameter can appear multiple times, filtering further the @type value. {createdBy}: Iri - can be used to filter the resulting projects based on their creator {updatedBy}: Iri - can be used to filter the resulting projects based on the person which performed the last update {label}: String - can be used to filter the resulting projects based on its label. E.g.: label=my will match any project’s label that contains the string my.\nExample\nRequest curl \"https://nexus.example.com/v1/projects/myorg\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/admin.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 1,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n      \"@type\": \"Project\",\n      \"base\": \"http://nexus.example.com/\",\n      \"vocab\": \"http://schema.org/\",\n      \"apiMappings\": [\n        {\n          \"namespace\": \"http://schema.org/\",\n          \"prefix\": \"schema\"\n        }\n      ],\n      \"_uuid\": \"e622745d-5eea-4dc5-8318-58a3dd4101ff\",\n      \"_label\": \"myproject\",\n      \"_organizationUuid\": \"bc0eba71-2a7f-40e8-ac90-5c97fc6f37d7\",\n      \"_organizationLabel\": \"myorg\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T10:30:00.801Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    }\n  ]\n}Full source at GitHub","title":"List projects belonging to an organization"},{"location":"/docs/api/1.1/admin/admin-projects-api.html#project-server-sent-events","text":"This endpoint allows clients to receive automatic updates from the projects in a streaming fashion.\nGET /v1/projects/events\nwhere Last-Event-Id is an optional HTTP Header that identifies the last consumed project event. It can be used for cases when a client does not want to retrieve the whole event stream, but to start after a specific event.\nThe response contains a series of project events, represented in the following way\ndata:{payload}\nevent:{type}\nid:{id}\nwhere…\n{payload}: Json - is the actual payload of the current project {type}: String - is a type identifier for the current project. Possible types are: ProjectCreated, ProjectUpdated and ProjectDeprecated {id}: String - is the identifier of the project event. It can be used in the Last-Event-Id HTTP Header\nExample\nRequest curl \"https://nexus.example.com/v1/projects/events\"Full source at GitHub Response data:{\"@context\":[\"https://bluebrain.github.io/nexus/contexts/admin.json\",\"https://bluebrain.github.io/nexus/contexts/resource.json\"],\"@type\":\"ProjectCreated\",\"description\":\"rel07bd3x7ux7xy/3g2tp5jdtj2bii7 project\",\"base\":\"http://nexus.example.com/v1/resources/rel07bd3x7ux7xy/3g2tp5jdtj2bii7/_/\",\"vocab\":\"http://nexus.example.com/v1/vocabs/rel07bd3x7ux7xy/3g2tp5jdtj2bii7/\",\"apiMappings\":[{\"prefix\":\"nxv\",\"namespace\":\"https://bbp-nexus.epfl.ch/vocabs/nexus/core/terms/v0.1.0/\"},{\"prefix\":\"person\",\"namespace\":\"https://shapes-registry.org/commons/person\"}],\"_uuid\":\"0ccd8bb7-e2d6-468b-bf35-2d01f3ddaedf\",\"_label\":\"3g2tp5jdtj2bii7\",\"_organizationUuid\":\"cfd51482-294f-4f52-be78-8edce0775c42\",\"_organizationLabel\":\"rel07bd3x7ux7xy\",\"_rev\":1,\"_instant\":\"2019-06-14T11:59:14.684Z\",\"_subject\":\"http://nexus.example.com/v1/realms/nexusdev/users/test\"}\nevent:ProjectCreated\nid:d47715c0-8e9b-11e9-81dd-338cb949d9cb\n\ndata:{\"@context\":[\"https://bluebrain.github.io/nexus/contexts/admin.json\",\"https://bluebrain.github.io/nexus/contexts/resource.json\"],\"@type\":\"ProjectUpdated\",\"description\":\"rel07bd3x7ux7xy/3g2tp5jdtj2bii7 project update 1\",\"base\":\"http://nexus.example.com/v1/tmynbseodckawgit/\",\"vocab\":\"http://nexus.example.com/v1/iwspaxkdbrpfsbni/\",\"apiMappings\":[{\"prefix\":\"nxv\",\"namespace\":\"https://bbp-nexus.epfl.ch/vocabs/nexus/core/terms/v0.1.0/\"},{\"prefix\":\"person\",\"namespace\":\"https://shapes-registry.org/commons/person\"},{\"prefix\":\"xsd\",\"namespace\":\"http://www.w3.org/2001/XMLSchema#\"}],\"_uuid\":\"0ccd8bb7-e2d6-468b-bf35-2d01f3ddaedf\",\"_label\":\"3g2tp5jdtj2bii7\",\"_rev\":2,\"_instant\":\"2019-06-14T11:59:19.544Z\",\"_subject\":\"http://nexus.example.com/v1/realms/nexusdev/users/test\"}\nevent:ProjectUpdated\nid:d7602bf0-8e9b-11e9-81dd-338cb949d9cb\n\ndata:{\"@context\":[\"https://bluebrain.github.io/nexus/contexts/admin.json\",\"https://bluebrain.github.io/nexus/contexts/resource.json\"],\"@type\":\"ProjectUpdated\",\"description\":\"rel07bd3x7ux7xy/3g2tp5jdtj2bii7 project update 2\",\"base\":\"http://nexus.example.com/v1/wwpeuyhtqbsesfxl/\",\"vocab\":\"http://nexus.example.com/v1/xqbfndagddjerwwc/\",\"apiMappings\":[{\"prefix\":\"nxv\",\"namespace\":\"https://bbp-nexus.epfl.ch/vocabs/nexus/core/terms/v0.1.0/\"},{\"prefix\":\"person\",\"namespace\":\"https://shapes-registry.org/commons/person\"},{\"prefix\":\"xsd\",\"namespace\":\"http://www.w3.org/2001/XMLSchema#\"}],\"_uuid\":\"0ccd8bb7-e2d6-468b-bf35-2d01f3ddaedf\",\"_label\":\"3g2tp5jdtj2bii7\",\"_rev\":3,\"_instant\":\"2019-06-14T11:59:20.094Z\",\"_subject\":\"http://nexus.example.com/v1/realms/nexusdev/users/test\"}\nevent:ProjectUpdated\nid:d7b66240-8e9b-11e9-81dd-338cb949d9cb\n\ndata:{\"@context\":[\"https://bluebrain.github.io/nexus/contexts/admin.json\",\"https://bluebrain.github.io/nexus/contexts/resource.json\"],\"@type\":\"ProjectDeprecated\",\"_uuid\":\"0ccd8bb7-e2d6-468b-bf35-2d01f3ddaedf\",\"_rev\":4,\"_instant\":\"2019-06-14T11:59:23.722Z\",\"_subject\":\"http://nexus.example.com/v1/realms/nexusdev/users/test\"}\nevent:ProjectDeprecated\nid:d9de7260-8e9b-11e9-81dd-338cb949d9cbFull source at GitHub","title":"Project Server Sent Events"},{"location":"/docs/api/1.1/kg/index.html","text":"","title":"Knowledge Graph API"},{"location":"/docs/api/1.1/kg/index.html#knowledge-graph-api","text":"","title":"Knowledge Graph API"},{"location":"/docs/api/1.1/kg/index.html#schemas","text":"A schema is a resource which defines a set of rules and constrains using SHACL.\nOperations on schemas","title":"Schemas"},{"location":"/docs/api/1.1/kg/index.html#resolvers","text":"A resolver is a resource which defines the way ids are retrieved inside a project.\nOperations on resolvers","title":"Resolvers"},{"location":"/docs/api/1.1/kg/index.html#views","text":"A view is a resource which defines the way indexing is applied to certain resources inside a project.\nOperations on views","title":"Views"},{"location":"/docs/api/1.1/kg/index.html#storages","text":"A storage is a resource which represents a backend where files are stored.\nOperations on storages","title":"Storages"},{"location":"/docs/api/1.1/kg/index.html#files","text":"A file is a binary attachment resource.\nOperations on files","title":"Files"},{"location":"/docs/api/1.1/kg/index.html#resources","text":"A resource is the most generic entity on the Knowledge Graph. Resources can be schemas, resolvers, views, storages, files or data.\nOperations on resources","title":"Resources"},{"location":"/docs/api/1.1/kg/kg-schemas-api.html","text":"","title":"Schemas"},{"location":"/docs/api/1.1/kg/kg-schemas-api.html#schemas","text":"Schemas are rooted in the /v1/schemas/{org_label}/{project_label} collection. They define a set of rules and constraints using SHACL. Once those schemas are present, other resources can be created against them. Those resources won’t be successfully created unless they match the required constraints defined on the schema.\nEach schema…\nbelongs to a project identifier by the label {project_label} inside an organization identifier by the label {org_label} it is validated against the shacl schema (version 20170720).\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nAuthorization notes When modifying schemas, the caller must have schemas/write permissions on the current path of the project or the ancestor paths. When reading schemas, the caller must have resources/read permissions on the current path of the project or the ancestor paths.","title":"Schemas"},{"location":"/docs/api/1.1/kg/kg-schemas-api.html#create-a-schema-using-post","text":"POST /v1/schemas/{org_label}/{project_label}\n  {...}\nThe json payload:\nIf the @id value is found on the payload, this @id will be used. If the @id value is not found on the payload, an @id will be generated as follows: base:{UUID}. The base is the prefix defined on the resource’s project ({project_label}).\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/schemas/myorg/myproj\" -d \\\n'{\n  \"@context\": {\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n      \"ex\": \"http://example.com/\"\n  },\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"@context\": {\n    \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n    \"ex\": \"http://example.com/\"\n  },\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"Schema\",\n  \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl-20170720.ttl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create a schema using POST"},{"location":"/docs/api/1.1/kg/kg-schemas-api.html#create-a-schema-using-put","text":"This alternative endpoint to create a schema is useful in case the json payload does not contain an @id but you want to specify one. The @id will be specified in the last segment of the endpoint URI.\nPUT /v1/schemas/{org_label}/{project_label}/{schema_id}\n  {...}\nNote that if the payload contains an @id different from the {schema_id}, the request will fail.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\" -d \\\n'{\n  \"@context\":  {\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n      \"ex\": \"http://example.com/\"\n  },\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"@context\": {\n    \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n    \"ex\": \"http://example.com/\"\n  },\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"Schema\",\n  \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl-20170720.ttl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create a schema using PUT"},{"location":"/docs/api/1.1/kg/kg-schemas-api.html#update-a-schema","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to a resource without having had seen the previous revision of the resource, the last revision needs to be passed as a query parameter.\nPUT /v1/schemas/{org_label}/{project_label}/{schema_id}?rev={previous_rev}\n  {...}\n… where {previous_rev} is the last known revision number for the schema.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c?rev=1\" -d \\\n'{\n  \"@context\": {\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n      \"ex\": \"http://example.com/\"\n  },\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"@context\": {\n    \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n    \"ex\": \"http://example.com/\"\n  },\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"Schema\",\n  \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl-20170720.ttl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:56:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Update a schema"},{"location":"/docs/api/1.1/kg/kg-schemas-api.html#tag-a-schema","text":"Links a schema revision to a specific name.\nTagging a schema is considered to be an update as well.\nPOST /v1/schemas/{org_label}/{project_label}/{schema_id}/tags?rev={previous_rev}\n  {\n    \"tag\": \"{name}\",\n    \"rev\": {rev}\n  }\n… where\n{previous_rev}: Number - is the last known revision for the resolver. {name}: String - label given to the schemas at specific revision. {rev}: Number - the revision to link the provided {name}.\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/schemas/myorg/myproj/myschema/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/tags?rev=2\" -d \\\n'{\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}'Full source at GitHub Payload {\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"Schema\",\n  \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl-20170720.ttl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 3,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:58:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Tag a schema"},{"location":"/docs/api/1.1/kg/kg-schemas-api.html#deprecate-a-schema","text":"Locks the schema, so no further operations can be performed. It also deletes the schema from listing/querying results.\nDeprecating a schema is considered to be an update as well.\nDELETE /v1/schemas/{org_label}/{project_label}/{schema_id}?rev={previous_rev}\n… where {previous_rev} is the last known revision number for the schema.\nExample\nRequest curl -XDELETE \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c?rev=5\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"Schema\",\n  \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl-20170720.ttl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 6,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:05:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Deprecate a schema"},{"location":"/docs/api/1.1/kg/kg-schemas-api.html#fetch-a-schema-current-version-","text":"GET /v1/schemas/{org_label}/{project_label}/{schema_id}\nExample\nRequest curl \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\"Full source at GitHub Response {\n  \"@context\": [\n    {\n      \"ex\": \"http://example.com/\",\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n    },\n    \"https://bluebrain.github.io/nexus/contexts/shacl-20170720.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://bluebrain.github.io/nexus/schemas/myschema2\",\n  \"@type\": \"Schema\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"NodeShape\",\n      \"nodeKind\": \"BlankNode:OrIRI\",\n      \"property\": [\n        {\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1,\n          \"path\": \"ex:name\"\n        },\n        {\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1,\n          \"path\": \"ex:bool\"\n        },\n        {\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1,\n          \"path\": \"ex:number\"\n        }\n      ],\n      \"targetClass\": \"ex:Custom\"\n    }\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"Schema\",\n  \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl-20170720.ttl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:05:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a schema (current version)"},{"location":"/docs/api/1.1/kg/kg-schemas-api.html#fetch-a-schema-specific-version-","text":"GET /v1/schemas/{org_label}/{project_label}/{schema_id}?rev={rev}\n… where {rev} is the revision number of the schema to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    {\n      \"ex\": \"http://example.com/\",\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\",\n    },\n    \"https://bluebrain.github.io/nexus/contexts/shacl-20170720.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://bluebrain.github.io/nexus/schemas/myschema2\",\n  \"@type\": \"Schema\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"NodeShape\",\n      \"nodeKind\": \"BlankNode:OrIRI\",\n      \"property\": [\n        {\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1,\n          \"path\": \"ex:name\"\n        },\n        {\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1,\n          \"path\": \"ex:bool\"\n        },\n        {\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1,\n          \"path\": \"ex:number\"\n        }\n      ],\n      \"targetClass\": \"ex:Custom\"\n    }\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"Schema\",\n  \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl-20170720.ttl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:05:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a schema (specific version)"},{"location":"/docs/api/1.1/kg/kg-schemas-api.html#fetch-a-schema-specific-tag-","text":"GET /v1/schemas/{org_label}/{project_label}/{schema_id}?tag={tag}\n… where {tag} is the tag of the resource to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c?tag=mytag\"Full source at GitHub Response {\n  \"@context\": [\n    {\n      \"ex\": \"http://example.com/\",\n      \"this\": \"https://nexus.example.com/v1/schemas/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c/shapes\"\n    },\n    \"https://bluebrain.github.io/nexus/contexts/shacl-20170720.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://bluebrain.github.io/nexus/schemas/myschema2\",\n  \"@type\": \"Schema\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"NodeShape\",\n      \"nodeKind\": \"BlankNode:OrIRI\",\n      \"property\": [\n        {\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1,\n          \"path\": \"ex:name\"\n        },\n        {\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1,\n          \"path\": \"ex:bool\"\n        },\n        {\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1,\n          \"path\": \"ex:number\"\n        }\n      ],\n      \"targetClass\": \"ex:Custom\"\n    }\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"Schema\",\n  \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl-20170720.ttl\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a schema (specific tag)"},{"location":"/docs/api/1.1/kg/kg-schemas-api.html#list-schemas","text":"GET /v1/schemas/{org_label}/{project_label}?from={from}&size={size}&deprecated={deprecated}&rev={rev}&type={type}&createdBy={createdBy}&updatedBy={updatedBy}&q={search}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting schemas based on their deprecation status {rev}: Number - can be used to filter the resulting schemas based on their revision value {type}: Iri - can be used to filter the resulting schemas based on their @type value. This parameter can appear multiple times, filtering further the @type value. {createdBy}: Iri - can be used to filter the resulting schemas based on their creator {updatedBy}: Iri - can be used to filter the resulting schemas based on the person which performed the last update {search}: String - can be provided to select only the schemas in the collection that have attribute values matching (containing) the provided string\nExample\nRequest curl \"https://nexus.example.com/v1/schemas/myorg/myproj\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 1,\n  \"_results\": [\n    {\n      \"@id\": \"https://bluebrain.github.io/nexus/schemas/myschema2\",\n      \"@type\": \"https://bluebrain.github.io/nexus/vocabulary/Schema\",\n      \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/incoming\",\n      \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c/outgoing\",\n      \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/base:e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/shacl-20170720.ttl\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-17T15:05:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    }\n  ],\n  \"_next\": \"https://nexus.example.com/v1/schemas/myorg/myproj?after=%5B1559045718752,%22https://bluebrain.github.io/nexus/schemas/myschema29%22%5D\"\n}Full source at GitHub","title":"List schemas"},{"location":"/docs/api/1.1/kg/kg-resolvers-api.html","text":"","title":"Resolvers"},{"location":"/docs/api/1.1/kg/kg-resolvers-api.html#resolvers","text":"Resolvers are rooted in the /v1/resolvers/{org_label}/{project_label} collection and are used in the following scenarios:\nBring the content of the owl:imports predicate for schema resources. The value is the @id of the resource. E.g.: You can define owl imports on a schema, as follows \"owl:imports\": \"http://example.com/myid\". The resolver will try to find a resource with \"@id\": \"http://example.com/myid\" and if found, will bring the payload into the original resource. Bring the content of the @context links. The value is the @id of the resource. E.g.: A resource might define the context as follows: \"@context\": \"http://example.com/id\". The resolver will try to find a resource with \"@id\": \"http://example.com/id\" and if found, will bring the payload into the original resource.\nEach resolver…\nbelongs to a project identifier by the label {project_label} inside an organization identifier by the label {org_label} it is validated against the resolver schema.\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nAuthorization notes When modifying resolvers, the caller must have resolvers/write permissions on the current path of the project or the ancestor paths. When reading resolvers, the caller must have resources/read permissions on the current path of the project or the ancestor paths.","title":"Resolvers"},{"location":"/docs/api/1.1/kg/kg-resolvers-api.html#resolver-types","text":"There are several types of resolvers, which perform resolution in different scopes.","title":"Resolver types"},{"location":"/docs/api/1.1/kg/kg-resolvers-api.html#inproject-resolver","text":"The scope of the resolution is the current project where the resource resides. In other words:\nSchema A can import schema B using the owl:import as long as schema B is located on the same project as schema A. Resource A can reference resource’s context B (inside @context) as long as resource B is located on the same project as resource A.\nThis resolver gets automatically created when the project is created and it cannot be modified.\nInProject resolver payload\n{\n    \"@id\": \"nxv:InProject\",\n    \"@type\": [ \"InProject\", \"Resolver\" ],\n    \"priority\": {priority},\n}\nwhere {priority} is a numeric value (from 1 - 100) which defines the resolution priority when attempting to find the resource with a particular @id.","title":"InProject resolver"},{"location":"/docs/api/1.1/kg/kg-resolvers-api.html#crossproject-resolver","text":"The scope of the resolution is the collections of projects P defined on the resolver. CrossProject resolution also defines a collection of identities I to enforce ACLs. In other words:\nSchema A can import schema B using the owl:import as long as schema B is located on some of the projects from the collection P and as long I have resources/read permissions on the schema B project. Resource A can reference resource’s context B (inside @context) as long as resource B is located on some of the projects from the collection P and as long as I have resources/read permissions on the schema B project.\nCrossProject resolver payload\n{\n  \"@id\": \"{someid}\",\n  \"@type\": [\"Resolver\", \"CrossProject\"],\n  \"resourceTypes\": [\"{resourceType}\", ...],\n  \"projects\": [\"{project}\", ... ],\n  \"identities\": [ {_identity_}, {...} ],\n  \"priority\": 50\n}\nwhere…\n{resourceType}: Iri - resolves only the resources with @type containing {resourceType}. This field is optional. {priority}: Number - value (from 1 - 100) which defines the resolution priority when attempting to find the resource with a particular @id. {project}: String - the user friendly reference to the project from where the resolution process will attempt to find the @id’s. It follows the format {organization}/{project}. _identity_: Json object - the identity against which to enforce ACLs during resolution process. {someid}: Iri - the @id value for this resolver.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver\" -d \\\n'{\n  \"@type\": [\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}'Full source at GitHub Payload {\n  \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myresolver\",\n  \"@type\": [\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"_incoming\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"CrossProject resolver"},{"location":"/docs/api/1.1/kg/kg-resolvers-api.html#create-a-resolver-using-post","text":"POST /v1/resolvers/{org_label}/{project_label}\n  {...}\nThe json payload:\nIf the @id value is found on the payload, this @id will be used. If the @id value is not found on the payload, an @id will be generated as follows: base:{UUID}. The base is the prefix defined on the resolver’s project ({project_label}).\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resolvers/myorg/myproj\" -d \\\n'{\n  \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myresolver\",\n  \"@type\": [\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}'Full source at GitHub Payload {\n  \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myresolver\",\n  \"@type\": [\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"_incoming\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create a resolver using POST"},{"location":"/docs/api/1.1/kg/kg-resolvers-api.html#create-a-resolver-using-put","text":"This alternative endpoint to create a resolver is useful in case the json payload does not contain an @id but you want to specify one. The @id will be specified in the last segment of the endpoint URI.\nPUT /v1/resolvers/{org_label}/{project_label}/{resolver_id}\n  {...}\nNote that if the payload contains an @id different from the {resolver_id}, the request will fail.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver\" -d \\\n'{\n  \"@type\": [\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}'Full source at GitHub Payload {\n  \"@type\": [\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"_incoming\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create a resolver using PUT"},{"location":"/docs/api/1.1/kg/kg-resolvers-api.html#update-a-resolver","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to a resolver without having had seen the previous revision of the resolver, the last revision needs to be passed as a query parameter.\nPUT /v1/resolvers/{org_label}/{project_label}/{resolver_id}?rev={previous_rev}\n  {...}\n… where {previous_rev} is the last known revision number for the resolver.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver?rev=1\" -d \\\n'{\n  \"@type\": [\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}'Full source at GitHub Payload {\n  \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myresolver\",\n  \"@type\": [\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"_incoming\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:10:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Update a resolver"},{"location":"/docs/api/1.1/kg/kg-resolvers-api.html#tag-a-resolver","text":"Links a resolver revision to a specific name.\nTagging a resolver is considered to be an update as well.\nPOST /v1/resolvers/{org_label}/{project_label}/{resolver_id}/tags?rev={previous_rev}\n  {\n    \"tag\": \"{name}\",\n    \"rev\": {rev}\n  }\n… where\n{previous_rev}: Number - the last known revision for the resolver. {name}: String - label given to the resolver at specific revision. {rev}: Number - the revision to link the provided {name}.\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver/tags?rev=2\" -d \\\n'{\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}'Full source at GitHub Payload {\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"_incoming\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 3,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Tag a resolver"},{"location":"/docs/api/1.1/kg/kg-resolvers-api.html#deprecate-a-resolver","text":"Locks the resolver, so no further operations can be performed. It will also not be taken into account in the resolution process.\nDeprecating a resolver is considered to be an update as well.\nDELETE /v1/resolvers/{org_label}/{project_label}/{resolver_id}?rev={previous_rev}\n… where {previous_rev} is the last known revision number for the resolver.\nExample\nRequest curl -XDELETE \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver?rev=5\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myresolver\",\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"_incoming\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 6,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Deprecate a resolver"},{"location":"/docs/api/1.1/kg/kg-resolvers-api.html#fetch-a-resolver-current-version-","text":"GET /v1/resolvers/{org_label}/{project_label}/{resolver_id}\nExample\nRequest curl \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resolver.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myresolver\",\n\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"@type\": \"User\",\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50,\n  \"_incoming\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a resolver (current version)"},{"location":"/docs/api/1.1/kg/kg-resolvers-api.html#fetch-a-resolver-specific-version-","text":"GET /v1/resolvers/{org_label}/{project_label}/{resolver_id}?rev={rev}\n… where {rev} is the revision number of the resolver to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resolver.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myresolver\",\n\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"@type\": \"User\",\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50,\n  \"_incoming\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a resolver (specific version)"},{"location":"/docs/api/1.1/kg/kg-resolvers-api.html#fetch-a-resolver-specific-tag-","text":"GET /v1/resolvers/{org_label}/{project_label}/{resolver_id}?tag={tag}\n… where {tag} is the tag of the resolver to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver?tag=mytag\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resolver.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myresolver\",\n\n  \"@type\": [\n    \"Resolver\",\n    \"CrossProject\"\n  ],\n  \"projects\": [\n    \"org1/project1\",\n    \"org1/project2\"\n  ],\n  \"identities\": [\n    {\n      \"@type\": \"User\",\n      \"realm\": \"myrealm\",\n      \"subject\": \"name\"\n    }\n  ],\n  \"priority\": 50,\n  \"_incoming\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a resolver (specific tag)"},{"location":"/docs/api/1.1/kg/kg-resolvers-api.html#list-resolvers","text":"GET /v1/resolvers/{org_label}/{project_label}?from={from}&size={size}&deprecated={deprecated}&rev={rev}&type={type}&createdBy={createdBy}&updatedBy={updatedBy}&q={search}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting resolvers based on their deprecation status {rev}: Number - can be used to filter the resulting resolvers based on their revision value {type}: Iri - can be used to filter the resulting resolvers based on their @type value. This parameter can appear multiple times, filtering further the @type value. {createdBy}: Iri - can be used to filter the resulting resolvers based on their creator {updatedBy}: Iri - can be used to filter the resulting resolvers based on the person which performed the last update {search}: String - can be provided to select only the resolvers in the collection that have attribute values matching (containing) the provided string\nExample\nRequest curl \"https://nexus.example.com/v1/resolvers/myorg/myproj\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 2,\n  \"_results\": [\n    {\n      \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/InProject\",\n      \"@type\": [\n        \"https://bluebrain.github.io/nexus/vocabulary/Resolver\",\n        \"https://bluebrain.github.io/nexus/vocabulary/InProject\"\n      ],\n      \"_incoming\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:InProject/incoming\",\n      \"_outgoing\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:InProject/outgoing\",\n      \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:InProject\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_createdAt\": \"2018-09-18T09:50:00.801Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T10:00:00.801Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_rev\": 1,\n      \"_deprecated\": true\n    },\n    {\n      \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myresolver\",\n      \"@type\": [\n        \"https://bluebrain.github.io/nexus/vocabulary/Resolver\",\n        \"https://bluebrain.github.io/nexus/vocabulary/CrossProject\"\n      ],\n      \"_incoming\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/incoming\",\n      \"_outgoing\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver/outgoing\",\n      \"_self\": \"https://nexus.example.com/v1/resolvers/myorg/myproject/nxv:myresolver\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resolver\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_rev\": 4,\n      \"_deprecated\": true\n    }\n  ],\n  \"_next\": \"https://nexus.example.com/v1/resolvers/myorg/myproj?after=%5B1559045718752,%22https://bluebrain.github.io/nexus/vocabulary/myresolver29%22%5D\"\n}Full source at GitHub","title":"List resolvers"},{"location":"/docs/api/1.1/kg/kg-resolvers-api.html#fetch-resource-using-resolvers-current-version-","text":"Fetches a resource using the provided resolver.\nIf the resolver segment ({resolver_id}) is _ the resource is fetched from the first resolver in the requested project ({org_label}/{project_label}). The resolvers are ordered by its priority field.\nGET /v1/resolvers/{org_label}/{project_label}/{resolver_id}/{resource_id}\n… where {resource_id} is the @id value of the resource to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\"Full source at GitHub Response {\n  \"@context\": [\n    {\n      \"@vocab\": \"http://example.com/\",\n      \"ex\": \"http://example.com/\"\n    },\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"Custom\",\n  \"bool\": false,\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"_incoming\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:02:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch resource using resolvers (current version)"},{"location":"/docs/api/1.1/kg/kg-resolvers-api.html#fetch-resource-using-resolvers-specific-version-","text":"Fetches a resource using the provided resolver.\nIf the resolver segment ({resolver_id}) is _ the resource is fetched from the first resolver in the requested project ({org_label}/{project_label}). The resolvers are ordered by its priority field.\nGET /v1/resolvers/{org_label}/{project_label}/{resolver_id}/{resource_id}?rev={rev}\n… where\n-{resource_id}: Iri - is the @id value of the resource to be retrieved. -{rev}: Number - the revision number of the resolver to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    {\n      \"@vocab\": \"http://example.com/\",\n      \"ex\": \"http://example.com/\"\n    },\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"Custom\",\n  \"bool\": false,\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"_incoming\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:02:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch resource using resolvers (specific version)"},{"location":"/docs/api/1.1/kg/kg-resolvers-api.html#fetch-resource-using-resolvers-specific-tag-","text":"Fetches a resource using the provided resolver.\nIf the resolver segment ({resolver_id}) is _ the resource is fetched from the first resolver in the requested project ({org_label}/{project_label}). The resolvers are ordered by its priority field.\nGET /v1/resolvers/{org_label}/{project_label}/{resolver_id}/{resource_id}?tag={tag}\n… where\n-{resource_id}: Iri - is the @id value of the resource to be retrieved. -{tag}: String - the tag of the resource to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/resolvers/myorg/myproj/nxv:myresolver/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0?tag=myTag\"Full source at GitHub Response {\n  \"@context\": [\n    {\n      \"@vocab\": \"http://example.com/\",\n      \"ex\": \"http://example.com/\"\n    },\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"Custom\",\n  \"bool\": false,\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"_incoming\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:02:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch resource using resolvers (specific tag)"},{"location":"/docs/api/1.1/kg/kg-views-api.html","text":"","title":"Views"},{"location":"/docs/api/1.1/kg/kg-views-api.html#views","text":"Views are rooted in the /v1/views/{org_label}/{project_label} collection and are used to index the selected resources into a bucket.\nEach view…\nbelongs to a project identifier by the label {project_label} inside an organization identifier by the label {org_label} it is validated against the view schema.\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nAuthorization notes When modifying views, the caller must have views/write permissions on the current path of the project or the ancestor paths. When querying views, the caller must have views/query permissions on the current path of the project or the ancestor paths. When reading views, the caller must have resources/read permissions on the current path of the project or the ancestor paths.","title":"Views"},{"location":"/docs/api/1.1/kg/kg-views-api.html#view-types","text":"There are several types of views, which relies on different technology to perform the indexing","title":"View types"},{"location":"/docs/api/1.1/kg/kg-views-api.html#sparqlview","text":"This view creates a SPARQL namespace where it stores the selected resources inside the view project.\nA default view gets automatically created when the project is created but other views can be created.\nSparqlView payload\n{\n  \"@id\": \"nxv:defaultSparqlIndex\",\n  \"@type\": [ \"View\", \"SparqlView\" ],\n  \"resourceSchemas\": [ \"{resourceSchema}\", ...],\n  \"resourceTypes\": [ \"{resourceType}\", ...],\n  \"resourceTag\": \"{tag}\",\n  \"includeMetadata\": {includeMetadata},\n  \"includeDeprecated\": {includeDeprecated}\n}\nwhere…\n{resourceSchema}: Iri - Selects only resources that are validated against the provided schema Iri. This field is optional. {resourceType}: Iri - Selects only resources of the provided type Iri. This field is optional. {tag}: String - Selects the resources with the provided tag. This field is optional. {includeMetadata}: Boolean - If true, the resource’s nexus metadata (_constrainedBy, _deprecated, …) will be stored in the Sparql graph. Otherwise it won’t. The default value is false. {includeDeprecated}: Boolean - If true, deprecated resourcess are also indexed. The default value is false.","title":"SparqlView"},{"location":"/docs/api/1.1/kg/kg-views-api.html#elasticsearchview","text":"This view creates an ElasticSearch index where it stores the selected resources inside the view project.\nA default view gets automatically created when the project is created but other views can be created.\nElasticSearchView payload\n{\n  \"@id\": \"{someid}\",\n  \"@type\": [ \"View\", \"ElasticSearchView\"],\n  \"resourceSchemas\": [ \"{resourceSchema}\", ...],\n  \"resourceTypes\": [ \"{resourceType}\", ...],\n  \"resourceTag\": \"{tag}\",\n  \"sourceAsText\": {sourceAsText},\n  \"includeMetadata\": {includeMetadata},\n  \"includeDeprecated\": {includeDeprecated},\n  \"mapping\": _elasticsearch mapping_\n}\nwhere…\n{resourceSchema}: Iri - Selects only resources that are validated against the provided schema Iri. This field is optional. {resourceType}: Iri - Select only resources of the provided type Iri. This field is optional. {tag}: String - Selects only resources with the provided tag. This field is optional. _elasticsearch mapping_: Json object - Defines the value types for the Json keys, as stated at the ElasticSearch mapping documentation. {sourceAsText}: Boolean - If true, the resource’s payload will be stored in the ElasticSearch document as a single escaped string value of the key _original_source. If false, the resource’s payload will be stored normally in the ElasticSearch document. The default value is false. {includeMetadata}: Boolean - If true, the resource’s nexus metadata (_constrainedBy, _deprecated, …) will be stored in the ElasticSearch document. Otherwise it won’t. The default value is false. {includeDeprecated}: Boolean - If true, deprecated resourcess are also indexed. The default value is false. {someid}: Iri - The @id value for this view.","title":"ElasticSearchView"},{"location":"/docs/api/1.1/kg/kg-views-api.html#aggregateelasticsearchview","text":"This view is an aggregate of ElasticSearchViews. The view itself does not create any index, but it references the already existing indices of the linked ElasticSearchViews.\nWhen performing queries on the _search endpoint, this view will make use of the multi-index query capabilities of ElasticSearch in order to select the indices of every view present on this aggregate view.\nIf the caller does not have the permission views/query on all the projects defined on the aggregated view, only a subset ofindices (or none) will be selected, respecting the defined permissions.\nAggregateElasticSearchView payload\n{\n  \"@id\": \"{someid}\",\n  \"@type\": [ \"View\", \"AggregateElasticSearchView\"],\n  \"views\": [ \n    {\n        \"project\": \"{project}\",\n        \"viewId\": \"{viewId}\"\n    },\n    ...\n  ]\n}\nwhere…\n{project}: String - The project, defined as {org_label}/{project_label}, where the {viewId} is located. {viewId}: Iri - The view @id value to be aggregated.","title":"AggregateElasticSearchView"},{"location":"/docs/api/1.1/kg/kg-views-api.html#aggregatesparqlview","text":"This view is an aggregate of SparqlViews. The view itself does not create any index, but it references the already existing indices of the linked SparqlViews.\nWhen performing queries on the sparql endpoint, this view will query all the underlying SparqlViews and then aggregate the results. The order how the results across the different SparqlView gets merged it is not deterministic.\nIf the caller does not have the permission views/query on all the projects defined on the aggregated view, only a subset ofindices (or none) will be selected, respecting the defined permissions.\nAggregateSparqlView payload\n{\n  \"@id\": \"{someid}\",\n  \"@type\": [ \"View\", \"AggregateSparqlView\"],\n  \"views\": [\n    {\n        \"project\": \"{project}\",\n        \"viewId\": \"{viewId}\"\n    },\n    ...\n  ]\n}\nwhere…\n{project}: String - the project, defined as {org_label}/{project_label}, where the {viewId} is located. {viewId}: Iri - The view @id value to be aggregated.","title":"AggregateSparqlView"},{"location":"/docs/api/1.1/kg/kg-views-api.html#create-an-elasticsearchview-using-post","text":"POST /v1/view/{org_label}/{project_label}\n  {...}\nThe json payload:\nIf the @id value is found on the payload, this @id will be used. If the @id value is not found on the payload, an @id will be generated as follows: base:{UUID}. The base is the prefix defined on the view’s project ({project_label}).\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/views/myorg/myproj\" -d \\\n'{\n  \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myview\",\n  \"@type\": [\n    \"ElasticSearchView\"\n  ],\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      }\n    }\n  },\n  \"includeMetadata\": false,\n  \"includeDeprecated\": false,\n  \"sourceAsText\": false,\n  \"resourceSchemas\": [\n    \"https://bluebrain.github.io/nexus/schemas/myschema\"\n  ],\n  \"resourceTypes\": []\n}'Full source at GitHub Payload {\n  \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myview\",\n  \"@type\": [\n    \"ElasticSearchView\"\n  ],\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      }\n    }\n  },\n  \"includeMetadata\": false,\n  \"includeDeprecated\": false,\n  \"sourceAsText\": false,\n  \"resourceSchemas\": [\n    \"https://bluebrain.github.io/nexus/schemas/myschema\"\n  ],\n  \"resourceTypes\": []\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myview\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\"\n  ],\n  \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create an ElasticSearchView using POST"},{"location":"/docs/api/1.1/kg/kg-views-api.html#create-an-elasticsearchview-using-put","text":"This alternative endpoint to create a view is useful in case the json payload does not contain an @id but you want to specify one. The @id will be specified in the last segment of the endpoint URI.\nPUT /v1/views/{org_label}/{project_label}/{view_id}\n  {...}\nNote that if the payload contains an @id different from the {view_id}, the request will fail.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview\" -d \\\n'{\n  \"@type\": [\n    \"ElasticSearchView\",\n  ],\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      }\n    }\n  },\n  \"includeMetadata\": false,\n  \"includeDeprecated\": false,\n  \"sourceAsText\": false,\n  \"resourceSchemas\": [\n    \"https://bluebrain.github.io/nexus/schemas/myschema\"\n  ],\n  \"resourceTypes\": []\n}'Full source at GitHub Payload {\n  \"@type\": [\n    \"ElasticSearchView\"\n  ],\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      }\n    }\n  },\n  \"includeMetadata\": false,\n  \"includeDeprecated\": false,\n  \"sourceAsText\": false,\n  \"resourceSchemas\": [\n    \"https://bluebrain.github.io/nexus/schemas/myschema\"\n  ],\n  \"resourceTypes\": []\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myview\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\"\n  ],\n  \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create an ElasticSearchView using PUT"},{"location":"/docs/api/1.1/kg/kg-views-api.html#update-an-elasticsearchview","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to a view without having had seen the previous revision of the view, the last revision needs to be passed as a query parameter.\nPUT /v1/views/{org_label}/{project_label}/{view_id}?rev={previous_rev}\n  {...}\n… where {previous_rev} is the last known revision number for the view.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview?rev=1\" -d \\\n'{\n  \"@type\": [\n    \"ElasticSearchView\"\n  ],\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      }\n    }\n  },\n  \"includeMetadata\": false,\n  \"includeDeprecated\": false,\n  \"sourceAsText\": false,\n  \"resourceSchemas\": [\n    \"https://bluebrain.github.io/nexus/schemas/myschema\"\n  ],\n  \"resourceTypes\": []\n}'Full source at GitHub Payload {\n  \"@type\": [\n    \"ElasticSearchView\"\n  ],\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      }\n    }\n  },\n  \"includeMetadata\": false,\n  \"includeDeprecated\": false,\n  \"sourceAsText\": false,\n  \"resourceSchemas\": [\n    \"https://bluebrain.github.io/nexus/schemas/myschema\"\n  ],\n  \"resourceTypes\": []\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myview\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\",\n  ],\n  \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T16:42:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Update an ElasticSearchView"},{"location":"/docs/api/1.1/kg/kg-views-api.html#create-an-aggregateelasticsearchview-using-put","text":"This alternative endpoint to create a view is useful in case the json payload does not contain an @id but you want to specify one. The @id will be specified in the last segment of the endpoint URI.\nPUT /v1/views/{org_label}/{project_label}/{view_id}\n  {...}\nNote that if the payload contains an @id different from the {view_id}, the request will fail.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/views/myorg/myproj3/nxv:myagg\" -d \\\n'{\n  \"@context\": {\n    \"nxv\": \"https://bluebrain.github.io/nexus/vocabulary/\"\n  },\n  \"@type\": [\n    \"AggregateElasticSearchView\",\n  ],\n  \"views\": [\n    {\n      \"project\": \"myorg/myproj\",\n      \"viewId\": \"nxv:myview\"\n    },\n    {\n      \"project\": \"myorg/myproj2\",\n      \"viewId\": \"nxv:myview2\"\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"@context\": {\n    \"nxv\": \"https://bluebrain.github.io/nexus/vocabulary/\"\n  },\n  \"@type\": [\n    \"AggregateElasticSearchView\"\n  ],\n  \"views\": [\n    {\n      \"project\": \"myorg/myproj\",\n      \"viewId\": \"nxv:myview\"\n    },\n    {\n      \"project\": \"myorg/myproj2\",\n      \"viewId\": \"nxv:myview2\"\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myview\",\n  \"@type\": [\n    \"AggregateElasticSearchView\",\n    \"View\"\n  ],\n  \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj3/nxv:myagg/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj3/nxv:myagg/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj3/nxv:myagg\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj3\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create an AggregateElasticSearchView using PUT"},{"location":"/docs/api/1.1/kg/kg-views-api.html#tag-a-view","text":"Links a view’s revision to a specific name.\nTagging a view is considered to be an update as well.\nPOST /v1/views/{org_label}/{project_label}/{view_id}/tags?rev={previous_rev}\n  {\n    \"tag\": \"{name}\",\n    \"rev\": {rev}\n  }\n… where\n{previous_rev}: Number - the last known revision for the resolver. {name}: String - label given to the view at specific revision. {rev}: Number - the revision to link the provided {name}.\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview/tags?rev=2\" -d \\\n'{\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}'Full source at GitHub Payload {\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myview\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\"\n  ],\n  \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 3,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T16:52:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Tag a View"},{"location":"/docs/api/1.1/kg/kg-views-api.html#deprecate-a-view","text":"Locks the view, so no further operations can be performed. It also stops indexing any more resources into it.\nDeprecating a view is considered to be an update as well.\nDELETE /v1/views/{org_label}/{project_label}/{view_id}?rev={previous_rev}\n… where {previous_rev} is the last known revision number for the view.\nExample\nRequest curl -XDELETE \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview?rev=5\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myview\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\"\n  ],\n  \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 6,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Deprecate a view"},{"location":"/docs/api/1.1/kg/kg-views-api.html#fetch-a-view-current-version-","text":"GET /v1/views/{org_label}/{project_label}/{view_id}\nExample\nRequest curl \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/view.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myview2\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\"\n  ],\n  \"includeMetadata\": false,\n  \"includeDeprecated\": false,\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      }\n    }\n  },\n  \"resourceSchemas\": [\n    \"https://bluebrain.github.io/nexus/schemas/myschema\"\n  ],\n  \"resourceTypes\": [],\n  \"sourceAsText\": false,\n  \"_uuid\": \"4f90ceff-45b7-442d-8536-d41705321d50\",\n  \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 4,\n  \"_deprecated\": true\n}Full source at GitHub","title":"Fetch a view (current version)"},{"location":"/docs/api/1.1/kg/kg-views-api.html#fetch-a-view-specific-version-","text":"GET /v1/views/{org_label}/{project_label}/{view_id}?rev={rev}\n… where {rev} is the revision number of the view to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/view.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myview2\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\"\n  ],\n  \"includeMetadata\": false,\n  \"includeDeprecated\": false,\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      }\n    }\n  },\n  \"resourceSchemas\": [\n    \"https://bluebrain.github.io/nexus/schemas/myschema\"\n  ],\n  \"resourceTypes\": [],\n  \"sourceAsText\": false,\n  \"_uuid\": \"4f90ceff-45b7-442d-8536-d41705321d50\",\n  \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 4,\n  \"_deprecated\": true\n}Full source at GitHub","title":"Fetch a view (specific version)"},{"location":"/docs/api/1.1/kg/kg-views-api.html#fetch-a-view-specific-tag-","text":"GET /v1/views/{org_label}/{project_label}/{view_id}?tag={tag}\n… where {tag} is the tag of the view to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview?tag=mytag\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/view.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"nxv:myview2\",\n  \"@type\": [\n    \"ElasticSearchView\",\n    \"View\"\n  ],\n  \"includeMetadata\": false,\n  \"includeDeprecated\": false,\n  \"mapping\": {\n    \"dynamic\": false,\n    \"properties\": {\n      \"@id\": {\n        \"type\": \"keyword\"\n      },\n      \"@type\": {\n        \"type\": \"keyword\"\n      },\n      \"bool\": {\n        \"type\": \"boolean\"\n      },\n      \"name\": {\n        \"type\": \"keyword\"\n      },\n      \"number\": {\n        \"type\": \"long\"\n      }\n    }\n  },\n  \"resourceSchemas\": [\n    \"https://bluebrain.github.io/nexus/schemas/myschema\"\n  ],\n  \"resourceTypes\": [],\n  \"sourceAsText\": false,\n  \"_uuid\": \"4f90ceff-45b7-442d-8536-d41705321d50\",\n  \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T16:39:22.748Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 1,\n  \"_deprecated\": false\n}Full source at GitHub","title":"Fetch a view (specific tag)"},{"location":"/docs/api/1.1/kg/kg-views-api.html#fetch-view-statistics","text":"GET /v1/views/{org_label}/{project_label}/{view_id}/statistics\nNote View statistics are currently unavailable for AggregateElasticSearchView.\nExample\nRequest curl \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview/statistics\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/view.json\",\n  \"delayInSeconds\": 699451,\n  \"discardedEvents\": 3,\n  \"evaluatedEvents\": 263,\n  \"lastEventDateTime\": \"2019-03-12T16:59:20.296Z\",\n  \"lastProcessedEventDateTime\": \"2019-03-04T14:41:49.545Z\",\n  \"processedEvents\": 266,\n  \"remainingEvents\": 31214,\n  \"totalEvents\": 31480\n}Full source at GitHub\nwhere:\ntotalEvents - total number of events in the project processedEvents - number of events that have been considered by the view remainingEvents - number of events that remain to be considered by the view discardedEvents - number of events that have been discarded (were not evaluated due to filters, e.g. did not match schema, tag or type defined in the view) evaluatedEvents - number of events that have been used to update an index lastEventDateTime - timestamp of the last event in the project lastProcessedEventDateTime - timestamp of the last event processed by the view delayInSeconds - number of seconds between the last processed event timestamp and the last known event timestamp","title":"Fetch view statistics"},{"location":"/docs/api/1.1/kg/kg-views-api.html#list-views","text":"GET /v1/views/{org_label}/{project_label}?from={from}&size={size}&deprecated={deprecated}&rev={rev}&type={type}&createdBy={createdBy}&updatedBy={updatedBy}&q={search}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting views based on their deprecation status {rev}: Number - can be used to filter the resulting views based on their revision value {type}: Iri - can be used to filter the resulting views based on their @type value. This parameter can appear multiple times, filtering further the @type value. {createdBy}: Iri - can be used to filter the resulting views based on their creator {updatedBy}: Iri - can be used to filter the resulting views based on the person which performed the last update {search}: String - can be provided to select only the views in the collection that have attribute values matching (containing) the provided string\nExample\nRequest curl \"https://nexus.example.com/v1/views/myorg/myproj\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 3,\n  \"_results\": [\n    {\n      \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/defaultElasticIndex\",\n      \"@type\": [\n        \"https://bluebrain.github.io/nexus/vocabulary/View\",\n        \"https://bluebrain.github.io/nexus/vocabulary/Alpha\",\n        \"https://bluebrain.github.io/nexus/vocabulary/ElasticSearchView\"\n      ],\n      \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:defaultElasticIndex/incoming\",\n      \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:defaultElasticIndex/outgoing\",\n      \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:defaultElasticIndex\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_rev\": 1,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    },\n    {\n      \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/defaultSparqlIndex\",\n      \"@type\": [\n        \"https://bluebrain.github.io/nexus/vocabulary/View\",\n        \"https://bluebrain.github.io/nexus/vocabulary/SparqlView\"\n      ],\n      \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:defaultSparqlIndex/incoming\",\n      \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:defaultSparqlIndex/outgoing\",\n      \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:defaultSparqlIndex\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_rev\": 1,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    },\n    {\n      \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myview2\",\n      \"@type\": [\n        \"https://bluebrain.github.io/nexus/vocabulary/ElasticSearchView\",\n        \"https://bluebrain.github.io/nexus/vocabulary/View\",\n        \"https://bluebrain.github.io/nexus/vocabulary/Alpha\"\n      ],\n      \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/incoming\",\n      \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/outgoing\",\n      \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    }\n  ],\n  \"_next\": \"https://nexus.example.com/v1/views/myorg/myproj?after=%5B1559045718752,%22https://bluebrain.github.io/nexus/vocabulary/myview29%22%5D\"\n}Full source at GitHub","title":"List views"},{"location":"/docs/api/1.1/kg/kg-views-api.html#elasticsearch-query","text":"Provides search functionality on the ElasticSearchView or AggregateElasticSearchView content.\nPOST /v1/views/{org_label}/{project_label}/{view_id}/_search\n  {...}\nThe supported payload is defined on the ElasticSearch documentation\nThe string documents is used as a prefix of the default ElasticSearch view_id\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/views/myorg/myproj/nxv:myview/_search\" -d \\\n'{\n  \"query\": {\n    \"term\": {\n      \"_deprecated\": true\n    }\n  }\n}'Full source at GitHub Response {\n  \"_shards\": {\n    \"failed\": 0,\n    \"skipped\": 0,\n    \"successful\": 0,\n    \"total\": 0\n  },\n  \"hits\": {\n    \"hits\": [\n      {\n        \"_score\": 1.2039728,\n        \"_id\": \"http://example.com/myview\",\n        \"_index\": \"kg_v1_803da242-d510-4e1a-a12d-d0e0b7018a41_684bd815-9273-46f4-ac1c-0383d4a98254_1\",\n        \"_source\": {\n          \"@id\": \"http://example.com/myview\",\n          \"@type\": [\n            \"https://bluebrain.github.io/nexus/vocabulary/View\",\n            \"https://bluebrain.github.io/nexus/vocabulary/ElasticSearchView\",\n            \"https://bluebrain.github.io/nexus/vocabulary/Alpha\"\n          ],\n          \"_original_source\": \"{\\\"mapping\\\":\\\"{\\\\\\\"dynamic\\\\\\\":false,\\\\\\\"properties\\\\\\\":{\\\\\\\"@id\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"keyword\\\\\\\"},\\\\\\\"@type\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"keyword\\\\\\\"},\\\\\\\"name\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"keyword\\\\\\\"},\\\\\\\"number\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"long\\\\\\\"},\\\\\\\"bool\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"boolean\\\\\\\"}}}\\\",\\\"_uuid\\\":\\\"89dd9858-cf87-4c46-94c2-24da0fcae0aa\\\",\\\"@context\\\":\\\"https://bluebrain.github.io/nexus/contexts/view\\\",\\\"@type\\\":[\\\"View\\\",\\\"ElasticSearchView\\\"],\\\"includeMetadata\\\":true,\\\"sourceAsText\\\":false}\",\n          \"_incoming\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/incoming\",\n          \"_outgoing\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview/outgoing\",\n          \"_self\": \"https://nexus.example.com/v1/schemas/myorg/myproj/nxv:myview\",\n          \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/view\",\n          \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n          \"_rev\": 6,\n          \"_deprecated\": true,\n          \"_createdAt\": \"2018-09-18T16:39:22.748Z\",\n          \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n          \"_updatedAt\": \"2018-09-18T17:10:22.748Z\",\n          \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n        },\n        \"_type\": \"doc\"\n      }\n    ],\n    \"max_score\": 1.2039728,\n    \"total\": 1\n  },\n  \"timed_out\": false,\n  \"took\": 11\n}Full source at GitHub","title":"ElasticSearch query"},{"location":"/docs/api/1.1/kg/kg-views-api.html#sparql-query","text":"Provides search functionality on the SparqlView content.\nPOST /v1/views/{org_label}/{project_label}/graph/sparql\n  \"...\"\nThe supported payload is defined on the SparQL documentation The Content-Type HTTP header for this request is application/sparql-query.\nExample\nRequest curl -XPOST -H \"Content-Type: application/sparql-query\" \"https://nexus.example.com/v1/views/myorg/myproj/graph/sparql\" -d \\\n'SELECT ?s where {?s ?p ?o} LIMIT 2'Full source at GitHub Response {\n  \"head\": {\n    \"vars\": [\n      \"s\"\n    ]\n  },\n  \"results\": {\n    \"bindings\": [\n      {\n        \"s\": {\n          \"type\": \"uri\",\n          \"value\": \"http://example.com/myview\"\n        }\n      },\n      {\n        \"s\": {\n          \"type\": \"uri\",\n          \"value\": \"http://example.com/other\"\n        }\n      }\n    ]\n  }\n}Full source at GitHub","title":"SparQL query"},{"location":"/docs/api/1.1/kg/kg-views-api.html#views-internals","text":"When an asynchronous process that reads the view events from the Primary Store gets triggered, a new index (SparQL or ElasticSearch) gets created. After that, an endpoint (/sparql for SparQL view or /_search for ElasticSearch view) becomes available. The client can then perform queries against those endpoints.\nThe view provides the configuration of the index and defines which Events are going to be indexed.","title":"Views internals"},{"location":"/docs/api/1.1/kg/kg-storages-api.html","text":"","title":"Storages"},{"location":"/docs/api/1.1/kg/kg-storages-api.html#storages","text":"Storages are rooted in the /v1/storages/{org_label}/{project_label} collection and are used to describe where files are physically stored.\nEach storage…\nbelongs to a project identifier by the label {project_label} inside an organization identifier by the label {org_label} is validated against the storage schema.\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn how to retrieve an access token.\nAuthorization notes To read or modify storages, the caller must have respectively storages/read or storages/write permissions on the current path of the project or its ancestors.","title":"Storages"},{"location":"/docs/api/1.1/kg/kg-storages-api.html#storage-types","text":"There are several types (or classes) of storages, that represent different kinds of backends.","title":"Storage types"},{"location":"/docs/api/1.1/kg/kg-storages-api.html#local-disk-storage","text":"This is the most basic storage type. It is backed by the local file-system (i.e. where the Nexus deployment is running) and rooted in an arbitrary path.\nUpon project creation, a default disk storage is initialized automatically, so that users can start uploading resource attachments right away. This resource has the @id nxv:diskStorageDefault.\nIts behavior is similar to earlier versions of the Nexus API: files are stored and managed by the system in an opaque, internal way.\nWhile typically not necessary, you can manage and create additional disk storages, provided you are aware of the local file-system structure and that Nexus has read and write access to the target folder.","title":"Local disk storage"},{"location":"/docs/api/1.1/kg/kg-storages-api.html#remote-disk-storage","text":"This storage type relies on a remote HTTP service that exposes basic file operations on an underlying POSIX file-system. This is particularly handy if your organization is running some kind of distributed network storage (such as Ceph, Gluster, GPFS, Lustre, …) that you don’t want to mount directly on the system where Nexus runs.\nWhile there’s no formal specification for this service, you can check out or deploy our own implementation: Nexus remote storage service.","title":"Remote disk storage"},{"location":"/docs/api/1.1/kg/kg-storages-api.html#amazon-s3-compatible-storage","text":"This storage type allows the use of an internal or external blob-store that is compatible with the Amazon S3 API.","title":"Amazon S3 compatible storage"},{"location":"/docs/api/1.1/kg/kg-storages-api.html#changing-the-default-storage","text":"The internal resource describing every storage has a boolean field called default. The selection mechanism when no storage id is provided picks the last created storage with default set to true.","title":"Changing the default storage"},{"location":"/docs/api/1.1/kg/kg-storages-api.html#resource-format","text":"These tables summarize mandatory and optional fields for each storage type:\n@type @id default volume readPermission writePermission DiskStorage optional mandatory mandatory optional optional\n@type @id default folder endpoint credentials readPermission writePermission RemoteDiskStorage optional mandatory mandatory optional optional optional optional\n@type @id default bucket endpoint accessKey secretKey readPermission writePermission S3Storage optional mandatory mandatory optional optional optional optional optional\nNote The endpoint field is optional for the S3 storage type, as our internal implementation uses the official S3 client and defaults to s3.amazonaws.com. Relying on this behavior is discouraged.","title":"Resource format"},{"location":"/docs/api/1.1/kg/kg-storages-api.html#create-a-storage-using-post","text":"POST /v1/storages/{org_label}/{project_label}\n  {...}\nJson payload:\nIf an @id value is found in the payload, it will be used. If an @id value is not found in the payload, one will be generated as follows: base:{UUID}. The base is the prefix defined on the storage’s project ({project_label}).\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/storages/myorg/myproj\" -d \\\n'{\n  \"@id\": \"nxv:mys3storage\",\n  \"@type\": \"S3Storage\",\n  \"default\": false,\n  \"bucket\": \"mybucket\",\n  \"endpoint\": \"https://s3.us-west-1.amazonaws.com\",\n  \"accessKey\": \"AKIAIOSFODNN7EXAMPLE\",\n  \"secretKey\": \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n}'Full source at GitHub Payload {\n    \"@id\": \"nxv:mys3storage\",\n    \"@type\": \"S3Storage\",\n    \"default\": false,\n    \"bucket\": \"mybucket\",\n    \"endpoint\": \"https://s3.us-west-1.amazonaws.com\",\n    \"accessKey\": \"AKIAIOSFODNN7EXAMPLE\",\n    \"secretKey\": \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n}Full source at GitHub Response {\n    \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"@id\": \"nxv:mys3storage\",\n    \"@type\": [\n        \"S3Storage\",\n        \"Storage\"\n    ],\n    \"_incoming\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage/incoming\",\n    \"_outgoing\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage/outgoing\",\n    \"_self\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage\",\n    \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/storage.json\",\n    \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n    \"_rev\": 1,\n    \"_deprecated\": false,\n    \"_createdAt\": \"2019-05-10T16:26:54.423Z\",\n    \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n    \"_updatedAt\": \"2019-05-10T16:26:54.423Z\",\n    \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create a storage using POST"},{"location":"/docs/api/1.1/kg/kg-storages-api.html#create-a-storage-using-put","text":"This alternative endpoint to create a storage is useful in case the json payload does not contain an @id but you want to specify one. The @id will be specified in the last segment of the endpoint URI.\nPUT /v1/storages/{org_label}/{project_label}/{storage_id}\n  {...}\nNote that if the payload contains an @id different from the {storage_id}, the request will fail.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage\" -d \\\n'{\n  \"@type\": \"S3Storage\",\n  \"default\": false,\n  \"bucket\": \"mybucket\",\n  \"endpoint\": \"https://s3.us-west-1.amazonaws.com\",\n  \"accessKey\": \"AKIAIOSFODNN7EXAMPLE\",\n  \"secretKey\": \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n}'Full source at GitHub Payload {\n    \"@type\": \"S3Storage\",\n    \"default\": false,\n    \"bucket\": \"mybucket\",\n    \"endpoint\": \"https://s3.us-west-1.amazonaws.com\",\n    \"accessKey\": \"AKIAIOSFODNN7EXAMPLE\",\n    \"secretKey\": \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n}Full source at GitHub Response {\n    \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"@id\": \"nxv:mys3storage\",\n    \"@type\": [\n        \"S3Storage\",\n        \"Storage\"\n    ],\n    \"_incoming\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage/incoming\",\n    \"_outgoing\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage/outgoing\",\n    \"_self\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage\",\n    \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/storage.json\",\n    \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n    \"_rev\": 1,\n    \"_deprecated\": false,\n    \"_createdAt\": \"2019-05-10T16:26:54.423Z\",\n    \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n    \"_updatedAt\": \"2019-05-10T16:26:54.423Z\",\n    \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create a storage using PUT"},{"location":"/docs/api/1.1/kg/kg-storages-api.html#update-a-storage","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to a storage without having had seen the previous revision of the storage, the last revision needs to be passed as a query parameter.\nPUT /v1/storages/{org_label}/{project_label}/{storage_id}?rev={previous_rev}\n  {...}\n… where {previous_rev} is the last known revision number for the storage.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage\" -d \\\n'{\n  \"@type\": \"S3Storage\",\n  \"default\": true,\n  \"bucket\": \"mybucket\",\n  \"endpoint\": \"https://s3.us-west-1.amazonaws.com\",\n  \"accessKey\": \"AKIAIOSFODNN7EXAMPLE\",\n  \"secretKey\": \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n}'Full source at GitHub Payload {\n    \"@type\": \"S3Storage\",\n    \"default\": true,\n    \"bucket\": \"mybucket\",\n    \"endpoint\": \"https://s3.us-west-1.amazonaws.com\",\n    \"accessKey\": \"AKIAIOSFODNN7EXAMPLE\",\n    \"secretKey\": \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n}Full source at GitHub Response {\n    \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"@id\": \"nxv:mys3storage\",\n    \"@type\": [\n        \"S3Storage\",\n        \"Storage\"\n    ],\n    \"_incoming\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage/incoming\",\n    \"_outgoing\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage/outgoing\",\n    \"_self\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage\",\n    \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/storage.json\",\n    \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n    \"_rev\": 2,\n    \"_deprecated\": false,\n    \"_createdAt\": \"2019-05-10T16:26:54.423Z\",\n    \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n    \"_updatedAt\": \"2019-05-10T16:26:54.423Z\",\n    \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Update a storage"},{"location":"/docs/api/1.1/kg/kg-storages-api.html#tag-a-storage","text":"Links a storage revision to a specific name.\nTagging a storage is considered to be an update as well.\nPOST /v1/storages/{org_label}/{project_label}/{storage_id}/tags?rev={previous_rev}\n  {\n    \"tag\": \"{name}\",\n    \"rev\": {rev}\n  }\n… where\n{previous_rev}: Number - the last known revision for the storage. {name}: String - label given to the storage at specific revision. {rev}: Number - the revision to link the provided {name}.\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage/tags?rev=2\" -d \\\n'{\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}'Full source at GitHub Payload {\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}Full source at GitHub Response {\n    \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"@id\": \"nxv:mys3storage\",\n    \"@type\": [\n        \"S3Storage\",\n        \"Storage\"\n    ],\n    \"_incoming\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage/incoming\",\n    \"_outgoing\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage/outgoing\",\n    \"_self\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage\",\n    \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/storage.json\",\n    \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n    \"_rev\": 3,\n    \"_deprecated\": false,\n    \"_createdAt\": \"2019-05-10T16:26:54.423Z\",\n    \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n    \"_updatedAt\": \"2019-05-10T16:26:54.423Z\",\n    \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Tag a storage"},{"location":"/docs/api/1.1/kg/kg-storages-api.html#deprecate-a-storage","text":"Locks the storage, so no further operations can be performed. It will also not be taken into account by the default storage selection mechanism.\nDeprecating a storage is considered to be an update as well.\nDELETE /v1/storages/{org_label}/{project_label}/{storage_id}?rev={previous_rev}\n… where {previous_rev} is the last known revision number for the storage.\nExample\nRequest curl -XDELETE -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage\"Full source at GitHub Response {\n    \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"@id\": \"nxv:mys3storage\",\n    \"@type\": [\n        \"S3Storage\",\n        \"Storage\"\n    ],\n    \"_incoming\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage/incoming\",\n    \"_outgoing\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage/outgoing\",\n    \"_self\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage\",\n    \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/storage.json\",\n    \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n    \"_rev\": 4,\n    \"_deprecated\": true,\n    \"_createdAt\": \"2019-05-13T14:31:24.661Z\",\n    \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n    \"_updatedAt\": \"2019-05-13T14:32:03.287Z\",\n    \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Deprecate a storage"},{"location":"/docs/api/1.1/kg/kg-storages-api.html#fetch-a-storage-current-version-","text":"GET /v1/storages/{org_label}/{project_label}/{storage_id}\nExample\nRequest curl \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage\"Full source at GitHub Response {\n    \"@context\": [\n        \"https://bluebrain.github.io/nexus/contexts/storage.json\",\n        \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n    ],\n    \"@id\": \"nxv:mys3storage\",\n    \"@type\": [\n        \"S3Storage\",\n        \"Storage\"\n    ],\n    \"bucket\": \"mybucket\",\n    \"default\": true,\n    \"endpoint\": \"https://s3.us-west-1.amazonaws.com\",\n    \"readPermission\": \"resources/read\",\n    \"writePermission\": \"files/write\",\n    \"_algorithm\": \"SHA-256\",\n    \"_incoming\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage/incoming\",\n    \"_outgoing\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage/outgoing\",\n    \"_self\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage\",\n    \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/storage.json\",\n    \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n    \"_rev\": 3,\n    \"_deprecated\": false,\n    \"_createdAt\": \"2019-05-13T14:38:51.190Z\",\n    \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n    \"_updatedAt\": \"2019-05-13T14:38:51.190Z\",\n    \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a storage (current version)"},{"location":"/docs/api/1.1/kg/kg-storages-api.html#fetch-a-storage-specific-version-","text":"GET /v1/storages/{org_label}/{project_label}/{storage_id}?rev={rev}\n… where {rev} is the revision number of the storage to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage?rev=1\"Full source at GitHub Response {\n    \"@context\": [\n        \"https://bluebrain.github.io/nexus/contexts/storage.json\",\n        \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n    ],\n    \"@id\": \"nxv:mys3storage\",\n    \"@type\": [\n        \"S3Storage\",\n        \"Storage\"\n    ],\n    \"bucket\": \"mybucket\",\n    \"default\": false,\n    \"endpoint\": \"https://s3.us-west-1.amazonaws.com\",\n    \"readPermission\": \"resources/read\",\n    \"writePermission\": \"files/write\",\n    \"_algorithm\": \"SHA-256\",\n    \"_incoming\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage/incoming\",\n    \"_outgoing\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage/outgoing\",\n    \"_self\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage\",\n    \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/storage.json\",\n    \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n    \"_rev\": 1,\n    \"_deprecated\": false,\n    \"_createdAt\": \"2019-05-13T14:38:51.190Z\",\n    \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n    \"_updatedAt\": \"2019-05-13T14:38:51.190Z\",\n    \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a storage (specific version)"},{"location":"/docs/api/1.1/kg/kg-storages-api.html#fetch-a-storage-specific-tag-","text":"GET /v1/storages/{org_label}/{project_label}/{storage_id}?tag={tag}\n… where {tag} is the tag of the storage to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage?tag=mytag\"Full source at GitHub Response {\n    \"@context\": [\n        \"https://bluebrain.github.io/nexus/contexts/storage.json\",\n        \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n    ],\n    \"@id\": \"nxv:mys3storage\",\n    \"@type\": [\n        \"S3Storage\",\n        \"Storage\"\n    ],\n    \"bucket\": \"mybucket\",\n    \"default\": false,\n    \"endpoint\": \"https://s3.us-west-1.amazonaws.com\",\n    \"readPermission\": \"resources/read\",\n    \"writePermission\": \"files/write\",\n    \"_algorithm\": \"SHA-256\",\n    \"_incoming\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage/incoming\",\n    \"_outgoing\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage/outgoing\",\n    \"_self\": \"https://nexus.example.com/v1/storages/myorg/myproj/nxv:mys3storage\",\n    \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/storage.json\",\n    \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n    \"_rev\": 1,\n    \"_deprecated\": false,\n    \"_createdAt\": \"2019-05-13T14:38:51.190Z\",\n    \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n    \"_updatedAt\": \"2019-05-13T14:38:51.190Z\",\n    \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a storage (specific tag)"},{"location":"/docs/api/1.1/kg/kg-storages-api.html#list-storages","text":"GET /v1/storages/{org_label}/{project_label}?from={from}&size={size}&deprecated={deprecated}&rev={rev}&type={type}&createdBy={createdBy}&updatedBy={updatedBy}&q={search}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting storages based on their deprecation status {rev}: Number - can be used to filter the resulting storages based on their revision value {type}: Iri - can be used to filter the resulting storages based on their @type value. This parameter can appear multiple times, filtering further the @type value. {createdBy}: Iri - can be used to filter the resulting storages based on their creator {updatedBy}: Iri - can be used to filter the resulting storages based on the person which performed the last update {search}: String - can be provided to select only the storages in the collection that have attribute values matching (containing) the provided string\nExample\nRequest curl \"https://nexus.example.com/v1/storages/myorg/myproj\"Full source at GitHub Response {\n    \"@context\": [\n        \"https://bluebrain.github.io/nexus/contexts/search.json\",\n        \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n    ],\n    \"_total\": 3,\n    \"_results\": [\n        {\n            \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/diskStorageDefault\",\n            \"@type\": [\n                \"https://bluebrain.github.io/nexus/vocabulary/Storage\",\n                \"https://bluebrain.github.io/nexus/vocabulary/DiskStorage\"\n            ],\n            \"_incoming\": \"https://nexus.example.com/v1/storages/myorg/myproj/https%3A%2F%2Fbluebrain.github.io%2Fnexus%2Fvocabulary%2FdiskStorageDefault/incoming\",\n            \"_outgoing\": \"https://nexus.example.com/v1/storages/myorg/myproj/https%3A%2F%2Fbluebrain.github.io%2Fnexus%2Fvocabulary%2FdiskStorageDefault/outgoing\",\n            \"_self\": \"https://nexus.example.com/v1/storages/myorg/myproj/https%3A%2F%2Fbluebrain.github.io%2Fnexus%2Fvocabulary%2FdiskStorageDefault\",\n            \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/storage.json\",\n            \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n            \"_rev\": 1,\n            \"_deprecated\": false,\n            \"_createdAt\": \"2019-05-13T14:26:47.817Z\",\n            \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n            \"_updatedAt\": \"2019-05-13T14:26:47.817Z\",\n            \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n        },\n        {\n            \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myoldstorage\",\n            \"@type\": [\n                \"https://bluebrain.github.io/nexus/vocabulary/S3Storage\",\n                \"https://bluebrain.github.io/nexus/vocabulary/Storage\"\n            ],\n            \"_incoming\": \"https://nexus.example.com/v1/storages/myorg/myproj/https%3A%2F%2Fbluebrain.github.io%2Fnexus%2Fvocabulary%myoldstorage/incoming\",\n            \"_outgoing\": \"https://nexus.example.com/v1/storages/myorg/myproj/https%3A%2F%2Fbluebrain.github.io%2Fnexus%2Fvocabulary%myoldstorage/outgoing\",\n            \"_self\": \"https://nexus.example.com/v1/storages/myorg/myproj/https%3A%2F%2Fbluebrain.github.io%2Fnexus%2Fvocabulary%myoldstorage\",\n            \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/storage.json\",\n            \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n            \"_rev\": 2,\n            \"_deprecated\": true,\n            \"_createdAt\": \"2019-05-13T14:31:24.661Z\",\n            \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n            \"_updatedAt\": \"2019-05-13T14:32:03.287Z\",\n            \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n        },\n        {\n            \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/mys3storage\",\n            \"@type\": [\n                \"https://bluebrain.github.io/nexus/vocabulary/S3Storage\",\n                \"https://bluebrain.github.io/nexus/vocabulary/Storage\"\n            ],\n            \"_incoming\": \"https://nexus.example.com/v1/storages/myorg/myproj/https%3A%2F%2Fbluebrain.github.io%2Fnexus%2Fvocabulary%2Fmys3storage/outgoing\",\n            \"_outgoing\": \"https://nexus.example.com/v1/storages/myorg/myproj/https%3A%2F%2Fbluebrain.github.io%2Fnexus%2Fvocabulary%2Fmys3storage/outgoing\",\n            \"_self\": \"https://nexus.example.com/v1/storages/myorg/myproj/https%3A%2F%2Fbluebrain.github.io%2Fnexus%2Fvocabulary%2Fmys3storage\",\n            \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/storage.json\",\n            \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n            \"_rev\": 3,\n            \"_deprecated\": false,\n            \"_createdAt\": \"2019-05-13T14:38:51.190Z\",\n            \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n            \"_updatedAt\": \"2019-05-13T16:07:27.859Z\",\n            \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n        }\n    ],\n    \"_next\": \"https://nexus.example.com/v1/storages/myorg/myproj/?after=%5B1557758331190,%22https://bluebrain.github.io/nexus/vocabulary/mys3storage%22%5D\"\n}Full source at GitHub","title":"List storages"},{"location":"/docs/api/1.1/kg/kg-files-api.html","text":"","title":"Files"},{"location":"/docs/api/1.1/kg/kg-files-api.html#files","text":"Files are attachment resources rooted in the /v1/files/{org_label}/{project_label}/ collection.\nEach file…\nbelongs to a project identifier by the label {project_label} inside an organization identifier by the label {org_label}\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nAuthorization notes When modifying files, the caller must have projects/write permissions on the current path of the project or the ancestor paths. When reading files, the caller must have projects/read permissions on the current path of the project or the ancestor paths.","title":"Files"},{"location":"/docs/api/1.1/kg/kg-files-api.html#create-a-file-using-post","text":"POST /v1/files/{org_label}/{project_label}\nThe json payload:\nIf the @id value is found on the payload, this @id will be used. If the @id value is not found on the payload, an @id will be generated as follows: base:{UUID}. The base is the prefix defined on the resource’s project ({project_label}).\nExample\nRequest curl -XPOST -F \"file=@/path/to/myfile.jpg;type=image/jpeg\" \"https://nexus.example.com/v1/files/myorg/myproj\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9\",\n  \"@type\": \"File\",\n  \"_bytes\": 670,\n  \"_digest\": {\n    \"_algorithm\": \"SHA-256\",\n    \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n  },\n  \"_filename\": \"myfile.jpg\",\n  \"_mediaType\": \"image/jpeg\",\n  \"_incoming\": \"https://nexus.example.com/v1/files/myorg/myproj/base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/files/myorg/myproj/base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Create a file using POST"},{"location":"/docs/api/1.1/kg/kg-files-api.html#create-a-file-using-put","text":"This alternative endpoint to create a resource is useful in case the json payload does not contain an @id but you want to specify one. The @id will be specified in the last segment of the endpoint URI.\nPUT /v1/files/{org_label}/{project_label}/{file_id}\nNote that if the payload contains an @id different from the {file_id}, the request will fail.\nExample\nRequest curl -XPUT -F \"file=@/path/to/myfile.jpg;type=image/jpeg\" \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile.jpg\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myfile\",\n  \"@type\": \"File\",\n  \"_bytes\": 670,\n  \"_digest\": {\n    \"_algorithm\": \"SHA-256\",\n    \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n  },\n  \"_filename\": \"myfile.jpg\",\n  \"_mediaType\": \"image/jpeg\",\n  \"_incoming\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Create a file using PUT"},{"location":"/docs/api/1.1/kg/kg-files-api.html#create-a-file-specific-storage-","text":"POST /v1/files/{org_label}/{project_label}?storage={storageId}\nOr\nPUT /v1/files/{org_label}/{project_label}/{file_id}?storage={storageId}\n… where {storageId} selects a specific storage backend where the file will be uploaded.\nExample\nRequest curl -XPOST -F \"file=@/path/to/myfile.jpg;type=image/jpeg\" \"https://nexus.example.com/v1/files/myorg/myproj?storage=nxv:mys3storage\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9\",\n  \"@type\": \"File\",\n  \"_bytes\": 670,\n  \"_digest\": {\n    \"_algorithm\": \"SHA-256\",\n    \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n  },\n  \"_filename\": \"myfile.jpg\",\n  \"_mediaType\": \"image/jpeg\",\n  \"_incoming\": \"https://nexus.example.com/v1/files/myorg/myproj/base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/files/myorg/myproj/base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Create a file (specific storage)"},{"location":"/docs/api/1.1/kg/kg-files-api.html#link-an-existing-file-using-post","text":"Creates a resource from an existing file, provided that the storage backend where it is located supports the operation.\nPOST /v1/files/{org_label}/{project_label}?storage={storageId}\n  {\n    \"filename\": \"myfile.png\",\n    \"path\": \"relative/path/to/myfile.png\",\n    \"mediaType\": \"image/png\"\n  }\n… where {storageId} selects a specific storage backend that supports linking existing files.\nExample\nRequest curl -XPOST \"https://nexus.example.com/v1/files/myorg/myproj?storage=nxv:mys3storage\" -d \\\n'{\n    \"filename\": \"myfile.png\",\n    \"path\": \"relative/path/to/myfile.png\",\n    \"mediaType\": \"image/png\"\n}'Full source at GitHub Payload {\n    \"filename\": \"myfile.png\",\n    \"path\": \"relative/path/to/myfile.png\",\n    \"mediaType\": \"image/png\"\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9\",\n  \"@type\": \"File\",\n  \"_bytes\": 670,\n  \"_digest\": {\n    \"_algorithm\": \"SHA-256\",\n    \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n  },\n  \"_filename\": \"myfile.png\",\n  \"_location\": \"https://s3.us-west-1.amazonaws.com/mybucket/relative/path/to/myfile.png\",\n  \"_mediaType\": \"image/png\",\n  \"_incoming\": \"https://nexus.example.com/v1/files/myorg/myproj/base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/files/myorg/myproj/base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Link an existing file using POST"},{"location":"/docs/api/1.1/kg/kg-files-api.html#link-an-existing-file-using-put","text":"Creates a resource from an existing file, provided that the storage backend where it is located supports the operation.\nThis alternative endpoint allows to specify the resource @id.\nPUT /v1/files/{org_label}/{project_label}/{file_id}?storage={storageId}\n  {\n    \"filename\": \"myfile.png\",\n    \"path\": \"relative/path/to/myfile.png\",\n    \"mediaType\": \"image/png\"\n  }\n… where {storageId} selects a specific storage backend that supports linking existing files.\nExample\nRequest curl -XPUT \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile.png?storage=nxv:mys3storage\" -d \\\n'{\n    \"filename\": \"myfile.png\",\n    \"path\": \"relative/path/to/myfile.png\",\n    \"mediaType\": \"image/png\"\n}'Full source at GitHub Payload {\n    \"filename\": \"myfile.png\",\n    \"path\": \"relative/path/to/myfile.png\",\n    \"mediaType\": \"image/png\"\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9\",\n  \"@type\": \"File\",\n  \"_bytes\": 670,\n  \"_digest\": {\n    \"_algorithm\": \"SHA-256\",\n    \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n  },\n  \"_filename\": \"myfile.png\",\n  \"_location\": \"https://s3.us-west-1.amazonaws.com/mybucket/relative/path/to/myfile.png\",\n  \"_mediaType\": \"image/png\",\n  \"_incoming\": \"https://nexus.example.com/v1/files/myorg/myproj/base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/files/myorg/myproj/base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Link an existing file using PUT"},{"location":"/docs/api/1.1/kg/kg-files-api.html#update-a-file","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to a file without having had seen the previous revision of the file, the last revision needs to be passed as a query parameter.\nPUT /v1/files/{org_label}/{project_label}/{resource_id}?rev={previous_rev}\n… where {previous_rev} is the last known revision number for the resource.\nExample\nRequest curl -XPUT -F \"file=@/path/to/myfile2.png;type=image/png\" \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile.jpg?rev=1\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myfile\",\n  \"@type\": \"File\",\n  \"_bytes\": 2670,\n  \"_digest\": {\n    \"_algorithm\": \"SHA-256\",\n    \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n  },\n  \"_filename\": \"myfile2.png\",\n  \"_mediaType\": \"image/png\",\n  \"_incoming\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Update a file"},{"location":"/docs/api/1.1/kg/kg-files-api.html#tag-a-file","text":"Links a file revision to a specific name.\nTagging a file is considered to be an update as well.\nPOST /v1/files/{org_label}/{project_label}/{file_id}/tags?rev={previous_rev}\n  {\n    \"tag\": \"{name}\",\n    \"rev\": {rev}\n  }\n… where\n{previous_rev}: is the last known revision number for the file. {name}: String - label given to the file at specific revision. {rev}: Number - the revision to link the provided {name}.\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile/tags?rev=2\" -d \\\n'{\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}'Full source at GitHub Payload {\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myfile\",\n  \"@type\": \"File\",\n  \"_bytes\": 2670,\n  \"_digest\": {\n    \"_algorithm\": \"SHA-256\",\n    \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n  },\n  \"_filename\": \"myfile2.png\",\n  \"_mediaType\": \"image/png\",\n  \"_incoming\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 3,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-10-28T12:15:33.238Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Tag a file"},{"location":"/docs/api/1.1/kg/kg-files-api.html#deprecate-a-file","text":"Locks the file, so no further operations can be performed.\nDeprecating a file is considered to be an update as well.\nDELETE /v1/files/{org_label}/{project_label}?rev={previous_rev}\n… where {previous_rev} is the last known revision number for the file.\nExample\nRequest curl -XDELETE \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile/tags?rev=3\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myfile\",\n  \"@type\": \"File\",\n  \"_bytes\": 2670,\n  \"_digest\": {\n    \"_algorithm\": \"SHA-256\",\n    \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n  },\n  \"_filename\": \"myfile2.png\",\n  \"_mediaType\": \"image/png\",\n  \"_incoming\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-12-28T12:15:33.238Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Deprecate a file"},{"location":"/docs/api/1.1/kg/kg-files-api.html#fetch-a-file-current-version-","text":"GET /v1/files/{org_label}/{project_label}/{file_id}\nExample\nRequest (binary) curl \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile.jpg\"Full source at GitHub Request (metadata) curl -H \"Accept: application/json\" \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile.jpg\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myfile\",\n  \"@type\": \"File\",\n  \"_bytes\": 2670,\n  \"_digest\": {\n    \"_algorithm\": \"SHA-256\",\n    \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n  },\n  \"_filename\": \"myfile2.png\",\n  \"_mediaType\": \"image/png\",\n  \"_incoming\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-12-28T12:15:33.238Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Fetch a file (current version)"},{"location":"/docs/api/1.1/kg/kg-files-api.html#fetch-a-resource-specific-version-","text":"GET /v1/files/{org_label}/{project_label}/{file_id}?rev={rev}\n… where {rev} is the revision number of the file to be retrieved.\nExample\nRequest (binary) curl \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile.jpg?rev=4\"Full source at GitHub Request (metadata) curl -H \"Accept: application/json\" \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile.jpg/rev=4\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"nxv:myfile\",\n  \"@type\": \"File\",\n  \"_bytes\": 2670,\n  \"_digest\": {\n    \"_algorithm\": \"SHA-256\",\n    \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n  },\n  \"_filename\": \"myfile2.png\",\n  \"_mediaType\": \"image/png\",\n  \"_incoming\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-12-28T12:15:33.238Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Fetch a resource (specific version)"},{"location":"/docs/api/1.1/kg/kg-files-api.html#fetch-a-resource-specific-tag-","text":"GET /v1/files/{org_label}/{project_label}/{file_id}?tag={tag}\n… where {tag} is the tag of the file to be retrieved.\nExample\nRequest (binary) curl \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile.jpg?tag=mytag\"Full source at GitHub Request (metadata) curl -H \"Accept: application/json\" \"https://nexus.example.com/v1/files/myorg/myproj/nxv:myfile.jpg/tag=mytag\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9\",\n  \"@type\": \"File\",\n  \"_bytes\": 670,\n  \"_digest\": {\n    \"_algorithm\": \"SHA-256\",\n    \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n  },\n  \"_filename\": \"myfile.jpg\",\n  \"_mediaType\": \"image/jpeg\",\n  \"_incoming\": \"https://nexus.example.com/v1/files/myorg/myproj/base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/files/myorg/myproj/base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/base:d8848d4c-68f7-4ffd-952f-63a8cbcb86a9\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-28T12:15:33.238Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Fetch a resource (specific tag)"},{"location":"/docs/api/1.1/kg/kg-files-api.html#list-files","text":"GET /v1/files/{org_label}/{project_label}?from={from}&size={size}&deprecated={deprecated}&rev={rev}&type={type}&createdBy={createdBy}&updatedBy={updatedBy}&q={search}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting files based on their deprecation status {rev}: Number - can be used to filter the resulting files based on their revision value {type}: Iri - can be used to filter the resulting files based on their @type value. This parameter can appear multiple times, filtering further the @type value. {createdBy}: Iri - can be used to filter the resulting files based on their creator {updatedBy}: Iri - can be used to filter the resulting files based on the person which performed the last update {search}: String - can be provided to select only the files in the collection that have attribute values matching (containing) the provided string\nExample\nRequest curl \"https://nexus.example.com/v1/files/myorg/myproj\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 2,\n  \"_results\": [\n    {\n      \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/myfile\",\n      \"@type\": \"https://bluebrain.github.io/nexus/vocabulary/File\",\n      \"_bytes\": 670,\n      \"_digest\": {\n        \"_algorithm\": \"SHA-256\",\n        \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n      },\n      \"_filename\": \"myfile.jpg\",\n      \"_mediaType\": \"image/jpeg\",\n      \"_incoming\": \"https://nexus.example.com/v1/files/myorg/myproj/https%3A%2F%2Fbluebrain.github.io%2Fnexus%2Fvocabulary%2Fmyfile/incoming\",\n      \"_outgoing\": \"https://nexus.example.com/v1/files/myorg/myproj/https%3A%2F%2Fbluebrain.github.io%2Fnexus%2Fvocabulary%2Fmyfile/outgoing\",\n      \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/https%3A%2F%2Fbluebrain.github.io%2Fnexus%2Fvocabulary%2Fmyfile\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n      \"_updatedAt\": \"2019-01-28T12:15:33.238Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/mybase/d8848d4c-68f7-4ffd-952f-63a8cbcb86a9\",\n      \"@type\": \"https://bluebrain.github.io/nexus/vocabulary/File\",\n      \"_bytes\": 2670,\n      \"_digest\": {\n        \"_algorithm\": \"SHA-256\",\n        \"_value\": \"25fc54fba0beec17a598b5a68420ded1595b2f76f0a0b7c6077792ece828bc2e\"\n      },\n      \"_filename\": \"myfile2.png\",\n      \"_mediaType\": \"image/png\",\n      \"_incoming\": \"https://nexus.example.com/v1/files/myorg/myproj/https%3A%2F%2Fnexus.example.com%2Fmybase%2Fd8848d4c-68f7-4ffd-952f-63a8cbcb86a9/incoming\",\n      \"_outgoing\": \"https://nexus.example.com/v1/files/myorg/myproj/https%3A%2F%2Fnexus.example.com%2Fmybase%2Fd8848d4c-68f7-4ffd-952f-63a8cbcb86a9/outgoing\",\n      \"_self\": \"https://nexus.example.com/v1/files/myorg/myproj/https%3A%2F%2Fnexus.example.com%2Fmybase%2Fd8848d4c-68f7-4ffd-952f-63a8cbcb86a9\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/file.json\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_rev\": 1,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2019-01-28T12:15:33.238Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n      \"_updatedAt\": \"2019-12-28T12:15:33.238Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n    }\n  ],\n  \"_next\": \"https://nexus.example.com/v1/files/myorg/myproj?after=%5B1559045718752,%22https://nexus.example.com/mybase/d8848d4c-68f7-4ffd-952f-63a8cbcb86a9%22%5D\"\n}Full source at GitHub","title":"List files"},{"location":"/docs/api/1.1/kg/kg-resources-api.html","text":"","title":"Resources"},{"location":"/docs/api/1.1/kg/kg-resources-api.html#resources","text":"Generic resources are rooted in the /v1/resources/{org_label}/{project_label}/{schema_id} collection.\nEach resource…\nbelongs to a project identifier by the label {project_label} inside an organization identifier by the label {org_label} it is validated against a schema with id {schema_id}. In case of using _ for this segment, the schema segment reads as irrelevant.\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nAuthorization notes When modifying resources, the caller must have resources/write permissions on the current path of the project or the ancestor paths. When reading resources, the caller must have resources/read permissions on the current path of the project or the ancestor paths.","title":"Resources"},{"location":"/docs/api/1.1/kg/kg-resources-api.html#create-a-resource-using-post","text":"POST /v1/resources/{org_label}/{project_label}/{schema_id}\n  {...}\nThe json payload:\nIf the @id value is found on the payload, this @id will be used. If the @id value is not found on the payload, an @id will be generated as follows: base:{UUID}. The base is the prefix defined on the resource’s project ({project_label}).\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resources/myorg/myproj/myschema\" -d \\\n'{\n  \"@context\": {\n    \"ex\": \"http://example.com/\",\n    \"@vocab\": \"http://example.com/\"\n  },\n  \"@type\": \"ex:Custom\",\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"bool\": false\n}'Full source at GitHub Payload {\n  \"@context\": {\n    \"ex\": \"http://example.com/\",\n    \"@vocab\": \"http://example.com/\"\n  },\n  \"@type\": \"ex:Custom\",\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"bool\": false\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_incoming\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create a resource using POST"},{"location":"/docs/api/1.1/kg/kg-resources-api.html#create-a-resource-using-put","text":"This alternative endpoint to create a resource is useful in case the json payload does not contain an @id but you want to specify one. The @id will be specified in the last segment of the endpoint URI.\nPUT /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}\n  {...}\nNote that if the payload contains an @id different from the {resource_id}, the request will fail.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\" -d \\\n'{\n  \"@context\": {\n    \"ex\": \"http://example.com/\",\n    \"@vocab\": \"http://example.com/\"\n  },\n  \"@type\": \"ex:Custom\",\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"bool\": false\n}'Full source at GitHub Payload {\n  \"@context\": {\n    \"ex\": \"http://example.com/\",\n    \"@vocab\": \"http://example.com/\"\n  },\n  \"@type\": \"ex:Custom\",\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"bool\": false\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_incoming\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create a resource using PUT"},{"location":"/docs/api/1.1/kg/kg-resources-api.html#update-a-resource","text":"This operation overrides the payload.\nIn order to ensure a client does not perform any changes to a resource without having had seen the previous revision of the resource, the last revision needs to be passed as a query parameter.\nPUT /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}?rev={previous_rev}\n  {...}\n… where {previous_rev} is the last known revision number for the resource.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0?rev=1\" -d \\\n'{\n  \"@context\": {\n    \"ex\": \"http://example.com/\",\n    \"@vocab\": \"http://example.com/\"\n  },\n  \"@type\": \"ex:Custom\",\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"bool\": false\n}'Full source at GitHub Payload {\n  \"@context\": {\n    \"ex\": \"http://example.com/\",\n    \"@vocab\": \"http://example.com/\"\n  },\n  \"@type\": \"ex:Custom\",\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"bool\": false\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_incoming\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:56:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Update a resource"},{"location":"/docs/api/1.1/kg/kg-resources-api.html#tag-a-resource","text":"Links a resource revision to a specific name.\nTagging a resource is considered to be an update as well.\nPOST /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}/tags?rev={previous_rev}\n  {\n    \"tag\": \"{name}\",\n    \"rev\": {rev}\n  }\n… where\n{previous_rev}: is the last known revision number for the resource. {name}: String - label given to the resources at specific revision. {rev}: Number - the revision to link the provided {name}.\nExample\nRequest curl -XPOST -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/tags?rev=2\" -d \\\n'{\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}'Full source at GitHub Payload {\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_incoming\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 3,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:58:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Tag a resource"},{"location":"/docs/api/1.1/kg/kg-resources-api.html#deprecate-a-resource","text":"Locks the resource, so no further operations can be performed. It also deletes the resource from listing/querying results.\nDeprecating a resource is considered to be an update as well.\nDELETE /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}?rev={previous_rev}\n… where {previous_rev} is the last known revision number for the resource.\nExample\nRequest curl -XDELETE -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0?rev=5\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"http://example.com/Custom\",\n  \"_incoming\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 6,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:02:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Deprecate a resource"},{"location":"/docs/api/1.1/kg/kg-resources-api.html#fetch-a-resource-current-version-","text":"GET /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\"Full source at GitHub Response {\n  \"@context\": [\n    {\n      \"@vocab\": \"http://example.com/\",\n      \"ex\": \"http://example.com/\"\n    },\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"Custom\",\n  \"bool\": false,\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"_incoming\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:02:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a resource (current version)"},{"location":"/docs/api/1.1/kg/kg-resources-api.html#fetch-a-resource-specific-version-","text":"GET /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}?rev={rev}\n… where {rev} is the revision number of the resource to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    {\n      \"@vocab\": \"http://example.com/\",\n      \"ex\": \"http://example.com/\"\n    },\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"Custom\",\n  \"bool\": false,\n  \"name\": \"Alex\",\n  \"number\": 24,\n  \"_incoming\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 4,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T15:02:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a resource (specific version)"},{"location":"/docs/api/1.1/kg/kg-resources-api.html#fetch-a-resource-specific-tag-","text":"GET /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}?tag={tag}\n… where {tag} is the tag of the resource to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0?tag=mytag\"Full source at GitHub Response {\n  \"@context\": [\n    {\n      \"@vocab\": \"http://example.com/\",\n      \"ex\": \"http://example.com/\"\n    },\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"@type\": \"Custom\",\n  \"_incoming\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/incoming\",\n  \"_outgoing\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/outgoing\",\n  \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n  \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n  \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-17T14:54:42.939Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Fetch a resource (specific tag)"},{"location":"/docs/api/1.1/kg/kg-resources-api.html#list-resources","text":"GET /v1/resources/{org_label}/{project_label}?from={from}&size={size}&deprecated={deprecated}&rev={rev}&type={type}&createdBy={createdBy}&updatedBy={updatedBy}&schema={schema}&q={search}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting resources based on their deprecation status {rev}: Number - can be used to filter the resulting resources based on their revision value {type}: Iri - can be used to filter the resulting resources based on their @type value. This parameter can appear multiple times, filtering further the @type value. {createdBy}: Iri - can be used to filter the resulting resources based on their creator {updatedBy}: Iri - can be used to filter the resulting resources based on the person which performed the last update {schema}: Iri - can be used to filter the resulting resources based on the conformant schema {search}: String - can be provided to select only the resources in the collection that have attribute values matching (containing) the provided string\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 1,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n      \"@type\": \"http://example.com/Custom\",\n      \"_incoming\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/incoming\",\n      \"_outgoing\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/outgoing\",\n      \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-17T15:02:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    }\n  ],\n  \"_next\": \"https://nexus.example.com/v1/resources/myorg/myproj?after=%5B1559045718752,%22https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b029%22%5D\"\n}Full source at GitHub","title":"List resources"},{"location":"/docs/api/1.1/kg/kg-resources-api.html#list-resources-belonging-to-a-schema","text":"GET /v1/resources/{org_label}/{project_label}/{schemaId}?from={from}&size={size}&deprecated={deprecated}&rev={rev}&type={type}&createdBy={createdBy}&updatedBy={updatedBy}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {deprecated}: Boolean - can be used to filter the resulting resources based on their deprecation status {rev}: Number - can be used to filter the resulting resources based on their revision value {type}: Iri - can be used to filter the resulting resources based on their @type value. This parameter can appear multiple times, filtering further the @type value. {createdBy}: Iri - can be used to filter the resulting resources based on their creator {updatedBy}: Iri - can be used to filter the resulting resources based on the person which performed the last update\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj/myschema\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 1,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n      \"@type\": \"http://example.com/Custom\",\n      \"_incoming\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/incoming\",\n      \"_outgoing\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/outgoing\",\n      \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/resource\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproj\",\n      \"_rev\": 4,\n      \"_deprecated\": true,\n      \"_createdAt\": \"2018-09-17T14:54:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-17T15:02:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    }\n  ],\n  \"_next\": \"https://nexus.example.com/v1/resources/myorg/myproj?after=%5B1559045718752,%22https://nexus.example.com/v1/resources/myorg/myproj/fd8a2b32-170e-44e8-808f-44a8cbbc49b029%22%5D\"\n}Full source at GitHub","title":"List resources belonging to a schema"},{"location":"/docs/api/1.1/kg/kg-resources-api.html#list-incoming-links","text":"Provides a list of resources where the current resource {resource_id} is being referenced in the payload.\nGET /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}/incoming?from={from}&size={size}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/incoming\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 1,\n  \"_results\": [\n    {\n      \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/reconstruction1\",\n      \"@type\": [\n        \"https://nexus.example.com/v1/vocabs/myorg/myproject/Entity\",\n        \"https://nexus.example.com/v1/vocabs/myorg/myproject/Dataset\",\n        \"https://nexus.example.com/v1/vocabs/myorg/myproject/ReconstructedPatchedCell\"\n      ],\n      \"paths\": \"https://nexus.example.com/v1/vocabs/myorg/myproject/subject\",\n      \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproject/_/https://bluebrain.github.io/nexus/vocabulary/reconstruction1\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/unconstrained.json\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n      \"_rev\": 4,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2019-05-28T13:28:00.186Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2019-05-29T13:41:45.357Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    }\n  ]\n}Full source at GitHub","title":"List incoming links"},{"location":"/docs/api/1.1/kg/kg-resources-api.html#list-outgoing-links","text":"Provides a list of resources that are being used in the current resource {resource_id} payload. It also offers information\nGET /v1/resources/{org_label}/{project_label}/{schema_id}/{resource_id}/outgoing?from={from}&size={size}&includeExternalLinks={includeExternalLinks}\nwhere…\n{from}: Number - is the parameter that describes the offset for the current query; defaults to 0 {size}: Number - is the parameter that limits the number of results; defaults to 20 {includeExternalLinks}: Boolean - flag to decide whether or not external links are to be included. External links are references to resources in other projects, or even resources external to Nexus; defaults to true\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproj/myschema/base:fd8a2b32-170e-44e8-808f-44a8cbbc49b0/outgoing?includeExternalLinks=true\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/search.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"_total\": 4,\n  \"_results\": [\n    {\n      \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/mouse1\",\n      \"@type\": [\n        \"https://nexus.example.com/v1/vocabs/myorg/myproject/Entity\",\n        \"https://nexus.example.com/v1/vocabs/myorg/myproject/Subject\"\n      ],\n      \"paths\": \"https://nexus.example.com/v1/vocabs/myorg/myproject/subject\",\n      \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproject/_/https://bluebrain.github.io/nexus/vocabulary/mouse1\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/unconstrained.json\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n      \"_rev\": 1,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2019-05-28T13:27:42.707Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2019-05-28T13:27:42.707Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    },\n    {\n      \"@id\": \"https://bluebrain.github.io/nexus/vocabulary/jane\",\n      \"@type\": [\n        \"https://nexus.example.com/v1/vocabs/myorg/myproject/Agent\",\n        \"https://nexus.example.com/v1/vocabs/myorg/myproject/Person\"\n      ],\n      \"paths\": [\n        \"https://nexus.example.com/v1/vocabs/myorg/myproject/contribution\",\n        \"https://nexus.example.com/v1/vocabs/myorg/myproject/agent\"\n      ],\n      \"_self\": \"https://nexus.example.com/v1/resources/myorg/myproject/_/https://bluebrain.github.io/nexus/vocabulary/jane\",\n      \"_constrainedBy\": \"https://bluebrain.github.io/nexus/schemas/unconstrained.json\",\n      \"_project\": \"https://nexus.example.com/v1/projects/myorg/myproject\",\n      \"_rev\": 1,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2019-05-28T13:26:27.627Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2019-05-28T13:26:27.627Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    },\n    {\n      \"@id\": \"http://uri.interlex.org/base/ilx_0383233\",\n      \"@type\": \"https://nexus.example.com/v1/vocabs/myorg/myproject/MType\",\n      \"paths\": [\n        \"https://nexus.example.com/v1/vocabs/myorg/myproject/annotation\",\n        \"https://nexus.example.com/v1/vocabs/myorg/myproject/hasBody\"\n      ]\n    },\n    {\n      \"@id\": \"http://purl.obolibrary.org/obo/UBERON_0008933\",\n      \"paths\": [\n        \"https://nexus.example.com/v1/vocabs/myorg/myproject/brainLocation\",\n        \"https://nexus.example.com/v1/vocabs/myorg/myproject/brainRegion\"\n      ]\n    }\n  ]\n}Full source at GitHub","title":"List outgoing links"},{"location":"/docs/api/1.1/kg/kg-resources-api.html#resources-server-sent-events","text":"This endpoint allows clients to receive automatic updates from the realms in a streaming fashion.\nThe server sent events response contains a series of resource events, represented in the following way\ndata:{payload}\nevent:{type}\nid:{id}\nwhere…\n{payload}: Json - is the actual payload of the current resource {type}: String - is a type identifier for the current realm. Possible types are: Created, Updated, Deprecated, TagAdded, FileCreated, FileUpdated {id}: String - is the identifier of the resource event. It can be used in the Last-Event-Id query parameter","title":"Resources Server Sent Events"},{"location":"/docs/api/1.1/kg/kg-resources-api.html#server-sent-events-all-resources","text":"GET /v1/resources/events\nwhere Last-Event-Id is an optional HTTP Header that identifies the last consumed resource event. It can be used for cases when a client does not want to retrieve the whole event stream, but to start after a specific event.\nExample\nRequest curl \"https://nexus.example.com/v1/resources/events\"Full source at GitHub Response data:{\"@context\":\"https://bluebrain.github.io/nexus/contexts/resource.json\",\"@type\":\"Created\",\"_resourceId\":\"https://nexus.example.com/v1/resources/myorg/myproject/_/7887416b-d501-4508-a625-2a6664dfca94\",\"_source\":{\"@type\":\"Hobbit\",\"age\":23,\"name\":\"Frodo\"},\"_types\":[\"https://nexus.example.com/v1/vocabs/myorg/myproject/Hobbit\"],\"_constrainedBy\":\"https://bluebrain.github.io/nexus/schemas/unconstrained.json\",\"_projectUuid\":\"1089947c-dc76-4cbc-8b04-3f919b436828\",\"_organizationUuid\":\"ba7053ba-54ea-41b6-baab-96ec1acd7ad4\",\"_instant\":\"2019-06-24T07:35:47.447631Z\",\"_subject\":\"https://nexus.example.com/v1/realms/github/users/myuser\"}\nevent:Created\nid:aebbf8f4-9652-11e9-89a7-6d3c5701d287\n\ndata:{\"@context\":\"https://bluebrain.github.io/nexus/contexts/resource.json\",\"@type\":\"Updated\",\"_resourceId\":\"https://nexus.example.com/v1/resources/myorg/myproject/_/7887416b-d501-4508-a625-2a6664dfca94\",\"_source\":{\"@type\":\"Hobbit\",\"age\":25,\"name\":\"Frodo\"},\"_types\":[\"https://nexus.example.com/v1/vocabs/myorg/myproject/Hobbit\"],\"_projectUuid\":\"1089947c-dc76-4cbc-8b04-3f919b436828\",\"_organizationUuid\":\"ba7053ba-54ea-41b6-baab-96ec1acd7ad4\",\"_rev\":2,\"_instant\":\"2019-06-24T07:36:27.130185Z\",\"_subject\":\"https://nexus.example.com/v1/realms/github/users/myuser\"}\nevent:Updated\nid:c6642f90-9652-11e9-89a7-6d3c5701d287\n\ndata:{\"@context\":\"https://bluebrain.github.io/nexus/contexts/resource.json\",\"@type\":\"Deprecated\",\"_resourceId\":\"https://nexus.example.com/v1/resources/myorg/myproject/_/7887416b-d501-4508-a625-2a6664dfca94\",\"_types\":[\"https://nexus.example.com/v1/vocabs/myorg/myproject/Hobbit\"],\"_projectUuid\":\"1089947c-dc76-4cbc-8b04-3f919b436828\",\"_organizationUuid\":\"ba7053ba-54ea-41b6-baab-96ec1acd7ad4\",\"_rev\":3,\"_instant\":\"2019-06-24T07:36:40.558514Z\",\"_subject\":\"https://nexus.example.com/v1/realms/github/users/myuser\"}\nevent:Deprecated\nid:ce6549e0-9652-11e9-89a7-6d3c5701d287\n\ndata:{\"@context\":\"https://bluebrain.github.io/nexus/contexts/resource.json\",\"@type\":\"FileCreated\",\"_resourceId\":\"https://nexus.example.com/v1/resources/otherorg/myproject/_/myfile\",\"_attributes\":{\"_bytes\":48144,\"_digest\":{\"_value\":\"721d03056b82a22c54f30fd3c68b41dfe5f53828911984e47182d82cfbac9f36\",\"_algorithm\":\"SHA-256\"},\"_filename\":\"brain.jpg\",\"_location\":\"file:///opt/binaries/1089947c-dc76-4cbc-8b04-3f919b436828/b/8/4/a/b/f/9/c/brain.jpg\",\"_mediaType\":\"image/jpeg\"},\"_storage\":{\"@type\":\"DiskStorage\",\"_storageId\":\"https://bluebrain.github.io/nexus/vocabulary/diskStorageDefault\",\"default\":true,\"volume\":\"/opt/binaries\",\"readPermission\":\"resources/read\",\"writePermission\":\"files/write\"},\"_projectUuid\":\"1089947c-dc76-4cbc-8b04-3f919b436828\",\"_organizationUuid\":\"aa7053ba-54ea-41b6-baab-96ec1acd7a44\",\"_instant\":\"2019-06-24T07:37:10.311391Z\",\"_subject\":\"https://nexus.example.com/v1/realms/github/users/myuser\"}\nevent:FileCreated\nid:e024e5f0-9652-11e9-89a7-6d3c5701d287Full source at GitHub","title":"Server Sent Events all resources"},{"location":"/docs/api/1.1/kg/kg-resources-api.html#server-sent-events-organization-resources","text":"GET /v1/resources/{org_label}/events\nwhere\n{org_label}: String - the selected organization for which the events are going to be filtered Last-Event-Id: String - optional HTTP Header that identifies the last consumed resource event. It can be used for cases when a client does not want to retrieve the whole event stream, but to start after a specific event.\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/events\"Full source at GitHub Response data:{\"@context\":\"https://bluebrain.github.io/nexus/contexts/resource.json\",\"@type\":\"Created\",\"_resourceId\":\"https://nexus.example.com/v1/resources/myorg/myproject/_/7887416b-d501-4508-a625-2a6664dfca94\",\"_source\":{\"@type\":\"Hobbit\",\"age\":23,\"name\":\"Frodo\"},\"_types\":[\"https://nexus.example.com/v1/vocabs/myorg/myproject/Hobbit\"],\"_constrainedBy\":\"https://bluebrain.github.io/nexus/schemas/unconstrained.json\",\"_projectUuid\":\"1089947c-dc76-4cbc-8b04-3f919b436828\",\"_organizationUuid\":\"ba7053ba-54ea-41b6-baab-96ec1acd7ad4\",\"_instant\":\"2019-06-24T07:35:47.447631Z\",\"_subject\":\"https://nexus.example.com/v1/realms/github/users/myuser\"}\nevent:Created\nid:aebbf8f4-9652-11e9-89a7-6d3c5701d287\n\ndata:{\"@context\":\"https://bluebrain.github.io/nexus/contexts/resource.json\",\"@type\":\"Updated\",\"_resourceId\":\"https://nexus.example.com/v1/resources/myorg/myproject/_/7887416b-d501-4508-a625-2a6664dfca94\",\"_source\":{\"@type\":\"Hobbit\",\"age\":25,\"name\":\"Frodo\"},\"_types\":[\"https://nexus.example.com/v1/vocabs/myorg/myproject/Hobbit\"],\"_projectUuid\":\"1089947c-dc76-4cbc-8b04-3f919b436828\",\"_organizationUuid\":\"ba7053ba-54ea-41b6-baab-96ec1acd7ad4\",\"_rev\":2,\"_instant\":\"2019-06-24T07:36:27.130185Z\",\"_subject\":\"https://nexus.example.com/v1/realms/github/users/myuser\"}\nevent:Updated\nid:c6642f90-9652-11e9-89a7-6d3c5701d287\n\ndata:{\"@context\":\"https://bluebrain.github.io/nexus/contexts/resource.json\",\"@type\":\"Deprecated\",\"_resourceId\":\"https://nexus.example.com/v1/resources/myorg/myproject/_/7887416b-d501-4508-a625-2a6664dfca94\",\"_types\":[\"https://nexus.example.com/v1/vocabs/myorg/myproject/Hobbit\"],\"_projectUuid\":\"1089947c-dc76-4cbc-8b04-3f919b436828\",\"_organizationUuid\":\"ba7053ba-54ea-41b6-baab-96ec1acd7ad4\",\"_rev\":3,\"_instant\":\"2019-06-24T07:36:40.558514Z\",\"_subject\":\"https://nexus.example.com/v1/realms/github/users/myuser\"}\nevent:Deprecated\nid:ce6549e0-9652-11e9-89a7-6d3c5701d287Full source at GitHub","title":"Server Sent Events organization resources"},{"location":"/docs/api/1.1/kg/kg-resources-api.html#server-sent-events-project-resources","text":"GET /v1/resources/{org_label}/{project_label}/events\nwhere\n{org_label}: String - the selected organization for which the events are going to be filtered {project_label}: String - the selected project for which the events are going to be filtered Last-Event-Id: String - optional HTTP Header that identifies the last consumed resource event. It can be used for cases when a client does not want to retrieve the whole event stream, but to start after a specific event.\nExample\nRequest curl \"https://nexus.example.com/v1/resources/myorg/myproject/events\"Full source at GitHub Response data:{\"@context\":\"https://bluebrain.github.io/nexus/contexts/resource.json\",\"@type\":\"Created\",\"_resourceId\":\"https://nexus.example.com/v1/resources/myorg/myproject/_/7887416b-d501-4508-a625-2a6664dfca94\",\"_source\":{\"@type\":\"Hobbit\",\"age\":23,\"name\":\"Frodo\"},\"_types\":[\"https://nexus.example.com/v1/vocabs/myorg/myproject/Hobbit\"],\"_constrainedBy\":\"https://bluebrain.github.io/nexus/schemas/unconstrained.json\",\"_projectUuid\":\"1089947c-dc76-4cbc-8b04-3f919b436828\",\"_organizationUuid\":\"ba7053ba-54ea-41b6-baab-96ec1acd7ad4\",\"_instant\":\"2019-06-24T07:35:47.447631Z\",\"_subject\":\"https://nexus.example.com/v1/realms/github/users/myuser\"}\nevent:Created\nid:aebbf8f4-9652-11e9-89a7-6d3c5701d287\n\ndata:{\"@context\":\"https://bluebrain.github.io/nexus/contexts/resource.json\",\"@type\":\"Updated\",\"_resourceId\":\"https://nexus.example.com/v1/resources/myorg/myproject/_/7887416b-d501-4508-a625-2a6664dfca94\",\"_source\":{\"@type\":\"Hobbit\",\"age\":25,\"name\":\"Frodo\"},\"_types\":[\"https://nexus.example.com/v1/vocabs/myorg/myproject/Hobbit\"],\"_projectUuid\":\"1089947c-dc76-4cbc-8b04-3f919b436828\",\"_organizationUuid\":\"ba7053ba-54ea-41b6-baab-96ec1acd7ad4\",\"_rev\":2,\"_instant\":\"2019-06-24T07:36:27.130185Z\",\"_subject\":\"https://nexus.example.com/v1/realms/github/users/myuser\"}\nevent:Updated\nid:c6642f90-9652-11e9-89a7-6d3c5701d287\n\ndata:{\"@context\":\"https://bluebrain.github.io/nexus/contexts/resource.json\",\"@type\":\"Deprecated\",\"_resourceId\":\"https://nexus.example.com/v1/resources/myorg/myproject/_/7887416b-d501-4508-a625-2a6664dfca94\",\"_types\":[\"https://nexus.example.com/v1/vocabs/myorg/myproject/Hobbit\"],\"_projectUuid\":\"1089947c-dc76-4cbc-8b04-3f919b436828\",\"_organizationUuid\":\"ba7053ba-54ea-41b6-baab-96ec1acd7ad4\",\"_rev\":3,\"_instant\":\"2019-06-24T07:36:40.558514Z\",\"_subject\":\"https://nexus.example.com/v1/realms/github/users/myuser\"}\nevent:Deprecated\nid:ce6549e0-9652-11e9-89a7-6d3c5701d287Full source at GitHub","title":"Server Sent Events project resources"},{"location":"/docs/api/1.1/iam/index.html","text":"","title":"Identity & Access Management API"},{"location":"/docs/api/1.1/iam/index.html#identity-access-management-api","text":"The IAM API provides operations on three types of resources, realms, permissions and acls.","title":"Identity & Access Management API"},{"location":"/docs/api/1.1/iam/index.html#realms","text":"A realm provides with the necessary information to perform authentication against a certain OIDC provider .\nOperations on realms","title":"Realms"},{"location":"/docs/api/1.1/iam/index.html#permissions","text":"A permission is the basic unit to provide a way to limit applications’ access to sensitive information.\nOperations on permisions","title":"Permissions"},{"location":"/docs/api/1.1/iam/index.html#acls","text":"In order to restrict applications’ access to data by placing restrictions on them, three parameters are important:\npermission: the value used to limit a client (user, group) access to resources. identity: a client identity reference, e.g. a certain user, a group, an anonymous user or someone who is authenticated to a certain realm. path: the location where to apply the restrictions\nAn ACL defines the set of permissions that certain identities have on a concrete path.\nOperations on ACLs","title":"ACLs"},{"location":"/docs/api/1.1/iam/index.html#identities","text":"Identities endpoint can be used to fetch user identities.\nOperations on identities","title":"Identities"},{"location":"/docs/api/1.1/iam/iam-realms-api.html","text":"","title":"Realms"},{"location":"/docs/api/1.1/iam/iam-realms-api.html#realms","text":"Realms are rooted in /v1/realms collection.\nEach realm defines a specific authentication provider. Any of the authentication providers can be used to obtain access tokens that can be used with Nexus.\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nAuthorization notes When modifying realms, the caller must have realms/write permissions on the path /. When reading realms, the caller must have realms/read permissions on the path /.","title":"Realms"},{"location":"/docs/api/1.1/iam/iam-realms-api.html#create-a-realm","text":"This operation creates a realm.\nPUT /v1/realms/{realm}\nThe following examples describe the payload used to create a realm.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/realms/realm1\" \\\n    -d '{\"name\":\"Nexus Dev\",\"openIdConfig\":\"https://nexus.example.com/auth/realms/bbp-test/.well-known/openid-configuration\",\"logo\":\"http://nexus.example.com/logo.png\"}'Full source at GitHub Payload {\n  \"name\": \"Nexus Dev\",\n  \"openIdConfig\": \"https://nexus.example.com/auth/realms/bbp-test/.well-known/openid-configuration\",\n  \"logo\": \"http://nexus.example.com/logo.png\"\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/realms/realm1\",\n  \"@type\": \"Realm\",\n  \"_label\": \"realm1\",\n  \"_rev\": 1,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub\nThe logo parameter is optional.","title":"Create a realm"},{"location":"/docs/api/1.1/iam/iam-realms-api.html#update-a-realm","text":"This operation updates a realm.\nPUT /v1/realms/{realm}?rev={previous_rev}\n  {...}\nwhere {previous_rev} is the last known revision number for the realm. The json payload should be the same as the one used to create realms.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/realms/realm1?rev=1\" \\\n    -d '{\"name\":\"Nexus Dev\",\"openIdConfig\":\"https://nexus.example.com/auth/realms/bbp-test/.well-known/openid-configuration\",\"logo\":\"http://nexus.example.com/logo.png\"}'Full source at GitHub Payload {\n  \"name\": \"Nexus Dev\",\n  \"openIdConfig\": \"https://nexus.example.com/auth/realms/bbp-test/.well-known/openid-configuration\",\n  \"logo\": \"http://nexus.example.com/logo.png\"\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/realms/realm1\",\n  \"@type\": \"Realm\",\n  \"_label\": \"realm1\",\n  \"_rev\": 2,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Update a realm"},{"location":"/docs/api/1.1/iam/iam-realms-api.html#deprecate-a-realm","text":"This operation deprecates a realm. After deprecation, realms loose their metadata\nDELETE /v1/realms/{realm}?rev={previous_rev} {...}\nwhere {previous_rev} is the last known revision number for the realm.\nRequest curl -XDELETE  -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/realms/realm1?rev=2\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/realms/realm1\",\n  \"@type\": \"Realm\",\n  \"_label\": \"realm1\",\n  \"_rev\": 3,\n  \"_deprecated\": true,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:25:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Deprecate a realm"},{"location":"/docs/api/1.1/iam/iam-realms-api.html#list-realms","text":"Lists all available realms.\nGET /v1/realms?deprecated={deprecated}&rev={rev}&type={type}&createdBy={createdBy}&updatedBy={updatedBy}\nwhere…\n{deprecated}: Boolean - can be used to filter the resulting realms based on their deprecation status {rev}: Number - can be used to filter the resulting realms based on their revision value {type}: Iri - can be used to filter the resulting realms based on their @type value. This parameter can appear multiple times, filtering further the @type value. {createdBy}: Iri - can be used to filter the resulting realms based on their creator {updatedBy}: Iri - can be used to filter the resulting realms based on the person which performed the last update\nRequest curl \"https://nexus.example.com/v1/realms\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\"\n  ],\n  \"_total\": 2,\n  \"_results\": [\n    {\n      \"@id\": \"http://nexus.example.com/v1/realms/realm1\",\n      \"@type\": \"Realm\",\n      \"name\": \"Github Dev\",\n      \"openIdConfig\": \"http://nexus.example.com/auth/realms/realm1/.well-known/openid-configuration\",\n      \"_label\": \"realm1\",\n      \"_grantTypes\": [\n        \"password\",\n        \"clientCredentials\",\n        \"refreshToken\",\n        \"authorizationCode\",\n        \"implicit\"\n      ],\n      \"_issuer\": \"http://nexus.example.com/auth/realms/realm1\",\n      \"_authorizationEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/auth\",\n      \"_tokenEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/token\",\n      \"_userInfoEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/userinfo\",\n      \"_endSessionEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/logout\",\n      \"_rev\": 3,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2019-01-22T10:50:47.351Z\",\n      \"_createdBy\": \"http://nexus.example.com/v1/anonymous\",\n      \"_updatedAt\": \"2019-01-22T12:24:13.029Z\",\n      \"_updatedBy\": \"http://nexus.example.com/v1/anonymous\"\n    },\n    {\n      \"@id\": \"http://nexus.example.com/v1/realms/realm2\",\n      \"@type\": \"Realm\",\n      \"name\": \"Realm 2\",\n      \"openIdConfig\": \"http://nexus.example.com/auth/realms/realm2/.well-known/openid-configuration\",\n      \"_label\": \"realm2\",\n      \"_grantTypes\": [\n        \"password\",\n        \"clientCredentials\",\n        \"refreshToken\",\n        \"authorizationCode\",\n        \"implicit\"\n      ],\n      \"_issuer\": \"http://nexus.example.com/auth/realms/realm2\",\n      \"_authorizationEndpoint\": \"http://nexus.example.com/auth/realms/realm2/protocol/openid-connect/auth\",\n      \"_tokenEndpoint\": \"http://nexus.example.com/auth/realms/realm2/protocol/openid-connect/token\",\n      \"_userInfoEndpoint\": \"http://nexus.example.com/auth/realms/realm2/protocol/openid-connect/userinfo\",\n      \"_endSessionEndpoint\": \"http://nexus.example.com/auth/realms/realm2/protocol/openid-connect/logout\",\n      \"_rev\": 1,\n      \"_deprecated\": false,\n      \"_createdAt\": \"2019-01-22T12:22:50.738Z\",\n      \"_createdBy\": \"http://nexus.example.com/v1/anonymous\",\n      \"_updatedAt\": \"2019-01-22T12:22:50.738Z\",\n      \"_updatedBy\": \"http://nexus.example.com/v1/anonymous\"\n    }\n  ]\n}Full source at GitHub","title":"List realms"},{"location":"/docs/api/1.1/iam/iam-realms-api.html#fetch-a-realm-current-version-","text":"GET /v1/realms/{realm}\nExample\nRequest curl \"https://nexus.example.com/v1/realms/realm1\"Full source at GitHub Response {\n  \"@id\": \"http://nexus.example.com/v1/realms/realm1\",\n  \"@type\": \"Realm\",\n  \"name\": \"Github Dev\",\n  \"openIdConfig\": \"http://nexus.example.com/auth/realms/realm1/.well-known/openid-configuration\",\n  \"_label\": \"realm1\",\n  \"_grantTypes\": [\n    \"password\",\n    \"clientCredentials\",\n    \"refreshToken\",\n    \"authorizationCode\",\n    \"implicit\"\n  ],\n  \"_issuer\": \"http://nexus.example.com/auth/realms/realm1\",\n  \"_authorizationEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/auth\",\n  \"_tokenEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/token\",\n  \"_userInfoEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/userinfo\",\n  \"_endSessionEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/logout\",\n  \"_rev\": 3,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2019-01-22T10:50:47.351Z\",\n  \"_createdBy\": \"http://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T12:24:13.029Z\",\n  \"_updatedBy\": \"http://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Fetch a realm (current version)"},{"location":"/docs/api/1.1/iam/iam-realms-api.html#fetch-a-realm-specific-version-","text":"GET /v1/realms/{realm}?rev={rev}\n… where {rev} is the revision number of the resolver to be retrieved.\nExample\nRequest curl \"https://nexus.example.com/v1/realms/realm1?rev=3\"Full source at GitHub Response {\n  \"@id\": \"http://nexus.example.com/v1/realms/realm1\",\n  \"@type\": \"Realm\",\n  \"name\": \"Github Dev\",\n  \"openIdConfig\": \"http://nexus.example.com/auth/realms/realm1/.well-known/openid-configuration\",\n  \"_label\": \"realm1\",\n  \"_grantTypes\": [\n    \"password\",\n    \"clientCredentials\",\n    \"refreshToken\",\n    \"authorizationCode\",\n    \"implicit\"\n  ],\n  \"_issuer\": \"http://nexus.example.com/auth/realms/realm1\",\n  \"_authorizationEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/auth\",\n  \"_tokenEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/token\",\n  \"_userInfoEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/userinfo\",\n  \"_endSessionEndpoint\": \"http://nexus.example.com/auth/realms/realm1/protocol/openid-connect/logout\",\n  \"_rev\": 3,\n  \"_deprecated\": false,\n  \"_createdAt\": \"2019-01-22T10:50:47.351Z\",\n  \"_createdBy\": \"http://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T12:24:13.029Z\",\n  \"_updatedBy\": \"http://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Fetch a realm (specific version)"},{"location":"/docs/api/1.1/iam/iam-realms-api.html#realms-server-sent-events","text":"This endpoint allows clients to receive automatic updates from the realms in a streaming fashion.\nGET /v1/realms/events\nwhere Last-Event-Id is an optional HTTP Header that identifies the last consumed realm event. It can be used for cases when a client does not want to retrieve the whole event stream, but to start after a specific event.\nThe response contains a series of realm events, represented in the following way\ndata:{payload}\nevent:{type}\nid:{id}\nwhere…\n{payload}: Json - is the actual payload of the current realm {type}: String - is a type identifier for the current realm. Possible types are: RealmCreated, RealmUpdated and RealmDeprecated {id}: String - is the identifier of the realm event. It can be used in the Last-Event-Id HTTP Header\nExample\nRequest curl \"https://nexus.example.com/v1/realms/events\"Full source at GitHub Response data:{\"@context\":[\"https://bluebrain.github.io/nexus/contexts/iam.json\",\"https://bluebrain.github.io/nexus/contexts/resource.json\"],\"@id\":\"http://nexus.example.com/v1/realms/github\",\"@type\":\"RealmCreated\",\"name\":\"Github\",\"openIdConfig\":\"https://nexus.example.com/nexus/auth/realms/github-dev/.well-known/openid-configuration\",\"_label\":\"github\",\"_grantTypes\":[\"password\",\"clientCredentials\",\"refreshToken\",\"authorizationCode\",\"implicit\"],\"_issuer\":\"https://nexus.example.com/nexus/auth/realms/github-dev\",\"_keys\":[{\"alg\":\"RS256\",\"e\":\"AQAB\",\"kid\":\"*****\",\"kty\":\"RSA\",\"n\":\"***\",\"use\":\"sig\"}],\"_authorizationEndpoint\":\"https://nexus.example.com/nexus/auth/realms/github-dev/protocol/openid-connect/auth\",\"_tokenEndpoint\":\"https://nexus.example.com/nexus/auth/realms/github-dev/protocol/openid-connect/token\",\"_userInfoEndpoint\":\"https://nexus.example.com/nexus/auth/realms/github-dev/protocol/openid-connect/userinfo\",\"_endSessionEndpoint\":\"https://nexus.example.com/nexus/auth/realms/github-dev/protocol/openid-connect/logout\",\"_rev\":1,\"_instant\":\"2019-06-11T11:31:52.278Z\",\"_subject\":\"http://nexus.example.com/v1/anonymous\"}\nevent:RealmCreated\nid:83bf27a2-8c3c-11e9-a8f6-c5c16f2312d6\n\ndata:{\"@context\":[\"https://bluebrain.github.io/nexus/contexts/iam.json\",\"https://bluebrain.github.io/nexus/contexts/resource.json\"],\"@id\":\"http://nexus.example.com/v1/realms/github\",\"@type\":\"RealmUpdated\",\"logo\":\"http://nexus.example.com/logo.png\",\"name\":\"Github\"\"openIdConfig\":\"https://nexus.example.com/nexus/auth/realms/github-dev/.well-known/openid-configuration\",\"_label\":\"github\",\"_grantTypes\":[\"password\",\"clientCredentials\",\"refreshToken\",\"authorizationCode\",\"implicit\"],\"_issuer\":\"https://nexus.example.com/nexus/auth/realms/github-dev\",\"_keys\":[{\"alg\":\"RS256\",\"e\":\"AQAB\",\"kid\":\"*****\",\"kty\":\"RSA\",\"n\":\"***\",\"use\":\"sig\"}],\"_authorizationEndpoint\":\"https://nexus.example.com/nexus/auth/realms/github-dev/protocol/openid-connect/auth\",\"_tokenEndpoint\":\"https://nexus.example.com/nexus/auth/realms/github-dev/protocol/openid-connect/token\",\"_userInfoEndpoint\":\"https://nexus.example.com/nexus/auth/realms/github-dev/protocol/openid-connect/userinfo\",\"_endSessionEndpoint\":\"https://nexus.example.com/nexus/auth/realms/github-dev/protocol/openid-connect/logout\",\"_rev\":2,\"_instant\":\"2019-06-14T11:56:58.372Z\",\"_subject\":\"http://nexus.example.com/v1/realms/nexusdev/users/anonymous\"}\nevent:RealmUpdated\nid:835128c0-8e9b-11e9-a8f6-c5c16f2312d6\n\ndata:{\"@context\":[\"https://bluebrain.github.io/nexus/contexts/iam.json\",\"https://bluebrain.github.io/nexus/contexts/resource.json\"],\"@id\":\"http://nexus.example.com/v1/realms/github\",\"@type\":\"RealmDeprecated\",\"_label\":\"internal\",\"_rev\":3,\"_instant\":\"2019-06-14T11:57:01.426Z\",\"_subject\":\"http://nexus.example.com/v1/realms/nexusdev/users/myuser\"}\nevent:RealmDeprecated\nid:85054160-8e9b-11e9-a8f6-c5c16f2312d6Full source at GitHub","title":"Realms Server Sent Events"},{"location":"/docs/api/1.1/iam/authentication.html","text":"","title":"Authentication"},{"location":"/docs/api/1.1/iam/authentication.html#authentication","text":"In order to interact with Nexus, clients need a valid access token. Tokens can be obtained from authentication providers. Please see, realms for documentation on how to find available providers(realms).\nEach realm defines openid-configuration endpoint. From that endpoint, clients can obtain the information necessary to obtain an access token, especially the authorize and token endpoints for the provider.\nPlease see oauth2 documentation for different authentication flows available for different types of applications.","title":"Authentication"},{"location":"/docs/api/1.1/iam/iam-permissions-api.html","text":"","title":"Permissions"},{"location":"/docs/api/1.1/iam/iam-permissions-api.html#permissions","text":"Permissions are rooted in the /v1/permissions collection.\nEach permission is the basic unit to provide a way to limit applications’ access to sensitive information.\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nAuthorization notes When modifying permissions, the caller must have permissions/write permissions on the path /. When reading permissions, the caller must have permissions/read permissions on the path /.","title":"Permissions"},{"location":"/docs/api/1.1/iam/iam-permissions-api.html#minimum-permissions","text":"IAM is configured to include minimum permissions, i.e. permissions that cannot be removed, because they are necessary for correct functioning of Nexus.\nCurrently the following permissions are required:\ndefault permissions for acls, with the exception that everyone should be able to see his own permissions acls/read acls/write default permissions for permissions permissions/read permissions/write default permissions for realms realms/read realms/write generic permissions for full read access to the global event log events/read admin specific permissions projects/read projects/write projects/create organizations/read organizations/write organizations/create KG specific permissions resources/read resources/write resolvers/write views/query views/write schemas/write files/write","title":"Minimum permissions"},{"location":"/docs/api/1.1/iam/iam-permissions-api.html#replace-permissions","text":"This operation overrides the collection of permissions.\nPUT /v1/permissions?rev={previous_rev}\n  {...}\n…where {previous_rev} is the last known revision number for the permissions. If there are only minimum permissions present present, this query parameter can be omitted.\nThe json payload contains the set of permissions to be added.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/permissions?rev=1\" -d \\\n'{\n  \"permissions\": [\n    \"newpermission/read\",\n    \"newpermission/write\"\n  ]\n}'Full source at GitHub Payload {\n  \"permissions\": [\n    \"newpermission/read\",\n    \"newpermission/write\"\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/permissions\",\n  \"@type\": \"Permissions\",\n  \"_rev\": 2,\n  \"_createdAt\": \"2019-01-22T13:15:54.667Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T13:22:03.007Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Replace permissions"},{"location":"/docs/api/1.1/iam/iam-permissions-api.html#subtract-permissions","text":"This operation removes the provided permissions from the existing collection of permissions.\nPATCH /v1/permissions?rev={previous_rev}\n  {...}\n…where {previous_rev} is the last known revision number for the permissions.\nThe json payload contains the set of permissions to be deleted. Example\nRequest curl -XPATCH -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/permissions?rev=2\" -d \\\n'{\n  \"@type\": \"Subtract\",\n  \"permissions\": [\n    \"newpermission/write\"\n  ]\n}'Full source at GitHub Payload {\n  \"@type\": \"Subtract\",\n  \"permissions\": [\n    \"newpermission/write\"\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/permissions\",\n  \"@type\": \"Permissions\",\n  \"_rev\": 1,\n  \"_createdAt\": \"2019-01-22T13:15:54.667Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T13:22:03.007Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Subtract permissions"},{"location":"/docs/api/1.1/iam/iam-permissions-api.html#append-permissions","text":"This operation appends the provided permissions to the existing collection of permissions.\nPATCH /v1/permissions?rev={previous_rev}\n  {...}\n…where {previous_rev} is the last known revision number for the permissions.\nThe json payload contains the set of permissions to be added.\nExample\nRequest curl -XPATCH -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/permissions?rev=3\" -d \\\n'{\n  \"@type\": \"Append\",\n  \"permissions\": [\n    \"newpermission/create\"\n  ]\n}'Full source at GitHub Payload {\n  \"@type\": \"Append\",\n  \"permissions\": [\n    \"newpermission/create\"\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/permissions\",\n  \"@type\": \"Permissions\",\n  \"_rev\": 2,\n  \"_createdAt\": \"2019-01-22T13:15:54.667Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T13:22:03.007Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Append permissions"},{"location":"/docs/api/1.1/iam/iam-permissions-api.html#delete-all-permissions","text":"This operation deletes the all the user defined permission and resets the collection to minimum permissions.\nDELETE /v1/permissions?rev={previous_rev}\n…where {previous_rev} is the last known revision number for the permissions.\nRequest curl -XDELETE \"https://nexus.example.com/v1/permissions?rev=4\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/permissions\",\n  \"@type\": \"Permissions\",\n  \"_rev\": 3,\n  \"_createdAt\": \"2019-01-22T13:15:54.667Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T13:22:03.007Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Delete all permissions"},{"location":"/docs/api/1.1/iam/iam-permissions-api.html#fetch-permissions-latest-revision-","text":"GET /v1/permissions\nRequest curl \"https://nexus.example.com/v1/permissions\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/permissions\",\n  \"@type\": \"Permissions\",\n  \"permissions\": [\n    \"acls/read\",\n    \"acls/write\",\n    \"events/read\",\n    \"files/write\",\n    \"organizations/create\",\n    \"organizations/read\",\n    \"organizations/write\",\n    \"permissions/read\",\n    \"permissions/write\",\n    \"projects/create\",\n    \"projects/read\",\n    \"projects/write\",\n    \"realms/read\",\n    \"realms/write\",\n    \"resolvers/write\",\n    \"resources/read\",\n    \"resources/write\",\n    \"schemas/write\",\n    \"views/query\",\n    \"views/write\"\n  ],\n  \"_rev\": 10,\n  \"_createdAt\": \"2019-01-22T13:15:54.667Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T13:22:03.007Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Fetch permissions (latest revision)"},{"location":"/docs/api/1.1/iam/iam-permissions-api.html#fetch-permissions-specific-revision-","text":"GET /v1/permissions?rev={rev}\n…where {rev} is the revision number of the permissions to be retrieved.\nRequest curl \"https://nexus.example.com/v1/permissions?rev=1\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/permissions\",\n  \"@type\": \"Permissions\",\n  \"permissions\": [\n    \"acls/read\",\n    \"acls/write\",\n    \"events/read\",\n    \"files/write\",\n    \"organizations/create\",\n    \"organizations/read\",\n    \"organizations/write\",\n    \"permissions/read\",\n    \"permissions/write\",\n    \"projects/create\",\n    \"projects/read\",\n    \"projects/write\",\n    \"realms/read\",\n    \"realms/write\",\n    \"resolvers/write\",\n    \"resources/read\",\n    \"resources/write\",\n    \"schemas/write\",\n    \"views/query\",\n    \"views/write\"\n  ],\n  \"_rev\": 3,\n  \"_createdAt\": \"2019-01-22T13:15:54.667Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/anonymous\",\n  \"_updatedAt\": \"2019-01-22T13:22:03.007Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/anonymous\"\n}Full source at GitHub","title":"Fetch permissions (specific revision)"},{"location":"/docs/api/1.1/iam/iam-permissions-api.html#permissions-server-sent-events","text":"This endpoint allows clients to receive automatic updates from the permissions in a streaming fashion.\nGET /v1/permissions/events\nwhere Last-Event-Id is an optional HTTP Header that identifies the last consumed permission event. It can be used for cases when a client does not want to retrieve the whole event stream, but to start after a specific event.\nThe response contains a series of permission events, represented in the following way\ndata:{payload}\nevent:{type}\nid:{id}\nwhere…\n{payload}: Json - is the actual payload of the current permission {type}: String - is a type identifier for the current permission. Possible types are: PermissionsAppended, PermissionsSubtracted, PermissionsReplaced and PermissionsDeleted {id}: String - is the identifier of the permission event. It can be used in the Last-Event-Id HTTP Header\nExample\nRequest curl \"https://nexus.example.com/v1/permissions/events\"Full source at GitHub Response data:{\"@context\":[\"https://bluebrain.github.io/nexus/contexts/iam.json\",\"https://bluebrain.github.io/nexus/contexts/resource.json\"],\"@type\":\"PermissionsAppended\",\"permissions\":[\"resources/write\",\"views/query\"],\"_rev\":1,\"_instant\":\"2019-06-14T11:57:04.039Z\",\"_subject\":\"https://nexus.example.com/v1/realms/nexusdev/users/myuser\"}\nevent:PermissionsAppended\nid:8693f7b0-8e9b-11e9-a8f6-c5c16f2312d6\n\ndata:{\"@context\":[\"https://bluebrain.github.io/nexus/contexts/iam.json\",\"https://bluebrain.github.io/nexus/contexts/resource.json\"],\"@type\":\"PermissionsSubtracted\",\"permissions\":[\"views/query\"],\"_rev\":2,\"_instant\":\"2019-06-14T11:57:05.771Z\",\"_subject\":\"https://nexus.example.com/v1/realms/nexusdev/users/myuser\"}\nevent:PermissionsSubtracted\nid:879c3ff0-8e9b-11e9-a8f6-c5c16f2312d6\n\ndata:{\"@context\":[\"https://bluebrain.github.io/nexus/contexts/iam.json\",\"https://bluebrain.github.io/nexus/contexts/resource.json\"],\"@type\":\"PermissionsReplaced\",\"permissions\":[\"schemas/write\",\"views/write\",\"files/write\",\"permissions/write\",\"acls/write\",\"realms/write\",\"projects/read\",\"acls/read\",\"organizations/create\",\"tcmbsyeq/rcxpdxng\",\"organizations/write\",\"resources/write\",\"realms/read\",\"projects/create\",\"storages/write\",\"permissions/read\",\"resources/read\",\"organizations/read\",\"resolvers/write\",\"events/read\",\"views/query\",\"projects/write\"],\"_rev\":3,\"_instant\":\"2019-06-14T11:57:07.277Z\",\"_subject\":\"https://nexus.example.com/v1/realms/nexusdev/users/myuser\"}\nevent:PermissionsReplaced\nid:88820c10-8e9b-11e9-a8f6-c5c16f2312d6Full source at GitHub","title":"Permissions Server Sent Events"},{"location":"/docs/api/1.1/iam/iam-acls-api.html","text":"","title":"Access Control Lists"},{"location":"/docs/api/1.1/iam/iam-acls-api.html#access-control-lists","text":"Access Control Lists are rooted in the /v1/acls collection.\nAn ACL defines the applications’ data access restriction using the following three parameters:\npermission: the value used to limit a client (user, group) access to resources. identity: a client identity reference, e.g. a certain user, a group, an anonymous user or someone who is authenticated to a certain realm. path: the location where to apply the restrictions. Examples of paths are: /, /myorg or /myorg/myproject\nAccess to resources in the system depends on the access control list set for them. Depending on the access control list, a caller may need to prove its identity by means of an access token passed to the Authorization header (Authorization: Bearer {token}). Please visit Authentication to learn more about how to retrieve an access token.\nAuthorization notes When modifying ACLs, the caller must have acls/write permissions on the path where the ACLs are being modified or its ancestors. When reading ACLs, the caller must have acls/read permissions on the path where the ACLs are being modified or its ancestors.","title":"Access Control Lists"},{"location":"/docs/api/1.1/iam/iam-acls-api.html#default-permissions","text":"When IAM starts for the first time, it applies the default permissions to /. This gives all permissions to the anonymous user to enable setting up realms. It is recommended to replace these permissions once user has setup an authorization realm.","title":"Default permissions"},{"location":"/docs/api/1.1/iam/iam-acls-api.html#acls-hierarchy","text":"It is important to know that ACLs are represented in a tree-like structure depending on their path. Imagine the following scenario:\nEach block is identified by a path that contains a list of permissions for a certain identity (identities are color code divided).\nThere is a special set of permissions which restrict the use of the ACLs API:\nacls/read - an auth. token containing an identity with this permission is allowed to fetch a collection of ACL from any other identity. acls/write - an auth. token containing an identity with this permission is allowed to perform the call to the following endpoints: create ACLs, replace ACLs, subtract ACLs, append ACLs and delete ACLs.\nThose permissions need to be present in the current {path} where the API interaction occurs or in any parent path. In other words, they are inherited.\nLet’s clarify this concept with an example from the previous diagram. identity 1 could call the create ACLs endpoint on any {path} while identity 2 could only call the same endpoint for any path child of /myorg (like /myorg/myproj). At the same time, identity 3 could not perform any of the write operations.","title":"ACLs Hierarchy"},{"location":"/docs/api/1.1/iam/iam-acls-api.html#create-acls","text":"This operation creates a collection of ACL on the provided path.\nPUT /v1/acls/{path}\n  {...}\n…where {path} is the target location for the ACL collection.\nThe json payload contains the collection of ACL to set.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/acls/org1\" -d  \\\n'{\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"projects/read\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"projects/read\",\n        \"projects/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"realm\",\n        \"group\": \"some-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"acls/read\",\n        \"acls/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"realm\",\n        \"subject\": \"alice\"\n      }\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"projects/read\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"projects/read\",\n        \"projects/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"some-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"acls/read\",\n        \"acls/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"subject\": \"alice\"\n      }\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/acls/org1\",\n  \"@type\": \"AccessControlList\",\n  \"_rev\": 1,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Create ACLs"},{"location":"/docs/api/1.1/iam/iam-acls-api.html#replace-acls","text":"This operation overrides the collection of ACL on the provided path.\nPUT /v1/acls/{path}?rev={previous_rev}\n  {...}\n…where:\n{previous_rev}: Number - the last known revision for the ACL collection. Not required for replacing empty ACLs. {path}: String - is the target location for the ACL collection.\nThe json payload contains the collection of ACL to set.\nExample\nRequest curl -XPUT -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/acls/org1?rev=1\" -d \\\n'{\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"projects/read\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"projects/read\",\n        \"projects/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"realm\",\n        \"group\": \"some-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"acls/read\",\n        \"acls/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"realm\",\n        \"subject\": \"alice\"\n      }\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"projects/read\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"projects/read\",\n        \"projects/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"some-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"acls/read\",\n        \"acls/write\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"subject\": \"alice\"\n      }\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/acls/org1\",\n  \"@type\": \"AccessControlList\",\n  \"_rev\": 2,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:07:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Replace ACLs"},{"location":"/docs/api/1.1/iam/iam-acls-api.html#subtract-acls","text":"This operation removes the provided ACL collection from the existing collection of ACL on the provided path.\nPATCH /v1/acls/{path}?rev={previous_rev}\n  {...}\n…where:\n{previous_rev}: Number - the last known revision for the ACL collection. {path}: String - is the target location for the ACL collection.\nThe json payload contains the collection of ACL to remove.\nExample\nRequest curl -XPATCH -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/acls/org1?rev=2\" -d \\\n'{\n  \"@type\": \"Subtract\",\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"projects/read\"\n      ],\n      \"identity\": {\n        \"group\": \"a-group\",\n        \"realm\": \"myrealm\"\n      }\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"@type\": \"Subtract\",\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"projects/read\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/acls/org1\",\n  \"@type\": \"AccessControlList\",\n  \"_rev\": 3,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:10:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Subtract ACLs"},{"location":"/docs/api/1.1/iam/iam-acls-api.html#append-acls","text":"This operation appends the provided ACL collection to the existing collection of ACL on the provided path.\nPATCH /v1/acls/{path}?rev={previous_rev}\n  {...}\n…where:\n{previous_rev}: Number - the last known revision for the ACL collection. Not required for appending to empty ACLs. {path}: String - is the target location for the ACL collection.\nThe json payload contains the collection of ACL to add.\nExample\nRequest curl -XPATCH -H \"Content-Type: application/json\" \"https://nexus.example.com/v1/acls/org1?rev=3\" -d  \\\n'{\n  \"@type\": \"Append\",\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"own\",\n        \"other\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    }\n  ]\n}'Full source at GitHub Payload {\n  \"@type\": \"Append\",\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"own\",\n        \"other\"\n      ],\n      \"identity\": {\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    }\n  ]\n}Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/acls/org1\",\n  \"@type\": \"nxv:AccessControlList\",\n  \"_rev\": 4,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:15:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Append ACLs"},{"location":"/docs/api/1.1/iam/iam-acls-api.html#delete-acls","text":"This operation deletes the entire collection of ACL on the provided path.\nDELETE /v1/acls/{path}?rev={previous_rev}\n…where:\n{previous_rev}: Number - the last known revision for the ACL collection. {path}: String - is the target location for the ACL collection.\nRequest curl -XDELETE \"https://nexus.example.com/v1/acls/org1?rev=4\"Full source at GitHub Response {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n  \"@id\": \"https://nexus.example.com/v1/acls/org1\",\n  \"@type\": \"nxv:AccessControlList\",\n  \"_rev\": 5,\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:30:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n}Full source at GitHub","title":"Delete ACLs"},{"location":"/docs/api/1.1/iam/iam-acls-api.html#fetch-acls","text":"GET /v1/acls/{path}?rev={rev}&self={self}\n…where\n{path}: String - is the target location for the ACL collection. {rev}: Number - the revision of the ACL to be retrieved. This parameter is optional and it defaults to the current revision. {self}: Boolean - if true, only the ACLs containing the identities found on the auth. token are included in the response. If false all the ACLs on the current {path} are included. This parameter is optional and it defaults to true.\nThe ability to use the query parameter self=false depends on whether or not any of the identities found on the auth. token contains the acls:read permission on the provided {path} or its ancestors. For further details, check ACLs hierarchy.\nRequest curl \"https://nexus.example.com/v1/acls/org1?rev=1&self=false\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/acls.json\"\n  ],\n  \"@id\": \"https://nexus.example.com/v1/acls/org1\",\n  \"@type\": \"nxv:AccessControlList\",\n  \"path\": \"/org1\",\n  \"acl\": [\n    {\n      \"permissions\": [\n        \"read\"\n      ],\n      \"identity\": {\n        \"@id\": \"https://nexus.example.com/v1/realms/myrealm/groups/a-group\",\n        \"@type\": \"Group\",\n        \"realm\": \"myrealm\",\n        \"group\": \"a-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"read\",\n        \"write\"\n      ],\n      \"identity\": {\n        \"@id\": \"https://nexus.example.com/v1/realms/myrealm/groups/some-group\",\n        \"@type\": \"Group\",\n        \"realm\": \"myrealm\",\n        \"group\": \"some-group\"\n      }\n    },\n    {\n      \"permissions\": [\n        \"acls/read\",\n        \"acls/write\"\n      ],\n      \"identity\": {\n        \"@id\": \"https://nexus.example.com/v1/realms/myrealm/users/user\",\n        \"@type\": \"User\",\n        \"realm\": \"myrealm\",\n        \"subject\": \"alice\"\n      }\n    }\n  ],\n  \"_createdAt\": \"2018-09-18T09:58:00.801Z\",\n  \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_updatedAt\": \"2018-09-18T10:01:00.801Z\",\n  \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n  \"_rev\": 1\n}Full source at GitHub","title":"Fetch ACLs"},{"location":"/docs/api/1.1/iam/iam-acls-api.html#list-acls","text":"GET /v1/acls/{path}?ancestors={ancestors}&self={self}\n…where\n{path}: String - is the target location for the ACL collection. {ancestors}: Boolean - if true, the ACLs of the parent {path} are included in the response. If false only the ACLs on the current {path} are included. This parameter is optional and it defaults to false. {self}: Boolean - if true, only the ACLs containing the identities found on the auth. token are included in the response. If false all the ACLs on the current {path} are included. This parameter is optional and it defaults to true.\nThe ability to use the query parameter self=false and ancestors=true depends on whether or not any of the identities found on the auth. token contains the acls:read permission on the provided {path} or its parents. For further details, check ACLs hierarchy.\nThe {path} can contain the special character * which can be read as any.\nLet’s imagine we have the ACLs from the following diagram in place. If we query this endpoint with the path /myorg/*, we are selecting the ACLs defined in /myorg/myproj and myorg/myproj2. Likewise If we use the path /*, we are selecting the ACLs defined in /myorg and myorg2.\nThe following examples illustrate listings from the diagram on the section ACLs hierarchy with the following considerations:\nidentity 1: Is a group called one identity 2: Is a group called two identity 3: Is a user called me The auth. token is linked to the identity 1.\nRequest curl \"https://nexus.example.com/v1/acls/*?ancestors=true&self=true\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\"\n  ],\n  \"_total\": 2,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/acls/myorg/myproj\",\n      \"@type\": \"AccessControlList\",\n      \"acl\": [\n        {\n          \"permissions\": [\n            \"read\",\n            \"write\"\n          ],\n          \"identity\": {\n            \"@id\": \"https://nexus.example.com/v1/realm/groups/two\",\n            \"@type\": \"Group\",\n            \"realm\": \"myrealm\",\n            \"group\": \"two\"\n          }\n        }\n      ],\n      \"_path\": \"/myorg/myproj\",\n      \"_rev\": 1,\n      \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-17T15:05:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/acls/myorg/myproj2\",\n      \"@type\": \"AccessControlList\",\n      \"acl\": [\n        {\n          \"permissions\": [\n            \"read\"\n          ],\n          \"identity\": {\n            \"@id\": \"https://nexus.example.com/v1/realms/myrealm/users/me\",\n            \"@type\": \"User\",\n            \"realm\": \"myrealm\",\n            \"subject\": \"me\"\n          }\n        }\n      ],\n      \"_path\": \"/myorg/myproj2\",\n      \"_rev\": 2,\n      \"_createdAt\": \"2018-09-17T14:00:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/alice\",\n      \"_updatedAt\": \"2018-09-17T14:05:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/alice\"\n    }\n  ]\n}Full source at GitHub Request (with ancestors) curl \"https://nexus.example.com/v1/acls/myorg/*?ancestors=false&self=false\"Full source at GitHub Response (with ancestors) {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\",\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/search.json\"\n  ],\n  \"_total\": 3,\n  \"_results\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/acls/\",\n      \"@type\": \"AccessControlList\",\n      \"acl\": [\n        {\n          \"permissions\": [\n            \"acls/write\"\n          ],\n          \"identity\": {\n            \"@id\": \"https://nexus.example.com/v1/realms/myrealm/groups/one\",\n            \"@type\": \"Group\",\n            \"realm\": \"myrealm\",\n            \"group\": \"one\"\n          }\n        }\n      ],\n      \"_path\": \"/\",\n      \"_rev\": 1,\n      \"_createdAt\": \"2018-09-17T14:55:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\",\n      \"_updatedAt\": \"2018-09-17T15:05:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/john\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/acls/myorg\",\n      \"@type\": \"AccessControlList\",\n      \"acl\": [\n        {\n          \"permissions\": [\n            \"acls/write\"\n          ],\n          \"identity\": {\n            \"@id\": \"https://nexus.example.com/v1/realms/myrealm/groups/two\",\n            \"@type\": \"Group\",\n            \"realm\": \"myrealm\",\n            \"group\": \"two\"\n          }\n        }\n      ],\n      \"_path\": \"/myorg\",\n      \"_rev\": 2,\n      \"_createdAt\": \"2018-09-17T14:00:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/alice\",\n      \"_updatedAt\": \"2018-09-17T14:05:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/alice\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/acls/myorg2\",\n      \"@type\": \"nxv:AccessControlList\",\n      \"acl\": [\n        {\n          \"permissions\": [\n            \"other\"\n          ],\n          \"identity\": {\n            \"@id\": \"https://nexus.example.com/v1/realms/myrealm/groups/one\",\n            \"@type\": \"Group\",\n            \"realm\": \"myrealm\",\n            \"group\": \"one\"\n          }\n        }\n      ],\n      \"_path\": \"/myorg2\",\n      \"_rev\": 1,\n      \"_createdAt\": \"2018-09-17T14:00:42.939Z\",\n      \"_createdBy\": \"https://nexus.example.com/v1/realms/myrealm/users/alice\",\n      \"_updatedAt\": \"2018-09-17T14:05:42.939Z\",\n      \"_updatedBy\": \"https://nexus.example.com/v1/realms/myrealm/users/alice\"\n    }\n  ]\n}Full source at GitHub","title":"List ACLs"},{"location":"/docs/api/1.1/iam/iam-acls-api.html#acl-server-sent-events","text":"This endpoint allows clients to receive automatic updates from the ACLs in a streaming fashion.\nGET /v1/acls/events\nwhere Last-Event-Id is an optional HTTP Header that identifies the last consumed ACL event. It can be used for cases when a client does not want to retrieve the whole event stream, but to start after a specific event.\nThe response contains a series of ACL events, represented in the following way\ndata:{payload}\nevent:{type}\nid:{id}\nwhere…\n{payload}: Json - is the actual payload of the current ACL {type}: String - is a type identifier for the current ACL. Possible types are: AclAppended, AclSubtracted, AclReplaced, AclDeleted {id}: String - is the identifier of the ACL event. It can be used in the Last-Event-Id HTTP Header\nExample\nRequest curl \"https://nexus.example.com/v1/acls/events\"Full source at GitHub Response data:{\"@context\":[\"https://bluebrain.github.io/nexus/contexts/iam.json\",\"https://bluebrain.github.io/nexus/contexts/resource.json\"],\"@type\":\"AclAppended\",\"acl\":[{\"identity\":{\"@id\":\"https://nexus.example.com/v1/realms/nexusdev/users/test\",\"@type\":\"User\",\"realm\":\"nexusdev\",\"subject\":\"test\"},\"permissions\":[\"organizations/create\"]}],\"_path\":\"/\",\"_rev\":5,\"_instant\":\"2019-06-14T11:54:52.379Z\",\"_subject\":\"https://nexus.example.com/v1/realms/nexusdev/users/myuser\"}\nevent:AclAppended\nid:381a17e0-8e9b-11e9-a8f6-c5c16f2312d6\n\ndata:{\"@context\":[\"https://bluebrain.github.io/nexus/contexts/iam.json\",\"https://bluebrain.github.io/nexus/contexts/resource.json\"],\"@type\":\"AclReplaced\",\"acl\":[{\"identity\":{\"@id\":\"https://nexus.example.com/v1/realms/nexusdev/users/test\",\"@type\":\"User\",\"realm\":\"nexusdev\",\"subject\":\"test\"},\"permissions\":[\"schemas/write\",\"views/write\",\"files/write\",\"acls/write\",\"projects/read\",\"acls/read\",\"organizations/create\",\"organizations/write\",\"resources/write\",\"projects/create\",\"storages/write\",\"resources/read\",\"organizations/read\",\"resolvers/write\",\"views/query\",\"projects/write\"]}],\"_path\":\"/imw5ta2pjjvxjxm\",\"_rev\":1,\"_instant\":\"2019-06-14T11:54:53.133Z\",\"_subject\":\"https://nexus.example.com/v1/anonymous\"}\nevent:AclReplaced\nid:388cfdf0-8e9b-11e9-a8f6-c5c16f2312d6\n\ndata:{\"@context\":[\"https://bluebrain.github.io/nexus/contexts/iam.json\",\"https://bluebrain.github.io/nexus/contexts/resource.json\"],\"@type\":\"AclSubtracted\",\"acl\":[{\"identity\":{\"@id\":\"https://nexus.example.com/v1/realms/nexusdev/users/test\",\"@type\":\"User\",\"realm\":\"nexusdev\",\"subject\":\"test\"},\"permissions\":[\"organizations/create\"]}],\"_path\":\"/\",\"_rev\":6,\"_instant\":\"2019-06-14T11:56:55.963Z\",\"_subject\":\"https://nexus.example.com/v1/realms/nexusdev/users/myuser\"}\nevent:AclSubtracted\nid:81c3d200-8e9b-11e9-a8f6-c5c16f2312d6Full source at GitHub","title":"ACL Server Sent Events"},{"location":"/docs/api/1.1/iam/iam-identities.html","text":"","title":"Identities"},{"location":"/docs/api/1.1/iam/iam-identities.html#identities","text":"The /v1/identities endpoint allows user to retrieve the identities that the user has in the platform. Calling the endpoint without a token will result in only one identity returned: Anonymous. Calling it with token should return multiple identities. There are four different types of identities:\nAnonymous - represents anonymous user Authenticated - represents a realm via which the user is authenticated Group - represents a group to which a user belongs in a realm User - represents the user.\nThe following HTTP call can used to retrieve the identities:\nGET /v1/identities\nExample\nRequest curl \"https://nexus.example.com/v1/identities\"Full source at GitHub Response {\n  \"@context\": [\n    \"https://bluebrain.github.io/nexus/contexts/iam.json\",\n    \"https://bluebrain.github.io/nexus/contexts/resource.json\"\n  ],\n  \"identities\": [\n    {\n      \"@id\": \"https://nexus.example.com/v1/anonymous\",\n      \"@type\": \"Anonymous\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/realms/nexusdev/authenticated\",\n      \"@type\": \"Authenticated\",\n      \"realm\": \"nexusdev\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/realms/nexusdev/groups/test-group\",\n      \"@type\": \"Group\",\n      \"group\": \"test-group\",\n      \"realm\": \"nexusdev\"\n    },\n    {\n      \"@id\": \"https://nexus.example.com/v1/realms/nexusdev/users/test-user\",\n      \"@type\": \"User\",\n      \"realm\": \"nexusdev\",\n      \"subject\": \"test-user\"\n    }\n  ]\n}Full source at GitHub","title":"Identities"},{"location":"/docs/api/1.1/error-signaling.html","text":"","title":"Error Signaling"},{"location":"/docs/api/1.1/error-signaling.html#error-signaling","text":"The services makes use of the HTTP status codes to report the outcome of each API call. The status codes are complemented by a consistent response data model for reporting client and system level failures.\nFormat {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/error.json\",\n  \"@type\": \"<a machine readable unique identifier>\",\n  \"reason\": \"<a human readable description of the error>\"\n}Full source at GitHub Example {\n  \"@context\": \"https://bluebrain.github.io/nexus/contexts/error.json\",\n  \"@type\": \"IllegalFilterFormat\",\n  \"reason\": \"Unable to parse 'path' as an uri\",\n  \"field\": \"DownField(filter)/DownField(path)\"\n}Full source at GitHub\nIn addition to mandatory @type and reason fields, arbitrary fields may be present for extra information in certain scenarios.","title":"Error Signaling"},{"location":"/docs/release-notes/index.html","text":"","title":"Release Notes"},{"location":"/docs/release-notes/index.html#release-notes","text":"This part of the documentation lists the significant changes to the system for every version.","title":"Release Notes"},{"location":"/docs/release-notes/index.html#nexus-1-0-x","text":"This is the first major release of Blue Brain Nexus after almost two years of development.\nAlso referred to as “Nexus V1”, this initial release is our first big milestone in our quest to build a Knowledge Graph platform uniquely combining flexible graph database, powerful search engine and scalable data store to enable:\nEasy unification and integration of fragmented and disparate data from heterogeneous domains to break data and metadata silos Better data governance with the ability to specify and enforce organization’s best practices for data collection, storage and description through high quality metadata Data lineage and provenance recording and description FAIR (Findable, Accessible, Interoperable, Re-usable) data and metadata management\nWe’ve been running this software in production for more than a year getting good feedback on its design and we are confident that the current API meets our current and longer term goals.\nThis release represents a commitment to backwards compatibility in all future releases of the v1.y.z series.\nVersioning Nexus artifacts are versioned using semantic versioning and while services and web applications that make up Nexus are versioned independently to address specific improvements or bugfixes, their versions are synchronized across minor releases. This means, for example, that services and applications are compatible with each other if their major and minor numbers match regardless of the value of the patch numbers.\nThe behaviour of the system is described across the documentation, but here are some notable changes from the previous v0.y.z series.","title":"Nexus 1.0.x"},{"location":"/docs/release-notes/index.html#functionality-behaviour","text":"","title":"Functionality & Behaviour"},{"location":"/docs/release-notes/index.html#nexus-web-interface","text":"Previously, the web interface was dubbed Nexus Explorer, and could only be used to browse the data stored in your Nexus instance. For the Nexus V1 release, we decided to build a new web application, called Nexus Web, that also enables operational management, data management and search capabilities on the system. At this stage of development, this application is likely to be most useful to technical users who work on integrating their data into Nexus.\nThe web application is set to offer most of the features you can get with the raw API, as well as additional conveniences for Nexus users.\nAt the time of the Nexus V1 release, you can use it to:\nLogin into Nexus Browse and search organizations, projects and resources you have access to See the raw JSON-LD payload of a resources Make advanced ElasticSearch and SPARQL queries Create, edit and deprecate organizations and projects Make a project publicly accessible Create resources through an interactive JSON editor","title":"Nexus web interface"},{"location":"/docs/release-notes/index.html#isolated-data-scopes","text":"The v0.y.z series handled data within one single space and while it did provide some benefits with respect to the ability to query the entire system, it also provided severe limitations with respect to data evolution, scalability and future developments. We move on from this monolithic approach towards a multi scoped system, where data is bucketed and managed independently in projects.\nWhat we previously referred to as domains are now called projects and represent data and configuration boundaries within the system (we decided to change the naming as we have found that the term “domain” was understood to imply a certain data organization scheme centered around business or scientific domains; this was not intended).\nIntroducing these boundaries has opened the door to make several performance and functional improvements to the system as follows:\ndata indexing can now be configured at the project level without impacting the overall system; we’ve introduced a new resource type View that controls how and where the data is being indexed. They can be managed at runtime by the clients with “administrative” privileges enabling the development of applications specific to the area of interest. An example of that is the BBP Nexus Search application designed specifically to address the needs of the BlueBrain Project. indexing processes are now created for each individual project increasing the indexing throughput and allowing the use of distinct indexing targets. the uniqueness of a resource within the system was determined by the resource id which comprised of the “organization”, “domain”, “schema” name and version and the resource id. Introducing these data boundaries allowed us to relax this constraint and allow multiple resources to share the same id if they are scoped in different projects. access control lists are now restricted to either root (/), organization (/{org}) or project (/{org}/{project}) removing the need to index these definitions along with the data.","title":"Isolated data scopes"},{"location":"/docs/release-notes/index.html#client-defined-identifiers","text":"The v0.y.z series was very opinionated on how resource ids are defined and prohibited client provided identifiers. The choice at the time was that a resource id needs to be resolvable (the resource id needed to match the url to access it). This strong constraint tied the resource ids to the Nexus deployment where they were managed. While this was probably fine for most data within the system, it was nearly impossible to manage data from external sources that came with its own identification scheme (e.g. ontologies).\nThe decision was made to remove this constraint and allow clients to specify their own identifiers. In order to maintain the same API simplicity with respect to accessing resources we came up with a aliasing and curie scheme configurable at the project level (_apiMappings_) that handles bidirectional compaction and expansion of resource identifiers.\nA simple http proxying configuration with URL rewriting deployed in front of the Nexus API allows resources to continue to be resolvable.","title":"Client defined identifiers"},{"location":"/docs/release-notes/index.html#resolution-mechanisms-for-shared-resources","text":"During the past year of production use of Nexus we have noticed that users tend to develop schemas and contexts as reusable components. An example of that is the Neuroshapes initiative, a community effort for a shared vocabulary and collection of constraints for neuroscience.\nThe use of schemas and contexts in the v0.y.z series applied a restriction on the locality of constrained resources, specifically resources could only be created in the same domain with schemas.\nIn the new iteration we’ve introduced a configurable resolution mechanism that allows users to make use of schemas and contexts that reside in other projects. The resources that control this behaviour are called Resolvers and they behave like dependency management systems in programming language ecosystems.\nResolvers can now be created and configured to look up schemas and contexts in arbitrary locations, scoped within projects. The resolution mechanism takes into account all the resolvers defined in a project using the priorities of each resolver and attempts to resolve the referenced resource based on its @id value. Current supported resolvers are:\nInProject: a default project resource created along with a project that looks up referenced resources in the same project. CrossProject: a type of resolver that can be created by clients to look up referenced resources in projects other than the current one.\nFuture developments will include additional resolver types that are capable of resolving resources in other Nexus deployments or shared repositories (e.g.: a git repository).\nSchema imports through the owl:imports clause works recursively as before, but it applies the resolution mechanism at each iteration. Context references work recursively as before applying the resolution mechanism at each iteration.\nNote: Contexts are no longer handled differently, as special kind of resources. Any resource id can be used as a context reference; the system will resolve the referenced resource and apply only the @context value from its representation to the resource that references it.","title":"Resolution mechanisms for shared resources"},{"location":"/docs/release-notes/index.html#improved-handling-of-binary-resources","text":"The v0.y.z series handled binary resources as sub-resources, called attachments, following the model pioneered by CouchDB. While it provided a guarantee that every binary resource is properly described with metadata, the model did not work well in the following situations:\nuploading binaries for later organization: the parent resource required creation before a binary could be attached to it, which in the cases where users were just interested in storing binaries in Nexus it required two API calls instead of one. conflicting vocabulary definitions: a lot of the data modeling effort relied on the Nexus metadata for the uploaded binaries which forced the use of a certain vocabulary and metadata structure in Nexus\nThis model of handling binaries has been superseded by full class support for binaries through files, a new kind of resource managed just like the other types of resources within the system. Files have their own lifecycle and can be independently updated. Description of files, for example in the case of datasets, can now be done external to the file resource within a separate resource. This model allows for many-to-many relationships between files and other resources.","title":"Improved handling of binary resources"},{"location":"/docs/release-notes/index.html#new-mechanism-for-stable-resource-references","text":"The v0.y.z series was quite opinionated on the use of stable references ensuring the structural and semantic immutability of a resource revision. Schemas and Contexts had to be published before they could be used and once published their lifecycle would finish, preventing further updates.\nThis behaviour was replaced by giving the client the control on the immutability guarantees through the use of revisions and tags. The schema versions are no longer present in the API and the mechanism for unpacking schema references are aware of possible tag and revision references provided as query parameters. A tag is a new type of sub-resource that represents a pointer to a resource revision.\nAssuming the following entry in the project apiMappings:\n{\n  \"prefix\": \"persons\",\n  \"namespace\": \"http://nexus.example.com/schemas/person?tag=v1.0.0\"\n}\n… would ensure that resources are constrained with a stable version of a schema:\ncurl -XPOST http://nexus.example.com/resources/{org}/{proj}/persons -d '{}'\nAdditionally, the use of curies is also available, leaving the door open to providing schema versions per resource. Considering the following entry in the project apiMappings:\n{\n  \"prefix\": \"persons\",\n  \"namespace\": \"http://nexus.example.com/schemas/person?tag=\"\n}\n… resources can be constrained with a dynamic version of a schema provided at the time of resource creation:\ncurl -XPOST http://nexus.example.com/resources/{org}/{proj}/persons:v1.0.0 -d '{}'\nRevision query params can be used in the exact same manner as tag params. When omitting rev or tag query params when referring to schema, it is implied that the latest version should be used every time that schema is resolved.\nContext references follow the very same behaviour. Context iri values can be augmented with a tag or rev query parameter to point to a specific immutable reference of the resource.\nNote: the behaviour depends on the new resource reference resolution process; a change in the resolver resources (a different resolution process configuration) can not provide an immutability guarantee of the references.","title":"New mechanism for stable resource references"},{"location":"/docs/release-notes/index.html#client-configurable-indexing-process","text":"As mentioned previously, the indexing processes are now applied at the level of each project and can be customized by the client. Each index process is represented by a newly introduced resource View which has the following classification:\nElasticSearchView: the process replays the project event log, filters out undesired resources based on configuration, applies minimal data transformation and updates an ElasticSearch index. AggregateElasticSearchView: this view does not directly manage an indexing process, but rather represents a collection of referenced _ElasticSearchView_s that would be proxied (queried at the same time) when querying this view. SparqlView: the process replays the project event log applies minimal data transformation and updates an RDF store (currently BlazeGraph).\nA default ElasticSearchView and a default SparqlView are automatically created along with a project. The default ElasticSearchView is used by Nexus internally to power resource listing.\nSince access control lists are now limited to nesting up to the level of a project, these views do not require indexing the acl configuration and can be proxied by the system supporting their native APIs.\n_ElasticSearchView_s expose a /_search sub-resource that represents the native API for interacting with ElasticSearch. Client HTTP requests are checked for authentication and authorization and then forwarded to their respective backends. In the case of an AggregateElasticSearchView the requests executed on all the referenced indices.\n_SparqlView_s expose a /sparql sub-resource that represents the native API for interacting with the SPARQL endpoint of the RDF store. Client HTTP requests are checked for authentication and authorization and then forwarded to the respective backend.\nThe previously supported query DSL has been dropped in favour of the direct interaction with the indices via their native APIs. The attempt to provide a general query interface on top of both indices was very ambitious but production use has proven it unsatisfactory. The change gives clients a lot more power in terms of function, flexibility, expressiveness and query optimization. It also opens the door to support additional index backends without having to reconcile them with the query DSL.","title":"Client configurable indexing process"},{"location":"/docs/release-notes/index.html#client-provided-information-vs-nexus-metadata-and-vocabulary","text":"Since it was often unclear which information was user provided and which was generated by the system as new rule has been introduced such that:\nall user provided information predicates are kept unchanged all Nexus metadata is now presented with a leading _, example: \"_deprecated\": true or \"_rev\": 4\". the Nexus metadata vocabulary is now namespaced to https://bluebrain.github.io/nexus/vocabulary/","title":"Client provided information vs Nexus metadata and vocabulary"},{"location":"/docs/release-notes/index.html#technical-notes","text":"","title":"Technical Notes"},{"location":"/docs/release-notes/index.html#iam-service-updates","text":"IAM has been redesigned such that it no longer attempts to proxy calls to the configured OIDC provider. Instead, it introduces a new resource type (_Realm_) that represent runtime configuration for the accepted OIDC providers. Based on the well known configuration document of the realm it finds and extracts some of the important provider addresses (e.g. the authorization and token endpoints), the signature keys and the issuer description. This allows for token identification and validation without the need to contact the provider and there’s no need to mediate the interaction with the provider. We therefore dropped the iam integration services as they were not needed anymore.\nNow it also expects that group information is present in the access token as a claim, either as an array or a comma separated list of group values.\nThe service also introduces another resource (_permissions_) as a singleton resource that manages (or enumerates) the permissions that are allowed to be set as values in the ACL definitions.\nAll IAM resources are now protected from blind writes (also known as lost update problem) by means of the rev query parameter, similar to the other services.","title":"IAM service updates"},{"location":"/docs/release-notes/index.html#introduced-a-new-service-admin","text":"A new service has been introduced, named Admin that manages the scoping (and its configuration) within the Nexus ecosystem. Organizations and Projects (previously named domains) are now managed by this service, allowing other future services to take advantage of the functionality provided without a direct dependency on the KG service. The service dependency tree is now as follows:\n+-----------+         +-----------+         +-----------+\n  |           |         |           |         |           |\n  |    IAM    <---------+   Admin   <---------+    KG     |\n  |           |         |           |         |           |\n  +-----+-----+         +-----------+         +-+---------+\n        ^                                       |\n        |                                       |\n        +---------------------------------------+\nAccess control lists are now restricted to either root (/), organization (/{org}) or project (/{org}/{project}) removing the need to index these definitions along with the data in their respective service boundaries.","title":"Introduced a new service: Admin"},{"location":"/docs/release-notes/index.html#introduced-javascript-sdk-for-nexus","text":"We released a Javascript SDK for Nexus that helps integrating with the Blue Brain Nexus API from Javascript and Typescript code. It aims at giving easy access to all the features offered by the API. It also offers Typescript declarations.\nThis is the library of top of which the Nexus Web interface is built, but it remains framework-agnostic.","title":"Introduced Javascript SDK for Nexus"},{"location":"/docs/release-notes/index.html#introduced-python-sdk-for-nexus","text":"We released a Python SDK for Nexus that helps integrating with the Blue Brain Nexus API from Python. It aims at giving easy access to all the features offered by the API.","title":"Introduced Python SDK for Nexus"},{"location":"/docs/release-notes/index.html#introduced-a-command-line-interface-cli-for-nexus","text":"We released a Nexus CLI that helps interaction with Nexus from the command line. This tool is built on top of the Python SDK for Nexus. It aims at giving easy access to all the features offered by the API and faciliate your data management with Nexus. The use of the CLI is extensively demonstrated in our Nexus Tutorial.","title":"Introduced a Command Line Interface (CLI) for Nexus"},{"location":"/docs/release-notes/index.html#migration-from-v0-y-z-series","text":"The semantics of the API and managed resources in between the v0.y.z and v1.y.z series has changed considerably making an automatic migration almost impossible without understanding the structure of the data stored in Nexus. We recommend building a tailored migration script. Please find us on gitter for help and advice on how to do this effectively depending on your use of Nexus.","title":"Migration from v0.y.z series"},{"location":"/docs/release-notes/index.html#removed-of-dependency-on-kafka","text":"Services have been updated to expose their event logs or subsets via HTTP through Server Sent Events, removing the need to use Kafka as means of service to service communication. It uses the same authentication and authorization mechanism as with the rest of the API, thus ensuring that the information exchanged in guarded by the ACLs defined.\nThe change reduces the additional operational burden of maintaining a Kafka cluster and also opens up the system for extension as the event logs can be consumed by third party applications in an efficient manner without the need of direct access to the message broker.","title":"Removed of dependency on Kafka"},{"location":"/docs/release-notes/index.html#in-memory-indices","text":"Versions v0.y.z of iam and later on admin services depended on ElasticSearch and BlazeGraph to maintain indices of the resources managed. Since these resources easily fit in memory on a single node, the dependency on these external systems has been removed in favour of in memory indices to provide a consistent view on the data and increase the general availability. In between nodes, when services are deployed as a cluster, the indices are replicated by using CRDTs which are natively supported by Akka Distributed Data.","title":"In memory indices"},{"location":"/docs/faq.html","text":"","title":"Frequently asked questions"},{"location":"/docs/faq.html#frequently-asked-questions","text":"What is Nexus?\nNexus is an Open Source, data and knowledge management platform designed to enable ingestion, integration and search of virtually any kind of data. Entities (real world data) are described using well defined and validatable schemas (using JSON-LD and optionally SHACL). Nexus can be used with existing data schemas from http://schema.org or new ones custom created for your own applications. For neuroscience data, http://Neuroshapes.org provides open, community-developed schemas. While Nexus is engineered to support rich semantics, it is not obligatory. In fact, data can be ingested from existing data sources such as CSV files and SQL databases, and iteratively reshaped into well defined data schemas. Nexus creating and managing entities as well as their relations (e.g. provenance) by the FAIR principles. Indeed, Nexus enables data to be Findable, Accessible, Interoperable and Re-usable, as well as able to track data provenance and supporting data longevity in a secure and scalable manner.\nIs Nexus free to use?\nYes, Nexus is a free, Open Source platform released under Apache Licence 2.0\nHow to run Nexus?\nThere are many ways to run Nexus: a public instance is running in a Sandbox, meanwhile if you want to run it locally you might need to install Docker or Minikube. You can also deploy Nexus “on premise”, as a single instance or as a cluster. Nexus has also been deployed and tested on AWS and information on deploying in the Amazon cloud will be made available shortly.\nHow can I try Nexus without installing it? What is the difference with a relational database like PostgreSQL?\nThe Sandbox provides a public instance that can serve as a testbed. Be aware that the content of the Sandbox is regularly purged.\nAlthough Nexus can be used as a regular database, it’s flexibility and feature set are well beyond that. Just to mention some of the Nexus features:\nAllows to define different constraints to different set of data at runtime; Provides automatic indexing into several indexers (currently ElasticSearch and Sparql), dealing with reindexing strategies, retries and progress; Provides authentication; Comes with a flexible and granular authorization mechanism; Guarantees resources immutability, keeping track of a history of changes.\nIs there a cloud deployment of Nexus?\nThere is a sandbox for you to try Nexus, it has limited resources and it is regularly wiped out. At the following page is explained how to interact with Blue Brain Nexus web interface. It is possible to deploy Nexus on Amazon’s AWS infrastructure. Instructions for how to do so will be made available shortly.\nIs there a limit on the number of resources Nexus can store?\nBlue Brain Nexus leverages scalable open source technologies, therefore limitations and performance depends heavily on the deployment setup where Nexus is running.\nTo get an idea about the ingestion capabilities, we have run Benchmarks where we were able to ingest over 2 billion triples representing 115 million resources.\nWhat is a Knowledge Graph?\nA Knowledge Graph is a modern approach to enabling the interlinked representations of entities (real-world objects, activities or concepts). Knowledge Graphs combine properties of databases (enabling structured queries), graphs (finding and analysing data via entity relationships) and knowledge bases (that enable navigating knowledge and inferring facts).\nNexus employs a Knowledge Graph to enable validation, search, analysis and integration of data.\nAs you can see in ‘Understanding the Knowledge Graph’ page, at the heart of Blue Brain Nexus platform lies a Knowledge Graph, that provides knowledge representation to enable data integration and FAIR principles at Blue Brain and across the neuroscience community.\nIndeed, Nexus allow scientists to:\nRegister and manage relevant entity types; Submit data to the platform and describe their provenance using the W3C PROV model; Search, discover, reuse and derive data generated within and outside the platform for the purpose of driving their own scientific endeavours.\nHow do I report a bug? Which support Nexus team provide?\nThere are several channels provided to address different issues:\nBug report: If you have found a bug while using some of the Nexus services, please create an issue here. Questions: if you need support, we will be reachable through the Nexus Gitter channel Documentation: Technical documentation and ‘Quick Start’ to Nexus related concepts can be found here Feature request: If there is a feature you would like to see in Blue Brain Nexus, please first consult the list of open feature requests. In case there isn’t already one, please open a feature request describing your feature with as much detail as possible.","title":"Frequently asked questions"},{"location":"/docs/faq.html#technical","text":"What are the clients I can use with Nexus? What are the requirements to run Nexus locally?\nOn macOS and Windows, Docker effectively runs containers inside a VM created by the system hypervisor. Nexus requires at least 2 CPUs and 8 GB of memory in total. You can increase the limits in Docker settings in the menu Preferences > Advanced. More datails are in the dedicated page.\nWhat is JSON-LD?\nJSON-LD is a JavaScript Object Notation for Linked Data. A JSON-LD payload is then converted to an RDF Graph for validation purposes and for ingestion in the Knowledge Graph.\nWhat is RDF?\nThe Resource Description Framework (RDF) is a graph-based data model used for representing information in the Web. The basic structure of any expression in RDF is in triples, an extremely easy segmentation of any kind of knowledge in subject-predicate-object. It is a family of W3C specifications, and was originally design as a metadata model.\nWhat is Elasticsearch?\nElasticsearch is a document oriented search engine with an HTTP web interface and schema-free JSON document. It’s able to aggregate data based on specific queries enabling the exploration of trends and pattern.\nWhat is a SHACL schema?\nSHACL (Shapes Constraint Language) is a language for validating RDF graphs against a set of conditions. These conditions are provided as shapes and other constructs expressed in the form of an RDF graph. SHACL is used in Nexus to constrain and control the payload that can be pushed into Nexus.\nDo I need to define SHACL schemas to bring data in?\nNo. SHACL schemas provides with an extra layer of quality control for the data that is ingested into Nexus. However we acknowledge the complexity of defining schemas. That’s why clients can decide whether to use schemas to constrain their data or not, depending on their use case and their available resources.\nWhere can I find SHACL shapes I can reuse (point to resources, like schema.org)?\nDatashapes.org provides an automated conversion of schema.org as SHACL entities. A neuroscience community effort and INCF Special Interest Group - Neuroshapes page on github, provides open schemas for neuroscience data based on common use cases.\nWhy are RDF and JSON-LD important for Nexus?\nRDF is the data model used to ingest data into the Knowledge Graph and it is also used for SHACL schema data validation. JSON-LD is fully compatible with the RDF data model, and it is the main format we use for messages exchange. It is also the preferred format for message exchanges for APIs. The choice of JSON-LD is due to the fact that is as plain JSON but with some special keywords.\nCan I connect any SPARQL client to Nexus’ SPARQL endpoint?\nYes. As long as the client supports the ability to provide a Authentication HTTP Header (for authentication purposes) on the request, any SPARQL client should work.\nHow can I create a Organizations as an anonymous user in the docker-compose file? What needs to be done to switch to “authenticated” mode?\nThe permissions for anonymous are preset in the ACLs and should be replaced by the standard authentication. More details here.\nCan I use Nexus from Jupyter Notebooks?\nNexus can be used from Jupyter Notebooks using Nexus Python SDK. Alternatively, you can also use any Python HTTP client and use Nexus REST API directly from the Jupyter Notebook. Few examples are provided in the folder Notebooks or in the page dedicated to create a recommendation engine using Blue Brain Nexus.","title":"Technical"},{"location":"/docs/additional-info/index.html","text":"","title":"Additional Information"},{"location":"/docs/additional-info/index.html#additional-information","text":"Everything you want to know about the technical details regarding how Blue Brain Nexus works and how to build your own applications on top of it.","title":"Additional Information"},{"location":"/docs/additional-info/sdk.html","text":"","title":"SDKs for Nexus"},{"location":"/docs/additional-info/sdk.html#sdks-for-nexus","text":"","title":"SDKs for Nexus"},{"location":"/docs/additional-info/sdk.html#js-sdk-for-nexus","text":"The Javascript SDK provides many features to help you build web applications that integrate with Blue Brain Nexus.","title":"JS SDK for Nexus"},{"location":"/docs/additional-info/sdk.html#how-to-install","text":"npm install @bbp/nexus-sdk","title":"How to install"},{"location":"/docs/additional-info/sdk.html#list-of-supported-operations","text":"You can find the list of all supported operations directly from the nexus-sdk repository","title":"List of supported operations"},{"location":"/docs/additional-info/sdk.html#typescript-declarations","text":"The SDK is written in Typescript, so type declarations for all operations are included in the package.\nYou can generated documentation using npm run documentation or with docker by running make documentation. More information can be found here","title":"Typescript declarations"},{"location":"/docs/additional-info/architecture/index.html","text":"","title":"System Architecture"},{"location":"/docs/additional-info/architecture/index.html#system-architecture","text":"The architecture section is to provide a comprehensive architectural overview of the Nexus platform. It presents a number of architectural views to depict various aspects of the system. It is intended to convey the significant architectural decisions which have been made on the system.","title":"System Architecture"},{"location":"/docs/additional-info/architecture/index.html#presentation","text":"A one hour talk was given at the Scala Romandie meetup Building a knowledge graph for data driven science.\nIt goes through key design decisions behind building Nexus and highlights from the concrete implementation in our Scala codebase.\nYou can see the original slides or a PDF export.","title":"Presentation"},{"location":"/docs/additional-info/architecture/use-cases.html","text":"","title":"Use Cases"},{"location":"/docs/additional-info/architecture/use-cases.html#use-cases","text":"","title":"Use Cases"},{"location":"/docs/additional-info/architecture/components.html","text":"","title":"Components"},{"location":"/docs/additional-info/architecture/components.html#components","text":"The Nexus platform is made up of a collection of services and web applications that work together to manage data stored within the system. The services and web applications are powered by a collection of libraries and tools built specifically to address the needs of the platform. Underneath it all there are popular open source technologies that we all know and love.","title":"Components"},{"location":"/docs/additional-info/architecture/components.html#nexus-services","text":"","title":"Nexus Services"},{"location":"/docs/additional-info/architecture/components.html#nexus-knowledgegraph","text":"This service is the heart of the BlueBrain Nexus platform. It allows users to define their domain, populate the knowledge graph with data, attach files to data. It also provides semantic search facilities to discover similar and relevant data in the platform.\nSource Code | Documentation","title":"Nexus KnowledgeGraph"},{"location":"/docs/additional-info/architecture/components.html#nexus-admin","text":"This service manages the platform wide scopes for data and their configuration (i.e.: the API mapping).\nSource Code | Documentation","title":"Nexus Admin"},{"location":"/docs/additional-info/architecture/components.html#nexus-iam","text":"This service manages the access to data within the platform. It makes use of configurable downstream OpenID Connect compliant identity providers to authenticate clients and manages the access controls for the entire platform.\nSource Code | Documentation","title":"Nexus IAM"},{"location":"/docs/additional-info/architecture/components.html#nexus-web-applications","text":"","title":"Nexus Web Applications"},{"location":"/docs/additional-info/architecture/components.html#nexus-web","text":"This is the web interface to the platform. It allows users to browse the data within the system and perform administration tasks.\nSource Code | Documentation","title":"Nexus Web"},{"location":"/docs/additional-info/architecture/components.html#nexus-docs","text":"Generated documentation for the platform (this website).\nSource Code | Website","title":"Nexus Docs"},{"location":"/docs/additional-info/architecture/components.html#domains-schemas-vocabularies-","text":"","title":"Domains (Schemas, Vocabularies)"},{"location":"/docs/additional-info/architecture/components.html#nexus-core-schemas","text":"","title":"Nexus Core Schemas"},{"location":"/docs/additional-info/architecture/components.html#nexus-schemaorg","text":"SHACL version of a subset of schemas defined by schema.org that are commonly used in Blue Brain Nexus.\nSource Code","title":"nexus-schemaorg"},{"location":"/docs/additional-info/architecture/components.html#nexus-prov","text":"Data management oriented SHACL version of W3C PROV-O.\nSource Code","title":"nexus-prov"},{"location":"/docs/additional-info/architecture/components.html#nexus-domain-specific-components","text":"","title":"Nexus domain specific components"},{"location":"/docs/additional-info/architecture/components.html#nexus-bbp-data-models","text":"Data models that Blue Brain has developed in order to facilitate the integration of specific neuroscience data.\nSource Code","title":"Nexus BBP Data models"},{"location":"/docs/additional-info/architecture/components.html#neuroshapes","text":"A community effort to develop open SHACL schemas for FAIR (Findable, Accessible, Interoperable, Reproducible) neuroscience data.\nSource Code","title":"Neuroshapes"},{"location":"/docs/additional-info/architecture/components.html#nexus-tools","text":"","title":"Nexus tools"},{"location":"/docs/additional-info/architecture/components.html#nexus-cli","text":"A command line interface (CLI) to operate basic operation on a Nexus deployment.\nSource Code","title":"Nexus CLI"},{"location":"/docs/additional-info/architecture/components.html#nexus-python-sdk","text":"This library will help Python users to integrate their tools with the Blue Brain Nexus platform.\nSource Code | Documentation","title":"Nexus Python SDK"},{"location":"/docs/additional-info/architecture/components.html#js-sdk-for-nexus","text":"A set of helpers to abstract the Nexus API and build Javascript / Typescript applications.\nSource Code | Documentation","title":"JS SDK for Nexus"},{"location":"/docs/additional-info/architecture/integration.html","text":"","title":"Integration"},{"location":"/docs/additional-info/architecture/integration.html#integration","text":"","title":"Integration"},{"location":"/docs/additional-info/benchmarks/index.html","text":"","title":"Benchmarks"},{"location":"/docs/additional-info/benchmarks/index.html#benchmarks","text":"The main goal of the benchmarks was to analyze the hardware requirements for a Nexus deployment and to find potential bottlenecks. In particular, we were most interested in the following metrics:\nthroughput - how many requests per second the system can handle latency - the time the system needed to provide response to the requests\nand how they were affected by different factors, especially:\ndata volume - how does the volume of the data in the system affect the performance hardware configuration and scalability - does assigning more hardware increase the performance of the system and can the system scale both horizontally and vertically. clustering - what’s the effect of changing from a single node to clustered deployment, as well as, what’s the effect of adding more nodes to the cluster.\nThe description of the test scenarios can be found here. The test scenarios and scripts can be found in nexus-tests repository. The results of the benchmarks are described in detail in the Results section.\nThe benchmarks were run on a Kubernetes cluster deployed on AWS. Fore more details see deployment configuration. The tests were run against v1 API of Nexus in November 2018 using Gatling version 3.0.0.","title":"Benchmarks"},{"location":"/docs/additional-info/benchmarks/deployment-configuration.html","text":"","title":"Deployment Configuration"},{"location":"/docs/additional-info/benchmarks/deployment-configuration.html#deployment-configuration","text":"The tests were performed against Nexus services deployed in Kubernetes cluster provisioned by Amazon EKS. The deployment configuration and the number of nodes assigned to each Nexus service are presented in the following diagram:\nThe benchmarks were run on a AWS EC2 m5.large server outside of the Kubernetes cluster.\nPreliminary tests shows that KG service is the most critical component of the system (as expected) and it has the most impact of the performance aspects of the system. Thus, during the tests the KG service cluster size was scaled to 1, 2, 4 and 6 replicas along with the number of concurrent connections (using the same multiplier) during the test executions.","title":"Deployment Configuration"},{"location":"/docs/additional-info/benchmarks/data-volume-and-scenarios.html","text":"","title":"Data volume and scenarios"},{"location":"/docs/additional-info/benchmarks/data-volume-and-scenarios.html#data-volume-and-scenarios","text":"Prior to the test execution a reasonable amount of data was injected into the system to ensure the system behaves well under a typical volume. Specifically:\nTotal number of resources: 115,690,687 Total number of triples (edges): 2,493,134,304 Total number of entities (nodes): 352,856,595 Total number of property types: 74 Total number of classes (distinct values of @type): 24\nThe data was generated by replicating a collection of provenance patterns, each spanning several resources:\nresource examples corresponding SHACL schemas\nThe full collection of scenarios can be found here each within its own file.\nSeveral scenarios were executed to verify the behaviour of the system, most notably:\ncreate resource (with validation) create resource (without validation) get resource by id tag resource get resource by revision, get resource by tag mixed operations: list resources, get resource by id, ElasticSearch query, BlazeGraph query, update resource\nPlease head over to the results section for a summary of the results and conclusions.","title":"Data volume and scenarios"},{"location":"/docs/additional-info/benchmarks/results.html","text":"","title":"Results"},{"location":"/docs/additional-info/benchmarks/results.html#results","text":"","title":"Results"},{"location":"/docs/additional-info/benchmarks/results.html#create-simulation","text":"Nodes Users Throughput (req/s) p50 (ms) p75 (ms) p95 (ms) p99 (ms) 1 16 36 513 681 820 999 2 32 51 572 706 1107 1191 4 64 106 586 722 1033 1423 6 96 148 589 802 1209 1741","title":"Create Simulation"},{"location":"/docs/additional-info/benchmarks/results.html#create-simulation-no-validation-","text":"Nodes Users Throughput (req/s) p50 (ms) p75 (ms) p95 (ms) p99 (ms) 1 16 456 11 72 85 198 2 32 490 33 74 239 403 4 64 1063 26 77 180 366 6 96 891 59 113 431 546","title":"Create Simulation (no validation)"},{"location":"/docs/additional-info/benchmarks/results.html#fetch-simulation","text":"Nodes Users Throughput (req/s) p50 (ms) p75 (ms) p95 (ms) p99 (ms) 1 16 1849 4 4 55 68 2 32 2826 5 6 47 93 4 64 3440 10 13 53 116 6 96 3860 15 21 57 127","title":"Fetch Simulation"},{"location":"/docs/additional-info/benchmarks/results.html#mixed-simulation","text":"Nodes Users Throughput (req/s) p50 (ms) p75 (ms) p95 (ms) p99 (ms) 1 16 467 14 29 80 269 2 32 566 15 25 89 1076 4 64 567 16 27 128 3552 6 96 506 16 26 154 7182","title":"Mixed Simulation"},{"location":"/docs/additional-info/benchmarks/results.html#tag-simulation","text":"Nodes Users Throughput (req/s) p50 (ms) p75 (ms) p95 (ms) p99 (ms) 1 16 508 7 69 95 195 2 32 699 16 76 100 199 4 64 1107 15 80 163 276 6 96 1661 26 72 144 257","title":"Tag Simulation"},{"location":"/docs/additional-info/benchmarks/results.html#getbytag-simulation","text":"Nodes Users Throughput (req/s) p50 (ms) p75 (ms) p95 (ms) p99 (ms) 1 16 156 86 116 298 418 2 32 189 118 215 406 586 4 64 192 200 460 975 1381 6 96 285 202 477 988 1409","title":"GetByTag Simulation"},{"location":"/docs/additional-info/benchmarks/results.html#conclusions","text":"The “Create Simulation” and “Create Simulation (no validation)” shows the impact of SHACL validation for resources on the throughput an latency. Most of the CPU cycles (~ 90%) are spent running the validation.\nThe system scales fairly well with the number of nodes allocated, but depends on each of the operations. Although the number of concurrent requests is generally higher with more nodes, the penalty of node to node communication can have a fairly big impact. For example: assembling schemas (following owl:import and @context references) implies a lot of cross node communication; for “Create Simulation” increasing the cluster size from 1 to 2, while it shows an increase in the total throughput, the value is not double to that of a single node.","title":"Conclusions"},{"location":"/docs/additional-info/web-applications-standards.html","text":"","title":"Web applications development best practices"},{"location":"/docs/additional-info/web-applications-standards.html#web-applications-development-best-practices","text":"","title":"Web applications development best practices"},{"location":"/docs/additional-info/web-applications-standards.html#tools-we-standardize-on","text":"Language: Typescript Powerful type system and other features allow building higher quality applications, especially when they become complex. It is becoming the standard for entreprise-grade applications. Framework: React + Redux The most widespread JS framework and state management solution. Bundler: Parcel Manages everything needed to bundle regular web applications with zero configuration most of the time. Unit tests: Jest Zero-configuration testing framework, best support for React. Linting: ESLint Airbnb with a few additions One of the most widespread coding style to make it easy for multiple developers to collaborate on the same code base. NodeJS version: latest LTS To allow anyone to install Blue Brain Nexus on their infrastructure, we stay compatible with NodeJS Long Term Support version that is the one usually available for production systems.","title":"Tools we standardize on"},{"location":"/docs/additional-info/web-applications-standards.html#workflow","text":"","title":"Workflow"},{"location":"/docs/additional-info/web-applications-standards.html#git-and-deployment","text":"Our workflow is inspired by Gitflow, simplified.\nDirect commit to the master branch is prohibited Features and fixes are developed in separate feature branches When ready for review, a Pull Request is opened for inclusion into the master branch. The Pull Request must be approved by at least 1 other developer. When merged into the master branch, it triggers a deployment to our staging environment. We tag the master branch with a Semantic Versioning version number when we consider it is high quality enough for release.","title":"Git and deployment"},{"location":"/docs/additional-info/web-applications-standards.html#code-documentation","text":"Technical documentation is written along with the code in the form of JSDoc comments, and that we can extract with tools like documentation.js.\nUser documentation is written in the Blue Brain Nexus Platform documentation, including this very document. It is kept up-to-date with the latest features of the web applications and revised before any release.","title":"Code documentation"},{"location":"/docs/tutorial/shacl-in-a-nutshell/cleaning-movielens.html","text":"","title":"SHACL Overview"},{"location":"/docs/tutorial/shacl-in-a-nutshell/cleaning-movielens.html#shacl-overview","text":"","title":"SHACL Overview"},{"location":"/docs/tutorial/shacl-in-a-nutshell/cleaning-movielens.html#shacl-core-components","text":"","title":"SHACL Core Components"},{"location":"/docs/tutorial/shacl-in-a-nutshell/cleaning-movielens.html#a-validation-language-for-a-graph-data-model","text":"","title":"A validation language for a graph data model"},{"location":"/docs/tutorial/shacl-in-a-nutshell/cleaning-movielens.html#basic-definitions","text":"","title":"Basic definitions"},{"location":"/docs/tutorial/build-recommender/train-recommender-model.html","text":"","title":"Build Model"},{"location":"/docs/tutorial/build-recommender/train-recommender-model.html#build-model","text":"","title":"Build Model"},{"location":"/docs/tutorial/build-recommender/train-recommender-model.html#overview","text":"","title":"Overview"},{"location":"/docs/tutorial/build-recommender/train-recommender-model.html#what-youll-build","text":"","title":"What you’ll build"},{"location":"/docs/tutorial/build-recommender/train-recommender-model.html#what-youll-learn","text":"","title":"What you’ll learn"},{"location":"/docs/tutorial/build-recommender/train-recommender-model.html#what-youll-need","text":"","title":"What you’ll need"},{"location":"/docs/tutorial/build-recommender/train-recommender-model.html#get-the-tutorial-code","text":"","title":"Get the tutorial code"},{"location":"/docs/tutorial/build-recommender/prepare-data.html","text":"","title":"Prepare data"},{"location":"/docs/tutorial/build-recommender/prepare-data.html#prepare-data","text":"","title":"Prepare data"},{"location":"/docs/tutorial/build-recommender/prepare-data.html#overview","text":"","title":"Overview"},{"location":"/docs/tutorial/build-recommender/prepare-data.html#what-youll-build","text":"","title":"What you’ll build"},{"location":"/docs/tutorial/build-recommender/prepare-data.html#what-youll-learn","text":"","title":"What you’ll learn"},{"location":"/docs/tutorial/build-recommender/prepare-data.html#what-youll-need","text":"","title":"What you’ll need"},{"location":"/docs/tutorial/build-recommender/prepare-data.html#get-the-tutorial-code","text":"","title":"Get the tutorial code"},{"location":"/docs/tutorial/build-recommender/push-model.html","text":"","title":""},{"location":"/docs/getting-started/intro-linked-data.html","text":"","title":"Introduction to Linked Data"},{"location":"/docs/getting-started/intro-linked-data.html#introduction-to-linked-data","text":"","title":"Introduction to Linked Data"},{"location":"/docs/tutorial/nexus-nutshell/index.html","text":"","title":"Nexus in a nutshell"},{"location":"/docs/tutorial/nexus-nutshell/index.html#nexus-in-a-nutshell","text":"","title":"Nexus in a nutshell"},{"location":"/docs/tutorial/nexus-nutshell/index.html#overview","text":"","title":"Overview"},{"location":"/docs/tutorial/nexus-nutshell/index.html#what-youll-build","text":"","title":"What you’ll build"},{"location":"/docs/tutorial/nexus-nutshell/index.html#what-youll-learn","text":"","title":"What you’ll learn"},{"location":"/docs/tutorial/nexus-nutshell/index.html#what-youll-need","text":"","title":"What you’ll need"},{"location":"/docs/tutorial/nexus-nutshell/index.html#get-the-tutorial-code","text":"","title":"Get the tutorial code"},{"location":"/docs/tutorial/build-recommender/setup-es-view.html","text":"","title":"Set up Nexus"},{"location":"/docs/tutorial/build-recommender/setup-es-view.html#set-up-nexus","text":"","title":"Set up Nexus"},{"location":"/docs/tutorial/build-recommender/setup-es-view.html#overview","text":"","title":"Overview"},{"location":"/docs/tutorial/build-recommender/setup-es-view.html#what-youll-build","text":"","title":"What you’ll build"},{"location":"/docs/tutorial/build-recommender/setup-es-view.html#what-youll-learn","text":"","title":"What you’ll learn"},{"location":"/docs/tutorial/build-recommender/setup-es-view.html#what-youll-need","text":"","title":"What you’ll need"},{"location":"/docs/tutorial/build-recommender/setup-es-view.html#get-the-tutorial-code","text":"","title":"Get the tutorial code"},{"location":"/docs/tutorial/knowledge-graph/little-semantic.html","text":"","title":"Little semantic goes a long way"},{"location":"/docs/tutorial/knowledge-graph/little-semantic.html#little-semantic-goes-a-long-way","text":"","title":"Little semantic goes a long way"},{"location":"/docs/tutorial/knowledge-graph/little-semantic.html#overview","text":"","title":"Overview"}]}