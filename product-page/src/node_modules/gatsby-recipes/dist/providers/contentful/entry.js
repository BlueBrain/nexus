"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _joi = _interopRequireDefault(require("@hapi/joi"));

var _resourceSchema = _interopRequireDefault(require("../resource-schema"));

var _client = _interopRequireDefault(require("./client"));

const getDiff = require(`../utils/get-diff`);

const create = async (context, {
  fields
}) => {
  const spaceId = context.ContentfulSpace.id;
  const contentTypeId = context.ContentfulType.id;
  const space = await _client.default.getSpace(spaceId);
  const entry = await space.createEntryWithId(contentTypeId, `pizza-face`, {
    fields: {
      title: {
        "en-US": fields.title
      },
      body: {
        "en-US": fields.body
      }
    }
  });
  await entry.publish();
  console.log(`new entry`, entry);
  return { ...entry,
    id: entry.sys.id,
    _message: message(entry)
  };
};

const read = async (context, name) => {};

const destroy = async (_context, id) => {};

const all = async () => {};

const schema = {
  fields: _joi.default.object(),
  sys: _joi.default.object(),
  ..._resourceSchema.default
};

const validate = resource => _joi.default.validate(resource, schema, {
  abortEarly: false
});

const plan = async (context, {
  id,
  fields
}) => {
  // const currentResource = await read(context, id)
  let currentResource;
  console.log({
    context
  });

  if (!currentResource) {
    return {
      currentState: ``,
      describe: `Create Contentful entry for "${context.ContentfulType.name}"`,
      diff: getDiff({}, fields) // diffExists: true,
      // skipDiff: true,

    };
  } else {
    return {
      currentState: currentResource,
      describe: `Contentful type ${currentResource.name} already exists` // diff: getDiff(plan.currentState, plan.newState),

    };
  }
};

const message = resource => `Created Contentful Entry "${resource.name}"`;

module.exports.schema = schema;
module.exports.validate = validate;
module.exports.plan = plan;
module.exports.create = create;
module.exports.read = read;
module.exports.update = create;
module.exports.destroy = destroy;
module.exports.all = all;