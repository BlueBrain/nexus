"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _joi = _interopRequireDefault(require("@hapi/joi"));

var _client = _interopRequireDefault(require("./client"));

var _resourceSchema = _interopRequireDefault(require("../resource-schema"));

const create = async (context, {
  name
}) => {
  const spaceId = context.ContentfulSpace.id;
  const space = await _client.default.getSpace(spaceId);
  const environment = await space.createEnvironment({
    name
  });
  return {
    name: environment.name,
    id: environment.sys.id,
    _message: message(environment)
  };
};

const read = async (context, name) => {
  console.log({
    context,
    name
  });
  return undefined;
};

const destroy = async (_context, id) => {};

const all = async () => {};

const schema = {
  name: _joi.default.string(),
  ..._resourceSchema.default
};

const validate = resource => _joi.default.validate(resource, schema, {
  abortEarly: false
});

const plan = async (context, {
  id,
  name
}) => {
  console.log({
    context,
    name,
    id
  });
  const currentResource = await read(context, id || name);

  if (!currentResource) {
    return {
      currentState: ``,
      describe: `Create Contentful environment ${name}`,
      diffExists: true,
      skipDiff: true
    };
  } else {
    return {
      currentState: currentResource,
      describe: `Contentful environment ${name} already exists`,
      diff: ``
    };
  }
};

const message = resource => `Created Contentful environment "${resource.name}"`;

module.exports.schema = schema;
module.exports.validate = validate;
module.exports.plan = plan;
module.exports.create = create;
module.exports.read = read;
module.exports.update = create;
module.exports.destroy = destroy;
module.exports.all = all;