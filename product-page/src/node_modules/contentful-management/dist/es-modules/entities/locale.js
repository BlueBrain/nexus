import cloneDeep from 'lodash/cloneDeep';
import { freezeSys, toPlainObject } from 'contentful-sdk-core';
import enhanceWithMethods from '../enhance-with-methods';
import { wrapCollection } from '../common-utils';
import { createUpdateEntity, createDeleteEntity } from '../instance-actions';

function createLocaleApi(http) {
  return {
    update: function update() {
      var self = this;
      delete self["default"]; // we should not send this back

      return createUpdateEntity({
        http: http,
        entityPath: 'locales',
        wrapperMethod: wrapLocale
      }).call(self);
    },
    "delete": createDeleteEntity({
      http: http,
      entityPath: 'locales'
    })
  };
}
/**
 * @private
 * @param http - HTTP client instance
 * @param data - Raw locale data
 * @return Wrapped locale data
 */


export function wrapLocale(http, data) {
  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore
  // @ts-ignore
  delete data.internal_code;
  var locale = toPlainObject(cloneDeep(data));
  var localeWithMethods = enhanceWithMethods(locale, createLocaleApi(http));
  return freezeSys(localeWithMethods);
}
/**
 * @private
 */

export var wrapLocaleCollection = wrapCollection(wrapLocale);