import cloneDeep from 'lodash/cloneDeep';
import { freezeSys, toPlainObject } from 'contentful-sdk-core';
import enhanceWithMethods from '../enhance-with-methods';
import { wrapCollection } from '../common-utils';
import { createUpdateEntity, createDeleteEntity } from '../instance-actions';

function createRoleApi(http) {
  return {
    update: createUpdateEntity({
      http: http,
      entityPath: 'roles',
      wrapperMethod: wrapRole
    }),
    "delete": createDeleteEntity({
      http: http,
      entityPath: 'roles'
    })
  };
}
/**
 * @private
 * @param http - HTTP client instance
 * @param data - Raw role data
 * @return Wrapped role data
 */


export function wrapRole(http, data) {
  var role = toPlainObject(cloneDeep(data));
  var roleWithMethods = enhanceWithMethods(role, createRoleApi(http));
  return freezeSys(roleWithMethods);
}
/**
 * @private
 */

export var wrapRoleCollection = wrapCollection(wrapRole);