import cloneDeep from 'lodash/cloneDeep';
import { freezeSys, toPlainObject } from 'contentful-sdk-core';
import enhanceWithMethods from '../enhance-with-methods';
import { wrapCollection } from '../common-utils';
import { createDeleteEntity, createUpdateEntity } from '../instance-actions';
var entityPath = 'teams';
/**
 * @private
 */

function createTeamApi(http) {
  return {
    update: createUpdateEntity({
      http: http,
      entityPath: entityPath,
      wrapperMethod: wrapTeam
    }),
    "delete": createDeleteEntity({
      http: http,
      entityPath: entityPath
    })
  };
}
/**
 * @private
 * @param http - HTTP client instance
 * @param data - Raw team data
 * @return Wrapped team data
 */


export function wrapTeam(http, data) {
  var team = toPlainObject(cloneDeep(data));
  var teamWithMethods = enhanceWithMethods(team, createTeamApi(http));
  return freezeSys(teamWithMethods);
}
/**
 * @private
 */

export var wrapTeamCollection = wrapCollection(wrapTeam);