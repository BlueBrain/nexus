import _cloneDeep from "lodash/cloneDeep";
import { freezeSys, toPlainObject } from 'contentful-sdk-core';
import { VersionHeader, wrapCollection } from '../common-utils';
import enhanceWithMethods from '../enhance-with-methods';
import errorHandler from '../error-handler';
export function createDeleteTag(http) {
  return function () {
    var self = this;
    return http["delete"]('tags/' + self.sys.id, VersionHeader(self.sys.version)) // eslint-disable-next-line @typescript-eslint/no-empty-function
    .then(function () {}, errorHandler);
  };
}
export function createUpdateTag(http) {
  return function () {
    var self = this;
    return http.put('tags', {
      name: self.name,
      sys: {
        id: self.sys.id
      }
    }, VersionHeader(self.sys.version)).then(function (response) {
      return wrapTag(http, response.data);
    }, errorHandler);
  };
}
export default function createTagApi(http) {
  return {
    update: createUpdateTag(http),
    "delete": createDeleteTag(http)
  };
}
export function wrapTag(http, data) {
  var tag = toPlainObject(_cloneDeep(data));
  var tagWithMethods = enhanceWithMethods(tag, createTagApi(http));
  return freezeSys(tagWithMethods);
}
export var wrapTagCollection = wrapCollection(wrapTag);