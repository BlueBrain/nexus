import cloneDeep from 'lodash/cloneDeep';
import { freezeSys, toPlainObject } from 'contentful-sdk-core';
import enhanceWithMethods from '../enhance-with-methods';
import { createDeleteEntity } from '../instance-actions';
import errorHandler from '../error-handler';
import { wrapCollection } from '../common-utils';

function createTeamSpaceMembershipApi(http) {
  return {
    update: function update() {
      var raw = this.toPlainObject();
      var data = cloneDeep(raw);
      delete data.sys;
      return http.put('team_space_memberships/' + this.sys.id, data, {
        headers: {
          'X-Contentful-Version': this.sys.version || 0,
          'x-contentful-team': this.sys.team.sys.id
        }
      }).then(function (response) {
        return wrapTeamSpaceMembership(http, response.data);
      }, errorHandler);
    },
    "delete": createDeleteEntity({
      http: http,
      entityPath: 'team_space_memberships'
    })
  };
}
/**
 * @private
 * @param http - HTTP client instance
 * @param data - Raw space membership data
 * @return Wrapped team space membership data
 */


export function wrapTeamSpaceMembership(http, data) {
  var teamSpaceMembership = toPlainObject(cloneDeep(data));
  var teamSpaceMembershipWithMethods = enhanceWithMethods(teamSpaceMembership, createTeamSpaceMembershipApi(http));
  return freezeSys(teamSpaceMembershipWithMethods);
}
/**
 * @private
 */

export var wrapTeamSpaceMembershipCollection = wrapCollection(wrapTeamSpaceMembership);