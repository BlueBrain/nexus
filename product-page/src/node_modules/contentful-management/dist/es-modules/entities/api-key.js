import cloneDeep from 'lodash/cloneDeep';
import { freezeSys, toPlainObject } from 'contentful-sdk-core';
import enhanceWithMethods from '../enhance-with-methods';
import { createUpdateEntity, createDeleteEntity } from '../instance-actions';
import { wrapCollection } from '../common-utils';

function createApiKeyApi(http) {
  return {
    update: function update() {
      var self = this;

      if ('accessToken' in self) {
        delete self.accessToken;
      }

      if ('preview_api_key' in self) {
        delete self.preview_api_key;
      }

      if ('policies' in self) {
        delete self.policies;
      }

      var update = createUpdateEntity({
        http: http,
        entityPath: 'api_keys',
        wrapperMethod: wrapApiKey
      });
      return update.call(self);
    },
    "delete": createDeleteEntity({
      http: http,
      entityPath: 'api_keys'
    })
  };
}
/**
 * @private
 * @param http - HTTP client instance
 * @param data - Raw api key data
 */


export function wrapApiKey(http, data) {
  var apiKey = toPlainObject(cloneDeep(data));
  var apiKeyWithMethods = enhanceWithMethods(apiKey, createApiKeyApi(http));
  return freezeSys(apiKeyWithMethods);
}
/**
 * @private
 * @param http - HTTP client instance
 * @param data - Raw api key collection data
 * @return Wrapped api key collection data
 */

export var wrapApiKeyCollection = wrapCollection(wrapApiKey);