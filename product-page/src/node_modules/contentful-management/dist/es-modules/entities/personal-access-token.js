import cloneDeep from 'lodash/cloneDeep';
import { freezeSys, toPlainObject } from 'contentful-sdk-core';
import enhanceWithMethods from '../enhance-with-methods';
import errorHandler from '../error-handler';
import { wrapCollection } from '../common-utils';

function createPersonalAccessToken(http) {
  return {
    revoke: function revoke() {
      var baseURL = (http.defaults.baseURL || '').replace('/spaces/', '/users/me/access_tokens');
      return http.put("".concat(this.sys.id, "/revoked"), null, {
        baseURL: baseURL
      }).then(function (response) {
        return response.data;
      }, errorHandler);
    }
  };
}
/**
 * @private
 * @param http - HTTP client instance
 * @param data - Raw  personal access token data
 * @return Wrapped personal access token
 */


export function wrapPersonalAccessToken(http, data) {
  var personalAccessToken = toPlainObject(cloneDeep(data));
  var personalAccessTokenWithMethods = enhanceWithMethods(personalAccessToken, createPersonalAccessToken(http));
  return freezeSys(personalAccessTokenWithMethods);
}
/**
 * @private
 * @param http - HTTP client instance
 * @param data - Raw personal access collection data
 * @return Wrapped personal access token collection data
 */

export var wrapPersonalAccessTokenCollection = wrapCollection(wrapPersonalAccessToken);