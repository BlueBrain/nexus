import { toPlainObject, freezeSys } from 'contentful-sdk-core';
import cloneDeep from 'lodash/cloneDeep';
import errorHandler from '../error-handler';
import enhanceWithMethods from '../enhance-with-methods';
import { createDeleteEntity } from '../instance-actions';
import { wrapCollection } from '../common-utils';

function createAppInstallationApi(http) {
  return {
    update: function update() {
      var self = this;
      var raw = self.toPlainObject();
      var data = cloneDeep(raw);
      delete data.sys;
      return http.put("app_installations/".concat(self.sys.appDefinition.sys.id), data).then(function (response) {
        return wrapAppInstallation(http, response.data);
      }, errorHandler);
    },
    "delete": createDeleteEntity({
      http: http,
      entityPath: 'app_installations'
    })
  };
}
/**
 * @private
 * @param http - HTTP client instance
 * @param data - Raw App Installation data
 * @return Wrapped App installation data
 */


export function wrapAppInstallation(http, data) {
  var appInstallation = toPlainObject(cloneDeep(data));
  var appInstallationWithMethods = enhanceWithMethods(appInstallation, createAppInstallationApi(http));
  return freezeSys(appInstallationWithMethods);
}
/**
 * @private
 */

export var wrapAppInstallationCollection = wrapCollection(wrapAppInstallation);