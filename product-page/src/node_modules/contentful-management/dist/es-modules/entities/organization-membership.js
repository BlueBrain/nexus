import cloneDeep from 'lodash/cloneDeep';
import { freezeSys, toPlainObject } from 'contentful-sdk-core';
import enhanceWithMethods from '../enhance-with-methods';
import errorHandler from '../error-handler';
import { createDeleteEntity } from '../instance-actions';
import { wrapCollection } from '../common-utils';

function createOrganizationMembershipApi(http) {
  return {
    update: function update() {
      var self = this;
      var raw = self.toPlainObject();
      var role = raw.role;
      return http.put('organization_memberships' + '/' + self.sys.id, {
        role: role
      }, {
        headers: {
          'X-Contentful-Version': self.sys.version || 0
        }
      }).then(function (response) {
        return wrapOrganizationMembership(http, response.data);
      }, errorHandler);
    },
    "delete": createDeleteEntity({
      http: http,
      entityPath: 'organization_memberships'
    })
  };
}
/**
 * @private
 * @param {Object} http - HTTP client instance
 * @param {Object} data - Raw organization membership data
 * @return {OrganizationMembership} Wrapped organization membership data
 */


export function wrapOrganizationMembership(http, data) {
  var organizationMembership = toPlainObject(cloneDeep(data));
  var organizationMembershipWithMethods = enhanceWithMethods(organizationMembership, createOrganizationMembershipApi(http));
  return freezeSys(organizationMembershipWithMethods);
}
/**
 * @private
 */

export var wrapOrganizationMembershipCollection = wrapCollection(wrapOrganizationMembership);