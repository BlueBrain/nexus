{"version":3,"sources":["../../src/services/source-nodes.ts"],"names":["sourceNodes","parentSpan","webhookBody","store","deferNodeMutation","activity","reporter","activityTimer","start","currentPages","Map","getState","pages","span","verbose","nodes","size","nodesByType","entries","map","type","join","tim","changedPages","deletedPages","length","end"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AAEO,eAAeA,WAAf,CAA2B;AAChCC,EAAAA,UADgC;AAEhCC,EAAAA,WAFgC;AAGhCC,EAAAA,KAHgC;AAIhCC,EAAAA,iBAAiB,GAAG;AAJY,CAA3B,EAQJ;AACD,gCAAYD,KAAZ;;AAEA,QAAME,QAAQ,GAAGC,kBAASC,aAAT,CAAwB,4BAAxB,EAAqD;AACpEN,IAAAA;AADoE,GAArD,CAAjB;;AAGAI,EAAAA,QAAQ,CAACG,KAAT;AACA,QAAMC,YAAY,GAAG,IAAIC,GAAJ,CAA6BP,KAAK,CAACQ,QAAN,GAAiBC,KAA9C,CAArB;AACA,QAAM,0BAA+B;AACnCX,IAAAA,UAAU,EAAEI,QAAQ,CAACQ,IADc;AAEnCT,IAAAA,iBAFmC;AAGnCF,IAAAA;AAHmC,GAA/B,CAAN;;AAMAI,oBAASQ,OAAT,CACG,YAAWX,KAAK,CAACQ,QAAN,GAAiBI,KAAjB,CAAuBC,IAAK,eACtCb,KAAK,CAACQ,QAAN,GAAiBM,WAAjB,CAA6BD,IAC9B,YAAW,CAAC,GAAGb,KAAK,CAACQ,QAAN,GAAiBM,WAAjB,CAA6BC,OAA7B,EAAJ,EACTC,GADS,CACL,CAAC,CAACC,IAAD,EAAOL,KAAP,CAAD,KAAmBK,IAAI,GAAI,GAAR,GAAaL,KAAK,CAACC,IADjC,EAETK,IAFS,CAEH,IAFG,CAEE,GALhB;;AAQAf,oBAASQ,OAAT,CAAkB,4BAAlB;;AAEA,QAAMQ,GAAG,GAAGhB,kBAASC,aAAT,CAAwB,4BAAxB,CAAZ;;AACAe,EAAAA,GAAG,CAACd,KAAJ;AAEA,QAAM;AAAEe,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAiC,oCACrCf,YADqC,EAErCN,KAAK,CAACQ,QAAN,GAAiBC,KAFoB,CAAvC;;AAKAN,oBAASQ,OAAT,CACG,WAAUU,YAAY,CAACC,MAAO,QAAOD,YAAY,CAACC,MAAb,KAAwB,CAAxB,GAA6B,EAA7B,GAAkC,GAAG,EAD7E;;AAIAnB,oBAASQ,OAAT,CACG,SAAQS,YAAY,CAACE,MAAO,gBAC3BF,YAAY,CAACE,MAAb,KAAwB,CAAxB,GAA6B,EAA7B,GAAkC,GACnC,EAHH;;AAKAH,EAAAA,GAAG,CAACI,GAAJ;AAEArB,EAAAA,QAAQ,CAACqB,GAAT;AACA,SAAO;AACLF,IAAAA,YADK;AAELD,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import sourceNodesAndRemoveStaleNodes from \"../utils/source-nodes\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { IDataLayerContext } from \"../state-machines/data-layer/types\"\nimport { assertStore } from \"../utils/assert-store\"\nimport { IGatsbyPage } from \"../redux/types\"\nimport { findChangedPages } from \"../utils/changed-pages\"\n\nexport async function sourceNodes({\n  parentSpan,\n  webhookBody,\n  store,\n  deferNodeMutation = false,\n}: Partial<IDataLayerContext>): Promise<{\n  deletedPages: string[]\n  changedPages: string[]\n}> {\n  assertStore(store)\n\n  const activity = reporter.activityTimer(`source and transform nodes`, {\n    parentSpan,\n  })\n  activity.start()\n  const currentPages = new Map<string, IGatsbyPage>(store.getState().pages)\n  await sourceNodesAndRemoveStaleNodes({\n    parentSpan: activity.span,\n    deferNodeMutation,\n    webhookBody,\n  })\n\n  reporter.verbose(\n    `Now have ${store.getState().nodes.size} nodes with ${\n      store.getState().nodesByType.size\n    } types: [${[...store.getState().nodesByType.entries()]\n      .map(([type, nodes]) => type + `:` + nodes.size)\n      .join(`, `)}]`\n  )\n\n  reporter.verbose(`Checking for deleted pages`)\n\n  const tim = reporter.activityTimer(`Checking for changed pages`)\n  tim.start()\n\n  const { changedPages, deletedPages } = findChangedPages(\n    currentPages,\n    store.getState().pages\n  )\n\n  reporter.verbose(\n    `Deleted ${deletedPages.length} page${deletedPages.length === 1 ? `` : `s`}`\n  )\n\n  reporter.verbose(\n    `Found ${changedPages.length} changed page${\n      changedPages.length === 1 ? `` : `s`\n    }`\n  )\n  tim.end()\n\n  activity.end()\n  return {\n    deletedPages,\n    changedPages,\n  }\n}\n"],"file":"source-nodes.js"}