{"version":3,"sources":["../../../src/bootstrap/__mocks__/resolve-module-exports.ts"],"names":["mockResults","resolveModuleExports","input","Object","assign","undefined"],"mappings":"AAAA;;;;AAEA,IAAIA,WAAW,GAAG,EAAlB;;AAEO,MAAMC,oBAAoB,GAAIC,KAAD,IAA0C;AAC5E;AACA,MAAI,OAAOA,KAAP,KAAkB,QAAtB,EAA+B;AAC7B,WAAOF,WAAW,CAACE,KAAD,CAAlB;AACD,GAJ2E,CAM5E;;;AACA,MAAI,OAAOA,KAAP,KAAkB,QAAtB,EAA+B;AAC7B,WAAO,EAAP;AACD,GAT2E,CAW5E;;;AACAF,EAAAA,WAAW,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,KAAlB,CAAd;AACA,SAAOG,SAAP;AACD,CAdM","sourcesContent":["\"use strict\"\n\nlet mockResults = {}\n\nexport const resolveModuleExports = (input: unknown): string[] | undefined => {\n  // return a mocked result\n  if (typeof input === `string`) {\n    return mockResults[input]\n  }\n\n  // return default result\n  if (typeof input !== `object`) {\n    return []\n  }\n\n  // set mock results\n  mockResults = Object.assign({}, input)\n  return undefined\n}\n"],"file":"resolve-module-exports.js"}