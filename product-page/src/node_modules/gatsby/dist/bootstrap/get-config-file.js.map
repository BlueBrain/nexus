{"version":3,"sources":["../../src/bootstrap/get-config-file.ts"],"names":["isNearMatch","fileName","configName","distance","levenshtein","get","getConfigFile","rootDir","configPath","path","join","configFilePath","configModule","require","resolve","err","nearMatch","fs","readdir","then","files","find","file","split","pop","report","panic","id","error","context","message"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,SAASA,WAAT,CACEC,QADF,EAEEC,UAFF,EAGEC,QAHF,EAIW;AACT,MAAI,CAACF,QAAL,EAAe,OAAO,KAAP;AACf,SAAOG,yBAAYC,GAAZ,CAAgBJ,QAAhB,EAA0BC,UAA1B,KAAyCC,QAAhD;AACD;;AAEM,eAAeG,aAAf,CACLC,OADK,EAELL,UAFK,EAGLC,QAAgB,GAAG,CAHd,EAOJ;AACD,QAAMK,UAAU,GAAGC,cAAKC,IAAL,CAAUH,OAAV,EAAmBL,UAAnB,CAAnB;;AACA,MAAIS,cAAc,GAAI,EAAtB;AACA,MAAIC,YAAJ;;AACA,MAAI;AACFD,IAAAA,cAAc,GAAGE,OAAO,CAACC,OAAR,CAAgBN,UAAhB,CAAjB;AACAI,IAAAA,YAAY,GAAGC,OAAO,CAACF,cAAD,CAAtB;AACD,GAHD,CAGE,OAAOI,GAAP,EAAY;AACZ,UAAMC,SAAS,GAAG,MAAMC,iBAAGC,OAAH,CAAWX,OAAX,EAAoBY,IAApB,CAAyBC,KAAK,IACpDA,KAAK,CAACC,IAAN,CAAWC,IAAI,IAAI;AACjB,YAAMrB,QAAQ,GAAGqB,IAAI,CAACC,KAAL,CAAWhB,OAAX,EAAoBiB,GAApB,EAAjB;AACA,aAAOxB,WAAW,CAACC,QAAD,EAAWC,UAAX,EAAuBC,QAAvB,CAAlB;AACD,KAHD,CADsB,CAAxB;;AAMA,QAAI,CAAC,wCAAiBK,UAAjB,EAA6BO,GAA7B,CAAL,EAAwC;AACtCU,wBAAOC,KAAP,CAAa;AACXC,QAAAA,EAAE,EAAG,OADM;AAEXC,QAAAA,KAAK,EAAEb,GAFI;AAGXc,QAAAA,OAAO,EAAE;AACP3B,UAAAA,UADO;AAEP4B,UAAAA,OAAO,EAAEf,GAAG,CAACe;AAFN;AAHE,OAAb;AAQD,KATD,MASO,IAAId,SAAJ,EAAe;AACpBS,wBAAOC,KAAP,CAAa;AACXC,QAAAA,EAAE,EAAG,OADM;AAEXC,QAAAA,KAAK,EAAEb,GAFI;AAGXc,QAAAA,OAAO,EAAE;AACP3B,UAAAA,UADO;AAEPc,UAAAA;AAFO;AAHE,OAAb;AAQD,KATM,MASA,IAAI,0BAAWP,cAAKC,IAAL,CAAUH,OAAV,EAAoB,KAApB,EAA0BL,UAAU,GAAI,KAAxC,CAAX,CAAJ,EAA+D;AACpEuB,wBAAOC,KAAP,CAAa;AACXC,QAAAA,EAAE,EAAG,OADM;AAEXE,QAAAA,OAAO,EAAE;AACP3B,UAAAA;AADO;AAFE,OAAb;AAMD;AACF;;AAED,SAAO;AAAEU,IAAAA,YAAF;AAAgBD,IAAAA;AAAhB,GAAP;AACD","sourcesContent":["import levenshtein from \"fast-levenshtein\"\nimport fs from \"fs-extra\"\nimport { testRequireError } from \"../utils/test-require-error\"\nimport report from \"gatsby-cli/lib/reporter\"\nimport path from \"path\"\nimport { sync as existsSync } from \"fs-exists-cached\"\n\nfunction isNearMatch(\n  fileName: string | undefined,\n  configName: string,\n  distance: number\n): boolean {\n  if (!fileName) return false\n  return levenshtein.get(fileName, configName) <= distance\n}\n\nexport async function getConfigFile(\n  rootDir: string,\n  configName: string,\n  distance: number = 3\n): Promise<{\n  configModule: any\n  configFilePath: string\n}> {\n  const configPath = path.join(rootDir, configName)\n  let configFilePath = ``\n  let configModule: any\n  try {\n    configFilePath = require.resolve(configPath)\n    configModule = require(configFilePath)\n  } catch (err) {\n    const nearMatch = await fs.readdir(rootDir).then(files =>\n      files.find(file => {\n        const fileName = file.split(rootDir).pop()\n        return isNearMatch(fileName, configName, distance)\n      })\n    )\n    if (!testRequireError(configPath, err)) {\n      report.panic({\n        id: `10123`,\n        error: err,\n        context: {\n          configName,\n          message: err.message,\n        },\n      })\n    } else if (nearMatch) {\n      report.panic({\n        id: `10124`,\n        error: err,\n        context: {\n          configName,\n          nearMatch,\n        },\n      })\n    } else if (existsSync(path.join(rootDir, `src`, configName + `.js`))) {\n      report.panic({\n        id: `10125`,\n        context: {\n          configName,\n        },\n      })\n    }\n  }\n\n  return { configModule, configFilePath }\n}\n"],"file":"get-config-file.js"}