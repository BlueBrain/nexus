{"version":3,"sources":["../../src/commands/build-javascript.ts"],"names":["buildProductionBundle","program","parentSpan","directory","compilerConfig","Promise","resolve","reject","compiler","hooks","compilation","tap","seal","state","store","getState","mapOfTemplatesToStaticQueryHashes","forEach","staticQueryHashes","componentPath","staticQueriesByTemplate","get","dispatch","type","payload","run","err","stats","hasErrors","flattenStatsErrors","errors","children","child","getStats"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAIA;;AAEO,MAAMA,qBAAqB,GAAG,OACnCC,OADmC,EAEnCC,UAFmC,KAGR;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAgBF,OAAtB;AAEA,QAAMG,cAAc,GAAG,MAAM,uBAC3BH,OAD2B,EAE3BE,SAF2B,EAG1B,kBAH0B,EAI3B,IAJ2B,EAK3B;AAAED,IAAAA;AAAF,GAL2B,CAA7B;AAQA,SAAO,IAAIG,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAMC,QAAQ,GAAG,sBAAQJ,cAAR,CAAjB;AAEAI,IAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CAAgC,yBAAhC,EAA0DD,WAAW,IAAI;AACvEA,MAAAA,WAAW,CAACD,KAAZ,CAAkBG,IAAlB,CAAuBD,GAAvB,CAA4B,yBAA5B,EAAsD,MAAM;AAC1D,cAAME,KAAK,GAAGC,aAAMC,QAAN,EAAd;;AACA,cAAMC,iCAAiC,GAAG,8CACxCH,KADwC,EAExCH,WAFwC,CAA1C;AAKAM,QAAAA,iCAAiC,CAACC,OAAlC,CACE,CAACC,iBAAD,EAAoBC,aAApB,KAAsC;AACpC,cACE,CAAC,qBACCN,KAAK,CAACO,uBAAN,CAA8BC,GAA9B,CAAkCF,aAAlC,CADD,EAECD,iBAFD,CADH,EAKE;AACAJ,yBAAMQ,QAAN,CAAe;AACbC,cAAAA,IAAI,EAAG,iCADM;AAEbC,cAAAA,OAAO,EAAE;AACPL,gBAAAA;AADO;AAFI,aAAf;;AAMAL,yBAAMQ,QAAN,CAAe;AACbC,cAAAA,IAAI,EAAG,gCADM;AAEbC,cAAAA,OAAO,EAAE;AACPL,gBAAAA,aADO;AAEPD,gBAAAA;AAFO;AAFI,aAAf;AAOD;AACF,SAtBH;AAwBD,OA/BD;AAgCD,KAjCD;AAmCAV,IAAAA,QAAQ,CAACiB,GAAT,CAAa,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC3B,UAAID,GAAJ,EAAS;AACP,eAAOnB,MAAM,CAACmB,GAAD,CAAb;AACD;;AAED,oDAAsBC,KAAtB;;AAEA,UAAIA,KAAK,CAACC,SAAN,EAAJ,EAAuB;AACrB,cAAMC,kBAAkB,GAAIF,KAAD,IAAmC,CAC5D,GAAGA,KAAK,CAACjB,WAAN,CAAkBoB,MADuC,EAE5D,GAAG,sBAAQH,KAAK,CAACjB,WAAN,CAAkBqB,QAA1B,EAAoCC,KAAK,IAC1CH,kBAAkB,CAACG,KAAK,CAACC,QAAN,EAAD,CADjB,CAFyD,CAA9D;;AAMA,eAAO1B,MAAM,CAACsB,kBAAkB,CAACF,KAAD,CAAnB,CAAb;AACD;;AAED,aAAOrB,OAAO,CAACqB,KAAD,CAAd;AACD,KAlBD;AAmBD,GAzDM,CAAP;AA0DD,CAxEM","sourcesContent":["import { Span } from \"opentracing\"\nimport webpack from \"webpack\"\nimport { isEqual } from \"lodash\"\nimport flatMap from \"lodash/flatMap\"\n\nimport webpackConfig from \"../utils/webpack.config\"\nimport { store } from \"../redux\"\nimport mapTemplatesToStaticQueryHashes from \"../utils/map-templates-to-static-query-hashes\"\n\nimport { IProgram } from \"./types\"\n\nimport { reportWebpackWarnings } from \"../utils/webpack-error-utils\"\n\nexport const buildProductionBundle = async (\n  program: IProgram,\n  parentSpan: Span\n): Promise<webpack.Stats> => {\n  const { directory } = program\n\n  const compilerConfig = await webpackConfig(\n    program,\n    directory,\n    `build-javascript`,\n    null,\n    { parentSpan }\n  )\n\n  return new Promise((resolve, reject) => {\n    const compiler = webpack(compilerConfig)\n\n    compiler.hooks.compilation.tap(`webpack-dep-tree-plugin`, compilation => {\n      compilation.hooks.seal.tap(`webpack-dep-tree-plugin`, () => {\n        const state = store.getState()\n        const mapOfTemplatesToStaticQueryHashes = mapTemplatesToStaticQueryHashes(\n          state,\n          compilation\n        )\n\n        mapOfTemplatesToStaticQueryHashes.forEach(\n          (staticQueryHashes, componentPath) => {\n            if (\n              !isEqual(\n                state.staticQueriesByTemplate.get(componentPath),\n                staticQueryHashes\n              )\n            ) {\n              store.dispatch({\n                type: `ADD_PENDING_TEMPLATE_DATA_WRITE`,\n                payload: {\n                  componentPath,\n                },\n              })\n              store.dispatch({\n                type: `SET_STATIC_QUERIES_BY_TEMPLATE`,\n                payload: {\n                  componentPath,\n                  staticQueryHashes,\n                },\n              })\n            }\n          }\n        )\n      })\n    })\n\n    compiler.run((err, stats) => {\n      if (err) {\n        return reject(err)\n      }\n\n      reportWebpackWarnings(stats)\n\n      if (stats.hasErrors()) {\n        const flattenStatsErrors = (stats: webpack.Stats): Error[] => [\n          ...stats.compilation.errors,\n          ...flatMap(stats.compilation.children, child =>\n            flattenStatsErrors(child.getStats())\n          ),\n        ]\n        return reject(flattenStatsErrors(stats))\n      }\n\n      return resolve(stats)\n    })\n  })\n}\n"],"file":"build-javascript.js"}