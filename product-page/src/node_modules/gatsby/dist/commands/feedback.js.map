{"version":3,"sources":["../../src/commands/feedback.ts"],"names":["module","exports","feedback","program","disable","report","info","enable"],"mappings":";;AAAA;;AAaAA,MAAM,CAACC,OAAP,GAAiB,eAAeC,QAAf,CACfC,OADe,EAEA;AACf,MAAIA,OAAO,CAACC,OAAZ,EAAqB;AACnBD,IAAAA,OAAO,CAACE,MAAR,CAAeC,IAAf,CAAqB,oCAArB;AACA,4CAAyB,IAAzB;AACA;AACD;;AAED,MAAIH,OAAO,CAACI,MAAZ,EAAoB;AAClBJ,IAAAA,OAAO,CAACE,MAAR,CAAeC,IAAf,CAAqB,mCAArB;AACA,4CAAyB,KAAzB;AACA;AACD;;AAED;AACD,CAhBD","sourcesContent":["import {\n  setFeedbackDisabledValue,\n  showFeedbackRequest,\n} from \"../utils/feedback\"\nimport { IProgram } from \"./types\"\n\n// This is because we splat command line arguments onto this object.\n// A good refactor would be to put this inside a key like `cliArgs`\ninterface IFeedbackProgram extends IProgram {\n  disable?: boolean\n  enable?: boolean\n}\n\nmodule.exports = async function feedback(\n  program: IFeedbackProgram\n): Promise<void> {\n  if (program.disable) {\n    program.report.info(`Disabling gatsby feedback requests`)\n    setFeedbackDisabledValue(true)\n    return\n  }\n\n  if (program.enable) {\n    program.report.info(`Enabling gatsby feedback requests`)\n    setFeedbackDisabledValue(false)\n    return\n  }\n\n  showFeedbackRequest()\n}\n"],"file":"feedback.js"}