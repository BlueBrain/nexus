{"version":3,"sources":["../../src/utils/gatsby-webpack-stats-extractor.ts"],"names":["GatsbyWebpackStatsExtractor","constructor","plugin","name","apply","compiler","hooks","done","tapAsync","stats","assets","assetsMap","chunkGroup","compilation","chunkGroups","files","chunk","chunks","push","filter","f","slice","length","map","filename","webpackStats","toJson","all","assetsByChunkName","fs","writeFile","path","join","JSON","stringify"],"mappings":";;;;;;;AAAA;;AACA;;AAGO,MAAMA,2BAAN,CAAkC;AAEvCC,EAAAA,WAAW,GAAG;AACZ,SAAKC,MAAL,GAAc;AAAEC,MAAAA,IAAI,EAAG;AAAT,KAAd;AACD;;AACDC,EAAAA,KAAK,CAACC,QAAD,EAA2B;AAC9BA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,IAAf,CAAoBC,QAApB,CAA6B,KAAKN,MAAL,CAAYC,IAAzC,EAA+C,CAACM,KAAD,EAAQF,IAAR,KAAiB;AAC9D,YAAMG,MAAM,GAAG,EAAf;AACA,YAAMC,SAAS,GAAG,EAAlB;;AACA,WAAK,MAAMC,UAAX,IAAyBH,KAAK,CAACI,WAAN,CAAkBC,WAA3C,EAAwD;AACtD,YAAIF,UAAU,CAACT,IAAf,EAAqB;AACnB,gBAAMY,KAAe,GAAG,EAAxB;;AACA,eAAK,MAAMC,KAAX,IAAoBJ,UAAU,CAACK,MAA/B,EAAuC;AACrCF,YAAAA,KAAK,CAACG,IAAN,CAAW,GAAGF,KAAK,CAACD,KAApB;AACD;;AACDL,UAAAA,MAAM,CAACE,UAAU,CAACT,IAAZ,CAAN,GAA0BY,KAAK,CAACI,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQ,CAAC,CAAT,MAAiB,MAAnC,CAA1B;AACAV,UAAAA,SAAS,CAACC,UAAU,CAACT,IAAZ,CAAT,GAA6BY,KAAK,CAC/BI,MAD0B,CAEzBC,CAAC,IACCA,CAAC,CAACC,KAAF,CAAQ,CAAC,CAAT,MAAiB,MAAjB,IACAD,CAAC,CAACC,KAAF,CAAQ,CAAR,EAAWT,UAAU,CAACT,IAAX,CAAgBmB,MAA3B,MAAuCV,UAAU,CAACT,IAJ3B,EAM1BoB,GAN0B,CAMtBC,QAAQ,IAAK,IAAGA,QAAS,EANH,CAA7B;AAOD;AACF;;AACD,YAAMC,YAAY,GAAG,EACnB,GAAGhB,KAAK,CAACiB,MAAN,CAAa;AAAEC,UAAAA,GAAG,EAAE,KAAP;AAAcb,UAAAA,WAAW,EAAE;AAA3B,SAAb,CADgB;AAEnBc,QAAAA,iBAAiB,EAAElB;AAFA,OAArB;;AAIAmB,uBAAGC,SAAH,CACEC,cAAKC,IAAL,CAAW,QAAX,EAAqB,gBAArB,CADF,EAEEC,IAAI,CAACC,SAAL,CAAevB,SAAf,CAFF,EAGE,MAAM;AACJkB,yBAAGC,SAAH,CACEC,cAAKC,IAAL,CAAW,QAAX,EAAqB,oBAArB,CADF,EAEEC,IAAI,CAACC,SAAL,CAAeT,YAAf,CAFF,EAGElB,IAHF;AAKD,OATH;AAWD,KAlCD;AAmCD;;AAzCsC","sourcesContent":["import fs from \"fs-extra\"\nimport path from \"path\"\nimport { Compiler } from \"webpack\"\n\nexport class GatsbyWebpackStatsExtractor {\n  private plugin: { name: string }\n  constructor() {\n    this.plugin = { name: `GatsbyWebpackStatsExtractor` }\n  }\n  apply(compiler: Compiler): void {\n    compiler.hooks.done.tapAsync(this.plugin.name, (stats, done) => {\n      const assets = {}\n      const assetsMap = {}\n      for (const chunkGroup of stats.compilation.chunkGroups) {\n        if (chunkGroup.name) {\n          const files: string[] = []\n          for (const chunk of chunkGroup.chunks) {\n            files.push(...chunk.files)\n          }\n          assets[chunkGroup.name] = files.filter(f => f.slice(-4) !== `.map`)\n          assetsMap[chunkGroup.name] = files\n            .filter(\n              f =>\n                f.slice(-4) !== `.map` &&\n                f.slice(0, chunkGroup.name.length) === chunkGroup.name\n            )\n            .map(filename => `/${filename}`)\n        }\n      }\n      const webpackStats = {\n        ...stats.toJson({ all: false, chunkGroups: true }),\n        assetsByChunkName: assets,\n      }\n      fs.writeFile(\n        path.join(`public`, `chunk-map.json`),\n        JSON.stringify(assetsMap),\n        () => {\n          fs.writeFile(\n            path.join(`public`, `webpack.stats.json`),\n            JSON.stringify(webpackStats),\n            done\n          )\n        }\n      )\n    })\n  }\n}\n"],"file":"gatsby-webpack-stats-extractor.js"}