{"version":3,"sources":["../../src/utils/changed-pages.ts"],"names":["deletePage","deleteComponentsDependencies","boundActionCreators","deleteUntouchedPages","currentPages","timeBeforeApisRan","deletedPages","forEach","page","isCreatedByStatefulCreatePages","updatedAt","path","push","findChangedPages","oldPages","changedPages","compareWithoutUpdated","_left","_right","key","undefined","newPage","oldPage","get","_page","has"],"mappings":";;;;;;AAAA;;AAGA;;AAFA,MAAM;AAAEA,EAAAA,UAAF;AAAcC,EAAAA;AAAd,IAA+CC,4BAArD;;AAKO,SAASC,oBAAT,CACLC,YADK,EAELC,iBAFK,EAGK;AACV,QAAMC,YAAsB,GAAG,EAA/B,CADU,CAGV;;AACAF,EAAAA,YAAY,CAACG,OAAb,CAAqBC,IAAI,IAAI;AAC3B,QACE,CAACA,IAAI,CAACC,8BAAN,IACAD,IAAI,CAACE,SAAL,GAAiBL,iBADjB,IAEAG,IAAI,CAACG,IAAL,KAAe,WAHjB,EAIE;AACAV,MAAAA,4BAA4B,CAAC,CAACO,IAAI,CAACG,IAAN,CAAD,CAA5B;AACAX,MAAAA,UAAU,CAACQ,IAAD,CAAV;AACAF,MAAAA,YAAY,CAACM,IAAb,CAAkBJ,IAAI,CAACG,IAAvB,EAA8B,aAAYH,IAAI,CAACG,IAAK,EAApD;AACD;AACF,GAVD;AAWA,SAAOL,YAAP;AACD;;AAEM,SAASO,gBAAT,CACLC,QADK,EAELV,YAFK,EAML;AACA,QAAMW,YAAsB,GAAG,EAA/B;;AAEA,QAAMC,qBAAwC,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,GAAhB,KAC/CA,GAAG,KAAM,WAAT,IAAuBC,SADzB;;AAGAhB,EAAAA,YAAY,CAACG,OAAb,CAAqB,CAACc,OAAD,EAAUV,IAAV,KAAmB;AACtC,UAAMW,OAAO,GAAGR,QAAQ,CAACS,GAAT,CAAaZ,IAAb,CAAhB;;AACA,QAAI,CAACW,OAAD,IAAY,CAAC,yBAAYD,OAAZ,EAAqBC,OAArB,EAA8BN,qBAA9B,CAAjB,EAAuE;AACrED,MAAAA,YAAY,CAACH,IAAb,CAAkBD,IAAlB;AACD;AACF,GALD;AAMA,QAAML,YAAsB,GAAG,EAA/B;AACAQ,EAAAA,QAAQ,CAACP,OAAT,CAAiB,CAACiB,KAAD,EAAQL,GAAR,KAAgB;AAC/B,QAAI,CAACf,YAAY,CAACqB,GAAb,CAAiBN,GAAjB,CAAL,EAA4B;AAC1Bb,MAAAA,YAAY,CAACM,IAAb,CAAkBO,GAAlB;AACD;AACF,GAJD;AAMA,SAAO;AAAEJ,IAAAA,YAAF;AAAgBT,IAAAA;AAAhB,GAAP;AACD","sourcesContent":["import { boundActionCreators } from \"../redux/actions\"\nconst { deletePage, deleteComponentsDependencies } = boundActionCreators\n\nimport { isEqualWith, IsEqualCustomizer } from \"lodash\"\nimport { IGatsbyPage } from \"../redux/types\"\n\nexport function deleteUntouchedPages(\n  currentPages: Map<string, IGatsbyPage>,\n  timeBeforeApisRan: number\n): string[] {\n  const deletedPages: string[] = []\n\n  // Delete pages that weren't updated when running createPages.\n  currentPages.forEach(page => {\n    if (\n      !page.isCreatedByStatefulCreatePages &&\n      page.updatedAt < timeBeforeApisRan &&\n      page.path !== `/404.html`\n    ) {\n      deleteComponentsDependencies([page.path])\n      deletePage(page)\n      deletedPages.push(page.path, `/page-data${page.path}`)\n    }\n  })\n  return deletedPages\n}\n\nexport function findChangedPages(\n  oldPages: Map<string, IGatsbyPage>,\n  currentPages: Map<string, IGatsbyPage>\n): {\n  changedPages: string[]\n  deletedPages: string[]\n} {\n  const changedPages: string[] = []\n\n  const compareWithoutUpdated: IsEqualCustomizer = (_left, _right, key) =>\n    key === `updatedAt` || undefined\n\n  currentPages.forEach((newPage, path) => {\n    const oldPage = oldPages.get(path)\n    if (!oldPage || !isEqualWith(newPage, oldPage, compareWithoutUpdated)) {\n      changedPages.push(path)\n    }\n  })\n  const deletedPages: string[] = []\n  oldPages.forEach((_page, key) => {\n    if (!currentPages.has(key)) {\n      deletedPages.push(key)\n    }\n  })\n\n  return { changedPages, deletedPages }\n}\n"],"file":"changed-pages.js"}