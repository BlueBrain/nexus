{"version":3,"sources":["../../src/utils/validate-page-component.ts"],"names":["validationCache","Set","validatePageComponent","page","directory","pluginName","component","Error","has","path","isAbsolute","error","id","context","pageObject","message","process","env","NODE_ENV","fs","existsSync","includes","fileContent","readFileSync","relativePath","relative","panicOnBuild","extname","includesDefaultExport","match","add","clearValidationCache","clear"],"mappings":";;;;;;;;AAAA;;AACA;;AAGA,MAAMA,eAAe,GAAG,IAAIC,GAAJ,EAAxB;;AAOO,SAASC,qBAAT,CACLC,IADK,EAELC,SAFK,EAGLC,UAHK,EAI6D;AAClE,QAAM;AAAEC,IAAAA;AAAF,MAAgBH,IAAtB;;AACA,MAAI,CAACG,SAAL,EAAgB;AACd,UAAM,IAAIC,KAAJ,CAAW,OAAX,CAAN;AACD;;AACD,MAAIP,eAAe,CAACQ,GAAhB,CAAoBF,SAApB,CAAJ,EAAoC;AAClC,WAAO,EAAP;AACD;;AACD,MAAI,CAACG,cAAKC,UAAL,CAAgBJ,SAAhB,CAAL,EAAiC;AAC/B,WAAO;AACLK,MAAAA,KAAK,EAAE;AACLC,QAAAA,EAAE,EAAG,OADA;AAELC,QAAAA,OAAO,EAAE;AACPR,UAAAA,UADO;AAEPS,UAAAA,UAAU,EAAEX,IAFL;AAGPG,UAAAA,SAAS,EAAEA;AAHJ;AAFJ,OADF;AASLS,MAAAA,OAAO,EAAG,GAAEV,UAAW;AATlB,KAAP;AAWD;;AAED,MAAIW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAA0B,MAA9B,EAAqC;AACnC,QAAI,CAACC,iBAAGC,UAAH,CAAcd,SAAd,CAAL,EAA+B;AAC7B,aAAO;AACLK,QAAAA,KAAK,EAAE;AACLC,UAAAA,EAAE,EAAG,OADA;AAELC,UAAAA,OAAO,EAAE;AACPR,YAAAA,UADO;AAEPS,YAAAA,UAAU,EAAEX,IAFL;AAGPG,YAAAA,SAAS,EAAEA;AAHJ;AAFJ;AADF,OAAP;AAUD;AACF,GAnCiE,CAqClE;AACA;AACA;;;AAEA,MACE,CAACA,SAAS,CAACe,QAAV,CAAoB,UAApB,CAAD,IACAL,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAA0B,YAF5B,EAGE;AACA,UAAMI,WAAW,GAAGH,iBAAGI,YAAH,CAAgBjB,SAAhB,EAA4B,OAA5B,CAApB;;AAEA,QAAIgB,WAAW,KAAM,EAArB,EAAwB;AACtB,YAAME,YAAY,GAAGf,cAAKgB,QAAL,CAAcrB,SAAd,EAAyBE,SAAzB,CAArB;;AAEA,aAAO;AACLK,QAAAA,KAAK,EAAE;AACLC,UAAAA,EAAE,EAAG,OADA;AAELC,UAAAA,OAAO,EAAE;AACPW,YAAAA;AADO;AAFJ,SADF;AAOLE,QAAAA,YAAY,EAAE;AAPT,OAAP;AASD,KAfD,CAiBA;;;AACA,QAAI,CAAE,KAAF,EAAS,MAAT,EAAiB,KAAjB,EAAwB,MAAxB,EAA+BL,QAA/B,CAAwCZ,cAAKkB,OAAL,CAAarB,SAAb,CAAxC,CAAJ,EAAsE;AACpE,YAAMsB,qBAAqB,GACzBN,WAAW,CAACD,QAAZ,CAAsB,gBAAtB,KACAC,WAAW,CAACD,QAAZ,CAAsB,gBAAtB,CADA,IAEAC,WAAW,CAACD,QAAZ,CAAsB,iBAAtB,CAFA,IAGAC,WAAW,CAACD,QAAZ,CAAsB,oBAAtB,CAHA,IAIAC,WAAW,CAACO,KAAZ,CAAkB,6BAAlB,CALF;;AAOA,UAAI,CAACD,qBAAL,EAA4B;AAC1B,eAAO;AACLjB,UAAAA,KAAK,EAAE;AACLC,YAAAA,EAAE,EAAG,OADA;AAELC,YAAAA,OAAO,EAAE;AACPP,cAAAA;AADO;AAFJ,WADF;AAOLoB,UAAAA,YAAY,EAAE;AAPT,SAAP;AASD;AACF;AACF;;AAED1B,EAAAA,eAAe,CAAC8B,GAAhB,CAAoBxB,SAApB;AACA,SAAO,EAAP;AACD;;AAEM,SAASyB,oBAAT,GAAsC;AAC3C/B,EAAAA,eAAe,CAACgC,KAAhB;AACD","sourcesContent":["import path from \"path\"\nimport fs from \"fs-extra\"\nimport { IGatsbyPage } from \"../redux/types\"\n\nconst validationCache = new Set<string>()\n\ninterface IErrorMeta {\n  id: string\n  context: Record<string, unknown>\n}\n\nexport function validatePageComponent(\n  page: IGatsbyPage,\n  directory: string,\n  pluginName: string\n): { message?: string; error?: IErrorMeta; panicOnBuild?: boolean } {\n  const { component } = page\n  if (!component) {\n    throw new Error(`11322`)\n  }\n  if (validationCache.has(component)) {\n    return {}\n  }\n  if (!path.isAbsolute(component)) {\n    return {\n      error: {\n        id: `11326`,\n        context: {\n          pluginName,\n          pageObject: page,\n          component: component,\n        },\n      },\n      message: `${pluginName} must set the absolute path to the page component when create creating a page`,\n    }\n  }\n\n  if (process.env.NODE_ENV !== `test`) {\n    if (!fs.existsSync(component)) {\n      return {\n        error: {\n          id: `11325`,\n          context: {\n            pluginName,\n            pageObject: page,\n            component: component,\n          },\n        },\n      }\n    }\n  }\n\n  // Validate that the page component imports React and exports something\n  // (hopefully a component).\n  //\n\n  if (\n    !component.includes(`/.cache/`) &&\n    process.env.NODE_ENV === `production`\n  ) {\n    const fileContent = fs.readFileSync(component, `utf-8`)\n\n    if (fileContent === ``) {\n      const relativePath = path.relative(directory, component)\n\n      return {\n        error: {\n          id: `11327`,\n          context: {\n            relativePath,\n          },\n        },\n        panicOnBuild: true,\n      }\n    }\n\n    // this check only applies to js and ts, not mdx\n    if ([`.js`, `.jsx`, `.ts`, `.tsx`].includes(path.extname(component))) {\n      const includesDefaultExport =\n        fileContent.includes(`export default`) ||\n        fileContent.includes(`module.exports`) ||\n        fileContent.includes(`exports.default`) ||\n        fileContent.includes(`exports[\"default\"]`) ||\n        fileContent.match(/export \\{.* as default.*\\}/s)\n\n      if (!includesDefaultExport) {\n        return {\n          error: {\n            id: `11328`,\n            context: {\n              component,\n            },\n          },\n          panicOnBuild: true,\n        }\n      }\n    }\n  }\n\n  validationCache.add(component)\n  return {}\n}\n\nexport function clearValidationCache(): void {\n  validationCache.clear()\n}\n"],"file":"validate-page-component.js"}