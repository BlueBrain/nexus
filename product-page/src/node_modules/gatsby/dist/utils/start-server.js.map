{"version":3,"sources":["../../src/utils/start-server.ts"],"names":["startServer","program","app","workerPool","WorkerPool","create","indexHTMLActivity","report","phantomActivity","start","directory","directoryPath","createIndexHtml","activity","stage","Stage","DevelopHTML","pagePaths","err","name","panic","stripIndent","end","webpackActivity","activityTimer","id","devConfig","port","parentSpan","span","compiler","use","telemetry","expressMiddleware","log","path","heartbeat","graphqlEndpoint","process","env","GATSBY_GRAPHQL_IDE","get","endpoint","schema","schemaCustomization","store","getState","composer","Error","graphiql","extensions","enableRefresh","ENABLE_GATSBY_REFRESH_ENDPOINT","refreshToken","GATSBY_REFRESH_TOKEN","context","schemaComposer","customContext","customFormatErrorFn","stack","split","REFRESH_ENDPOINT","refresh","req","emitter","emit","webhookBody","body","express","json","post","res","authorizedRefresh","headers","authorization","query","fileName","lineNumber","index","webpackDevMiddlewareInstance","logLevel","publicPath","output","watchOptions","devServer","stats","developMiddleware","config","proxy","forEach","prefix","url","proxiedUrl","originalUrl","host","method","pipe","got","stream","decompress","on","response","writeHead","statusCode","_","message","error","sendStatus","deferNodeMutation","status","sendFile","server","http","Server","socket","websocketManager","init","listener","listen","watchGlobs","map","chokidar","watch","to","webpackWatching","watching"],"mappings":"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","sourcesContent":["import chokidar from \"chokidar\"\n\nimport webpackHotMiddleware from \"webpack-hot-middleware\"\nimport webpackDevMiddleware, {\n  WebpackDevMiddleware,\n} from \"webpack-dev-middleware\"\nimport got from \"got\"\nimport webpack from \"webpack\"\nimport express from \"express\"\nimport graphqlHTTP from \"express-graphql\"\nimport graphqlPlayground from \"graphql-playground-middleware-express\"\nimport graphiqlExplorer from \"gatsby-graphiql-explorer\"\nimport { formatError } from \"graphql\"\n\nimport webpackConfig from \"../utils/webpack.config\"\nimport { store, emitter } from \"../redux\"\nimport { buildHTML } from \"../commands/build-html\"\nimport { withBasePath } from \"../utils/path\"\nimport report from \"gatsby-cli/lib/reporter\"\nimport launchEditor from \"react-dev-utils/launchEditor\"\nimport cors from \"cors\"\nimport telemetry from \"gatsby-telemetry\"\nimport * as WorkerPool from \"../utils/worker/pool\"\nimport http from \"http\"\nimport https from \"https\"\n\nimport { developStatic } from \"../commands/develop-static\"\nimport withResolverContext from \"../schema/context\"\nimport { websocketManager, WebsocketManager } from \"../utils/websocket-manager\"\nimport { slash } from \"gatsby-core-utils\"\nimport apiRunnerNode from \"../utils/api-runner-node\"\nimport { Express } from \"express\"\n\nimport { Stage, IProgram } from \"../commands/types\"\nimport JestWorker from \"jest-worker\"\n\ntype ActivityTracker = any // TODO: Replace this with proper type once reporter is typed\n\ninterface IServer {\n  compiler: webpack.Compiler\n  listener: http.Server | https.Server\n  webpackActivity: ActivityTracker\n  websocketManager: WebsocketManager\n  workerPool: JestWorker\n  webpackWatching: IWebpackWatchingPauseResume\n}\n\nexport interface IWebpackWatchingPauseResume extends webpack.Watching {\n  suspend: () => void\n  resume: () => void\n}\n\n// context seems to be public, but not documented API\n// see https://github.com/webpack/webpack-dev-middleware/issues/656\ntype PatchedWebpackDevMiddleware = WebpackDevMiddleware &\n  express.RequestHandler & {\n    context: {\n      watching: IWebpackWatchingPauseResume\n    }\n  }\n\nexport async function startServer(\n  program: IProgram,\n  app: Express,\n  workerPool: JestWorker = WorkerPool.create()\n): Promise<IServer> {\n  const indexHTMLActivity = report.phantomActivity(`building index.html`, {})\n  indexHTMLActivity.start()\n  const directory = program.directory\n  const directoryPath = withBasePath(directory)\n  const createIndexHtml = async (activity: ActivityTracker): Promise<void> => {\n    try {\n      await buildHTML({\n        program,\n        stage: Stage.DevelopHTML,\n        pagePaths: [`/`],\n        workerPool,\n        activity,\n      })\n    } catch (err) {\n      if (err.name !== `WebpackError`) {\n        report.panic(err)\n        return\n      }\n      report.panic(\n        report.stripIndent`\n          There was an error compiling the html.js component for the development server.\n\n          See our docs page on debugging HTML builds for help https://gatsby.dev/debug-html\n        `,\n        err\n      )\n    }\n  }\n\n  await createIndexHtml(indexHTMLActivity)\n\n  indexHTMLActivity.end()\n\n  // report.stateUpdate(`webpack`, `IN_PROGRESS`)\n\n  const webpackActivity = report.activityTimer(`Building development bundle`, {\n    id: `webpack-develop`,\n  })\n  webpackActivity.start()\n\n  const devConfig = await webpackConfig(\n    program,\n    directory,\n    `develop`,\n    program.port,\n    { parentSpan: webpackActivity.span }\n  )\n\n  const compiler = webpack(devConfig)\n\n  /**\n   * Set up the express app.\n   **/\n  app.use(telemetry.expressMiddleware(`DEVELOP`))\n  app.use(\n    webpackHotMiddleware(compiler, {\n      log: false,\n      path: `/__webpack_hmr`,\n      heartbeat: 10 * 1000,\n    })\n  )\n\n  app.use(cors())\n\n  /**\n   * Pattern matching all endpoints with graphql or graphiql with 1 or more leading underscores\n   */\n  const graphqlEndpoint = `/_+graphi?ql`\n\n  if (process.env.GATSBY_GRAPHQL_IDE === `playground`) {\n    app.get(\n      graphqlEndpoint,\n      graphqlPlayground({\n        endpoint: `/___graphql`,\n      }),\n      () => {}\n    )\n  } else {\n    graphiqlExplorer(app, {\n      graphqlEndpoint,\n    })\n  }\n\n  app.use(\n    graphqlEndpoint,\n    graphqlHTTP(\n      (): graphqlHTTP.OptionsData => {\n        const { schema, schemaCustomization } = store.getState()\n\n        if (!schemaCustomization.composer) {\n          throw new Error(\n            `A schema composer was not created in time. This is likely a gatsby bug. If you experienced this please create an issue.`\n          )\n        }\n        return {\n          schema,\n          graphiql: false,\n          extensions(): { [key: string]: unknown } {\n            return {\n              enableRefresh: process.env.ENABLE_GATSBY_REFRESH_ENDPOINT,\n              refreshToken: process.env.GATSBY_REFRESH_TOKEN,\n            }\n          },\n          context: withResolverContext({\n            schema,\n            schemaComposer: schemaCustomization.composer,\n            context: {},\n            customContext: schemaCustomization.context,\n          }),\n          customFormatErrorFn(err): unknown {\n            return {\n              ...formatError(err),\n              stack: err.stack ? err.stack.split(`\\n`) : [],\n            }\n          },\n        }\n      }\n    )\n  )\n\n  /**\n   * Refresh external data sources.\n   * This behavior is disabled by default, but the ENABLE_GATSBY_REFRESH_ENDPOINT env var enables it\n   * If no GATSBY_REFRESH_TOKEN env var is available, then no Authorization header is required\n   **/\n  const REFRESH_ENDPOINT = `/__refresh`\n  const refresh = async (req: express.Request): Promise<void> => {\n    emitter.emit(`WEBHOOK_RECEIVED`, {\n      webhookBody: req.body,\n    })\n  }\n  app.use(REFRESH_ENDPOINT, express.json())\n  app.post(REFRESH_ENDPOINT, (req, res) => {\n    const enableRefresh = process.env.ENABLE_GATSBY_REFRESH_ENDPOINT\n    const refreshToken = process.env.GATSBY_REFRESH_TOKEN\n    const authorizedRefresh =\n      !refreshToken || req.headers.authorization === refreshToken\n\n    if (enableRefresh && authorizedRefresh) {\n      refresh(req)\n    }\n    res.end()\n  })\n\n  app.get(`/__open-stack-frame-in-editor`, (req, res) => {\n    launchEditor(req.query.fileName, req.query.lineNumber)\n    res.end()\n  })\n\n  // Disable directory indexing i.e. serving index.html from a directory.\n  // This can lead to serving stale html files during development.\n  //\n  // We serve by default an empty index.html that sets up the dev environment.\n  app.use(developStatic(`public`, { index: false }))\n\n  const webpackDevMiddlewareInstance = (webpackDevMiddleware(compiler, {\n    logLevel: `silent`,\n    publicPath: devConfig.output.publicPath,\n    watchOptions: devConfig.devServer ? devConfig.devServer.watchOptions : null,\n    stats: `errors-only`,\n  }) as unknown) as PatchedWebpackDevMiddleware\n\n  app.use(webpackDevMiddlewareInstance)\n\n  // Expose access to app for advanced use cases\n  const { developMiddleware } = store.getState().config\n\n  if (developMiddleware) {\n    developMiddleware(app, program)\n  }\n\n  // Set up API proxy.\n  const { proxy } = store.getState().config\n  if (proxy) {\n    proxy.forEach(({ prefix, url }) => {\n      app.use(`${prefix}/*`, (req, res) => {\n        const proxiedUrl = url + req.originalUrl\n        const {\n          // remove `host` from copied headers\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          headers: { host, ...headers },\n          method,\n        } = req\n        req\n          .pipe(\n            got\n              .stream(proxiedUrl, { headers, method, decompress: false })\n              .on(`response`, response =>\n                res.writeHead(response.statusCode || 200, response.headers)\n              )\n              .on(`error`, (err, _, response) => {\n                if (response) {\n                  res.writeHead(response.statusCode || 400, response.headers)\n                } else {\n                  const message = `Error when trying to proxy request \"${req.originalUrl}\" to \"${proxiedUrl}\"`\n\n                  report.error(message, err)\n                  res.sendStatus(500)\n                }\n              })\n          )\n          .pipe(res)\n      })\n    }, cors())\n  }\n\n  await apiRunnerNode(`onCreateDevServer`, { app, deferNodeMutation: true })\n\n  // In case nothing before handled hot-update - send 404.\n  // This fixes \"Unexpected token < in JSON at position 0\" runtime\n  // errors after restarting development server and\n  // cause automatic hard refresh in the browser.\n  app.use(/.*\\.hot-update\\.json$/i, (_, res) => {\n    res.status(404).end()\n  })\n\n  // Render an HTML page and serve it.\n  app.use((_, res) => {\n    res.sendFile(directoryPath(`public/index.html`), err => {\n      if (err) {\n        res.status(500).end()\n      }\n    })\n  })\n\n  /**\n   * Set up the HTTP server and socket.io.\n   **/\n  const server = new http.Server(app)\n\n  const socket = websocketManager.init({ server, directory: program.directory })\n\n  // hardcoded `localhost`, because host should match `target` we set\n  // in http proxy in `develop-proxy`\n  const listener = server.listen(program.port, `localhost`)\n\n  // Register watcher that rebuilds index.html every time html.js changes.\n  const watchGlobs = [`src/html.js`, `plugins/**/gatsby-ssr.js`].map(path =>\n    slash(directoryPath(path))\n  )\n\n  chokidar.watch(watchGlobs).on(`change`, async () => {\n    await createIndexHtml(indexHTMLActivity)\n    // eslint-disable-next-line no-unused-expressions\n    socket?.to(`clients`).emit(`reload`)\n  })\n\n  return {\n    compiler,\n    listener,\n    webpackActivity,\n    websocketManager,\n    workerPool,\n    webpackWatching: webpackDevMiddlewareInstance.context.watching,\n  }\n}\n"],"file":"start-server.js"}