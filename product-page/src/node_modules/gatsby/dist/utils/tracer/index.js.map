{"version":3,"sources":["../../../src/utils/tracer/index.ts"],"names":["tracerProvider","initTracer","tracerFile","tracer","resolvedPath","path","resolve","require","create","Tracer","stopTracer","stop"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAOA,IAAIA,cAAJ;AAEA;;;;;;;;;;AASO,MAAMC,UAAU,GAAIC,UAAD,IAAgC;AACxD,MAAIC,MAAJ;;AACA,MAAID,UAAJ,EAAgB;AACd,UAAME,YAAY,GAAG,4BAAMC,cAAKC,OAAL,CAAaJ,UAAb,CAAN,CAArB;AACAF,IAAAA,cAAc,GAAGO,OAAO,CAACH,YAAD,CAAxB;AACAD,IAAAA,MAAM,GAAGH,cAAc,CAAEQ,MAAhB,EAAT;AACD,GAJD,MAIO;AACLL,IAAAA,MAAM,GAAG,IAAIM,mBAAJ,EAAT,CADK,CACiB;AACvB;;AAED,qCAAiBN,MAAjB;AAEA,SAAOA,MAAP;AACD,CAbM;;;;AAeA,MAAMO,UAAU,GAAG,YAA2B;AAAA;;AACnD,yBAAIV,cAAJ,oDAAI,gBAAgBW,IAApB,EAA0B;AACxB,UAAMX,cAAc,CAACW,IAAf,EAAN;AACD;AACF,CAJM","sourcesContent":["import { slash } from \"gatsby-core-utils\"\nimport path from \"path\"\nimport { Tracer, initGlobalTracer } from \"opentracing\"\n\ninterface ITracerProvider {\n  create(): Tracer\n  stop(): Promise<void>\n}\n\nlet tracerProvider: ITracerProvider | undefined\n\n/**\n * tracerFile should be a js file that exports two functions.\n *\n * `create` - Create and return an open-tracing compatible tracer. See\n * https://github.com/opentracing/opentracing-javascript/blob/master/src/tracer.ts\n *\n * `stop` - Run any tracer cleanup required before the node.js process\n * exits\n */\nexport const initTracer = (tracerFile: string): Tracer => {\n  let tracer: Tracer\n  if (tracerFile) {\n    const resolvedPath = slash(path.resolve(tracerFile))\n    tracerProvider = require(resolvedPath)\n    tracer = tracerProvider!.create()\n  } else {\n    tracer = new Tracer() // Noop\n  }\n\n  initGlobalTracer(tracer)\n\n  return tracer\n}\n\nexport const stopTracer = async (): Promise<void> => {\n  if (tracerProvider?.stop) {\n    await tracerProvider.stop()\n  }\n}\n"],"file":"index.js"}