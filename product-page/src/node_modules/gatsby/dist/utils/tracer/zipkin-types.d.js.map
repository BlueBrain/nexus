{"version":3,"sources":["../../../src/utils/tracer/zipkin-types.d.ts"],"names":["ZipkinPartialSpan","ZipkinBatchRecorder","zipkin","BatchRecorder","ZipkinHttpLogger","logger","HttpLogger"],"mappings":";;;;;;;AAAA;;AACA;;AAIO,MAAMA,iBAAN,CAAwB;;;;AAQxB,MAAMC,mBAAN,SAAkCC,gBAAOC,aAAzC,CAAuD;;;;AAMvD,MAAMC,gBAAN,SAA+BC,6BAAOC,UAAtC,CAAiD","sourcesContent":["import zipkin from \"zipkin\"\nimport logger from \"zipkin-transport-http\"\nimport { Span } from \"opentracing\"\nimport { HeadersInit } from \"node-fetch\"\n\nexport class ZipkinPartialSpan {\n  traceId: string\n  timeoutTimestamp: number\n  delegate: Span\n  localEndpoint: unknown\n  shouldFlush: boolean\n}\n\nexport class ZipkinBatchRecorder extends zipkin.BatchRecorder {\n  partialSpans: Map<string, ZipkinPartialSpan>\n  _timedOut(span: ZipkinPartialSpan): boolean\n  _writeSpan(id: string): void\n}\n\nexport class ZipkinHttpLogger extends logger.HttpLogger {\n  queue: string[]\n  endpoint: string\n  headers: HeadersInit\n  timeout: number\n  errorListenerSet: boolean\n  emit(event: string | symbol, ...args: any[]): boolean\n}\n"],"file":"zipkin-types.d.js"}