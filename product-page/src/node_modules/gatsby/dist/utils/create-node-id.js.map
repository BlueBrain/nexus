{"version":3,"sources":["../../src/utils/create-node-id.ts"],"names":["seedConstant","createNodeId","id","namespace","toString","report","panic"],"mappings":";;;;;;;AAAA;;AACA;;AAEA,MAAMA,YAAY,GAAI,sCAAtB;AAEA;;;;;;;;;AAQO,SAASC,YAAT,CAAsBC,EAAtB,EAA2CC,SAA3C,EAAsE;AAC3E,MAAI,OAAOD,EAAP,KAAe,QAAnB,EAA4B;AAC1BA,IAAAA,EAAE,GAAGA,EAAE,CAACE,QAAH,EAAL;AACD,GAFD,MAEO,IAAI,OAAOF,EAAP,KAAe,QAAnB,EAA4B;AACjCG,sBAAOC,KAAP,CACG,oEAAmE,OAAOJ,EAAG,GADhF;AAGD;;AAED,SAAO,gBAAOA,EAAP,EAAW,gBAAOC,SAAP,EAAkBH,YAAlB,CAAX,CAAP;AACD","sourcesContent":["import uuidv5 from \"uuid/v5\"\nimport report from \"gatsby-cli/lib/reporter\"\n\nconst seedConstant = `638f7a53-c567-4eca-8fc1-b23efb1cfb2b`\n\n/**\n * createNodeId() Generate UUID\n *\n * @param {String | Number} id - A string of arbitrary length\n * @param {String} namespace - Namespace to use for UUID\n *\n * @return {String} - UUID\n */\nexport function createNodeId(id: string | number, namespace: string): string {\n  if (typeof id === `number`) {\n    id = id.toString()\n  } else if (typeof id !== `string`) {\n    report.panic(\n      `Parameter passed to createNodeId must be a String or Number (got ${typeof id})`\n    )\n  }\n\n  return uuidv5(id, uuidv5(namespace, seedConstant))\n}\n"],"file":"create-node-id.js"}