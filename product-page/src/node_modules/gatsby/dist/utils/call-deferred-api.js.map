{"version":3,"sources":["../../src/utils/call-deferred-api.ts"],"names":["callRealApi","event","store","type","payload","resolve","actions","action","result","dispatch","reporter","log"],"mappings":";;;;;;;AAAA;;AAGA;;AACA;;AACA;;;;;AAKO,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAyBC,KAAzB,KAAiD;AAC1E,gCAAYA,KAAZ;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA6BJ,KAAnC;;AACA,MAAIE,IAAI,IAAIG,gBAAZ,EAAqB;AACnB;AACA;AACA,UAAMC,MAAM,GAAGD,iBAAQH,IAAR,EAAc,GAAGC,OAAjB,CAAf;;AACA,UAAMI,MAAM,GAAGN,KAAK,CAACO,QAAN,CAAeF,MAAf,CAAf,CAJmB,CAKnB;;AACA,QAAIF,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACG,MAAD,CAAP;AACD;AACF,GATD,MASO;AACLE,sBAASC,GAAT,CAAc,sCAAqCR,IAAK,EAAxD;AACD;AACF,CAfM","sourcesContent":["import { assertStore } from \"./assert-store\"\nimport { Store } from \"redux\"\nimport { IMutationAction } from \"../services\"\nimport { actions } from \"../redux/actions\"\nimport reporter from \"gatsby-cli/lib/reporter\"\n/**\n * These are the deferred redux actions sent from api-runner-node\n * They may include a `resolve` prop (if they are createNode actions).\n * If so, we resolve the promise when we're done\n */\nexport const callRealApi = (event: IMutationAction, store?: Store): void => {\n  assertStore(store)\n  const { type, payload, resolve } = event\n  if (type in actions) {\n    // If this is a createNode action then this will be a thunk.\n    // No worries, we just dispatch it like any other\n    const action = actions[type](...payload)\n    const result = store.dispatch(action)\n    // Somebody may be waiting for this\n    if (resolve) {\n      resolve(result)\n    }\n  } else {\n    reporter.log(`Could not dispatch unknown action \"${type}`)\n  }\n}\n"],"file":"call-deferred-api.js"}