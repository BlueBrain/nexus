{"version":3,"sources":["../../../src/state-machines/data-layer/actions.ts"],"names":["concatUnique","array1","array2","Array","from","Set","concat","assignChangedPages","context","event","pagesToBuild","data","changedPages","pagesToDelete","deletedPages","assignGraphQLRunners","store","program","gatsbyNodeGraphQLFunction","reporter","graphqlRunner","GraphQLRunner","collectStats","graphqlTracing","dataLayerActions","callApi","markNodesDirty"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA,MAAMA,YAAY,GAAG,CAAIC,MAAW,GAAG,EAAlB,EAAsBC,MAAW,GAAG,EAApC,KACnBC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQJ,MAAM,CAACK,MAAP,CAAcJ,MAAd,CAAR,CAAX,CADF;;AAGO,MAAMK,kBAAkB,GAAG,oBAMhC,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACpB,SAAO;AACLC,IAAAA,YAAY,EAAEV,YAAY,CAACQ,OAAO,CAACE,YAAT,EAAuBD,KAAK,CAACE,IAAN,CAAWC,YAAlC,CADrB;AAELC,IAAAA,aAAa,EAAEb,YAAY,CAACQ,OAAO,CAACK,aAAT,EAAwBJ,KAAK,CAACE,IAAN,CAAWG,YAAnC;AAFtB,GAAP;AAID,CAXiC,CAA3B;;AAaA,MAAMC,oBAAoB,GAAG,oBAClC,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AACtB,gCAAYD,KAAZ;AACA,SAAO;AACLE,IAAAA,yBAAyB,EAAE,8CAAoBF,KAApB,EAA2BG,iBAA3B,CADtB;AAELC,IAAAA,aAAa,EAAE,IAAIC,4BAAJ,CAAkBL,KAAlB,EAAyB;AACtCM,MAAAA,YAAY,EAAE,IADwB;AAEtCC,MAAAA,cAAc,EAAEN,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEM;AAFa,KAAzB;AAFV,GAAP;AAOD,CAViC,CAA7B;;AAaA,MAAMC,gBAA2D,GAAG;AACzEjB,EAAAA,kBADyE;AAEzEQ,EAAAA,oBAFyE;AAGzEU,EAAAA,OAAO,EAAPA,gBAHyE;AAIzEC,EAAAA,cAAc,EAAdA;AAJyE,CAApE","sourcesContent":["import { assign, DoneInvokeEvent, ActionFunctionMap } from \"xstate\"\nimport { createGraphQLRunner } from \"../../bootstrap/create-graphql-runner\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { IDataLayerContext } from \"./types\"\nimport { callApi, markNodesDirty } from \"../develop/actions\"\nimport { assertStore } from \"../../utils/assert-store\"\nimport { GraphQLRunner } from \"../../query/graphql-runner\"\n\nconst concatUnique = <T>(array1: T[] = [], array2: T[] = []): T[] =>\n  Array.from(new Set(array1.concat(array2)))\n\nexport const assignChangedPages = assign<\n  IDataLayerContext,\n  DoneInvokeEvent<{\n    changedPages: string[]\n    deletedPages: string[]\n  }>\n>((context, event) => {\n  return {\n    pagesToBuild: concatUnique(context.pagesToBuild, event.data.changedPages),\n    pagesToDelete: concatUnique(context.pagesToDelete, event.data.deletedPages),\n  }\n})\n\nexport const assignGraphQLRunners = assign<IDataLayerContext>(\n  ({ store, program }) => {\n    assertStore(store)\n    return {\n      gatsbyNodeGraphQLFunction: createGraphQLRunner(store, reporter),\n      graphqlRunner: new GraphQLRunner(store, {\n        collectStats: true,\n        graphqlTracing: program?.graphqlTracing,\n      }),\n    }\n  }\n)\n\nexport const dataLayerActions: ActionFunctionMap<IDataLayerContext, any> = {\n  assignChangedPages,\n  assignGraphQLRunners,\n  callApi,\n  markNodesDirty,\n}\n"],"file":"actions.js"}