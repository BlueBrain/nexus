{"version":3,"sources":["../../../src/state-machines/query-running/actions.ts"],"names":["flushPageData","assignDirtyQueries","_context","data","queryIds","queryActions"],"mappings":";;;;;AACA;;AACA;;AAEO,MAAMA,aAAa,GAAG,MAAY;AACvC;AACD,CAFM;;;AAIA,MAAMC,kBAAkB,GAAG,oBAGhC,CAACC,QAAD,EAAW;AAAEC,EAAAA;AAAF,CAAX,KAAwB;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAeD,IAArB;AACA,SAAO;AACLC,IAAAA;AADK,GAAP;AAGD,CARiC,CAA3B;;AAUA,MAAMC,YAGZ,GAAG;AACFJ,EAAAA,kBADE;AAEFD,EAAAA;AAFE,CAHG","sourcesContent":["import { IQueryRunningContext } from \"./types\"\nimport { DoneInvokeEvent, assign, ActionFunctionMap } from \"xstate\"\nimport { enqueueFlush } from \"../../utils/page-data\"\n\nexport const flushPageData = (): void => {\n  enqueueFlush()\n}\n\nexport const assignDirtyQueries = assign<\n  IQueryRunningContext,\n  DoneInvokeEvent<any>\n>((_context, { data }) => {\n  const { queryIds } = data\n  return {\n    queryIds,\n  }\n})\n\nexport const queryActions: ActionFunctionMap<\n  IQueryRunningContext,\n  DoneInvokeEvent<any>\n> = {\n  assignDirtyQueries,\n  flushPageData,\n}\n"],"file":"actions.js"}