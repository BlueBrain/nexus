{"version":3,"sources":["../../src/db/index.js"],"names":["_","require","report","redux","emitter","saveInProgress","saveState","err","warn","message","saveStateDebounced","debounce","startAutosave","on","module","exports"],"mappings":";;AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAE,QAAF,CAAjB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAE,yBAAF,CAAtB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAE,UAAF,CAArB;;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAcD,KAApB;AAEA,IAAIE,cAAc,GAAG,KAArB;;AACA,eAAeC,SAAf,GAA2B;AACzB,MAAID,cAAJ,EAAoB;AACpBA,EAAAA,cAAc,GAAG,IAAjB;;AAEA,MAAI;AACF,UAAMF,KAAK,CAACG,SAAN,EAAN;AACD,GAFD,CAEE,OAAOC,GAAP,EAAY;AACZL,IAAAA,MAAM,CAACM,IAAP,CAAa,2BAA2BD,GAAG,IAAIA,GAAG,CAACE,OAAZ,IAAwBF,GAAI,EAAnE;AACD;;AAEDF,EAAAA,cAAc,GAAG,KAAjB;AACD;;AACD,MAAMK,kBAAkB,GAAGV,CAAC,CAACW,QAAF,CAAWL,SAAX,EAAsB,IAAtB,CAA3B;AAEA;;;;;;AAIA,SAASM,aAAT,GAAyB;AACvBF,EAAAA,kBAAkB;AAClBN,EAAAA,OAAO,CAACS,EAAR,CAAY,GAAZ,EAAgB,MAAMH,kBAAkB,EAAxC;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiB;AACfH,EAAAA,aADe;AAEfN,EAAAA;AAFe,CAAjB","sourcesContent":["const _ = require(`lodash`)\nconst report = require(`gatsby-cli/lib/reporter`)\nconst redux = require(`../redux`)\nconst { emitter } = redux\n\nlet saveInProgress = false\nasync function saveState() {\n  if (saveInProgress) return\n  saveInProgress = true\n\n  try {\n    await redux.saveState()\n  } catch (err) {\n    report.warn(`Error persisting state: ${(err && err.message) || err}`)\n  }\n\n  saveInProgress = false\n}\nconst saveStateDebounced = _.debounce(saveState, 1000)\n\n/**\n * Starts listening to redux actions and triggers a database save to\n * disk upon any action (debounced to every 1 second)\n */\nfunction startAutosave() {\n  saveStateDebounced()\n  emitter.on(`*`, () => saveStateDebounced())\n}\n\nmodule.exports = {\n  startAutosave,\n  saveState,\n}\n"],"file":"index.js"}