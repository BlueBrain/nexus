export interface IContext {
    isInBootstrap: boolean;
    componentPath: string;
    query: string;
    pages: Set<string>;
}
export interface IState {
    states: {
        inactive: {};
        inactiveWhileBootstrapping: {};
        queryExtractionGraphQLError: {};
        queryExtractionBabelError: {};
        runningPageQueries: {};
        idle: {};
    };
}
/**
 * Stricter types for actions are not possible
 * as we have different payloads that would require casting.
 * The current approach prevents this but makes all payloads optional.
 * See https://github.com/gatsbyjs/gatsby/pull/23277#issuecomment-625425023
 */
declare type ActionTypes = "BOOTSTRAP_FINISHED" | "DELETE_PAGE" | "NEW_PAGE_CREATED" | "PAGE_CONTEXT_MODIFIED" | "QUERY_EXTRACTION_GRAPHQL_ERROR" | "QUERY_EXTRACTION_BABEL_ERROR" | "QUERY_EXTRACTION_BABEL_SUCCESS" | "QUERY_CHANGED" | "QUERY_DID_NOT_CHANGE" | "QUERIES_COMPLETE";
export interface IEvent {
    type: ActionTypes;
    path?: string;
    query?: string;
    page?: {
        path: string;
    };
}
export declare const componentMachine: import("xstate").StateMachine<IContext, IState, IEvent, any>;
export {};
