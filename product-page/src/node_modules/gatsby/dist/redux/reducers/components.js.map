{"version":3,"sources":["../../../src/redux/reducers/components.ts"],"names":["services","Map","programStatus","componentsReducer","state","action","type","payload","forEach","s","send","componentPath","component","service","has","machine","componentMachine","withContext","query","get","pages","Set","path","isInBootstrap","start","set","context","contextModified","Object","assign","value","servicesToSendEventTo","filter","Boolean","isPage","delete","page"],"mappings":"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","sourcesContent":["import normalize from \"normalize-path\"\nimport { interpret } from \"xstate\"\n\nimport { componentMachine } from \"../machines/page-component\"\nimport { IGatsbyState, ActionsUnion } from \"../types\"\n\nconst services = new Map()\nlet programStatus = `BOOTSTRAPPING`\n\nexport const componentsReducer = (\n  state: IGatsbyState[\"components\"] = new Map(),\n  action: ActionsUnion\n): IGatsbyState[\"components\"] => {\n  switch (action.type) {\n    case `DELETE_CACHE`:\n      return new Map()\n    case `SET_PROGRAM_STATUS`:\n      programStatus = action.payload\n      if (programStatus === `BOOTSTRAP_QUERY_RUNNING_FINISHED`) {\n        services.forEach(s => s.send(`BOOTSTRAP_FINISHED`))\n      }\n      return state\n    case `CREATE_PAGE`: {\n      action.payload.componentPath = normalize(action.payload.component)\n      // Create XState service.\n      let service\n      if (!services.has(action.payload.componentPath)) {\n        const machine = componentMachine.withContext({\n          componentPath: action.payload.componentPath,\n          query: state.get(action.payload.componentPath)?.query || ``,\n          pages: new Set([action.payload.path]),\n          isInBootstrap: programStatus === `BOOTSTRAPPING`,\n        })\n        service = interpret(machine).start()\n        // .onTransition(nextState => {\n        // console.log(\n        // `component machine value`,\n        // _.pick(nextState, [`value`, `context`, `event`])\n        // )\n        // })\n        // .start()\n        services.set(action.payload.componentPath, service)\n      } else {\n        service = services.get(action.payload.componentPath)\n        if (!service.state.context.pages.has(action.payload.path)) {\n          service.send({ type: `NEW_PAGE_CREATED`, path: action.payload.path })\n        } else if (action.contextModified) {\n          service.send({\n            type: `PAGE_CONTEXT_MODIFIED`,\n            path: action.payload.path,\n          })\n        }\n      }\n\n      state.set(\n        action.payload.componentPath,\n        Object.assign(\n          {\n            query: ``,\n          },\n          service.state.context\n        )\n      )\n      return state\n    }\n    case `QUERY_EXTRACTED`: {\n      action.payload.componentPath = normalize(action.payload.componentPath)\n      const service = services.get(action.payload.componentPath)\n\n      if (service.state.value === `queryExtractionBabelError`) {\n        // Do nothing until the babel error is fixed.\n        return state\n      }\n\n      // Check if the query has changed or not.\n      if (service.state.context.query === action.payload.query) {\n        service.send(`QUERY_DID_NOT_CHANGE`)\n      } else {\n        service.send({\n          type: `QUERY_CHANGED`,\n          query: action.payload.query,\n        })\n      }\n\n      state.set(action.payload.componentPath, {\n        ...service.state.context,\n      })\n      return state\n    }\n    case `QUERY_EXTRACTION_BABEL_SUCCESS`:\n    case `QUERY_EXTRACTION_BABEL_ERROR`:\n    case `QUERY_EXTRACTION_GRAPHQL_ERROR`: {\n      let servicesToSendEventTo\n      if (\n        typeof action.payload.componentPath !== `string` &&\n        action.type === `QUERY_EXTRACTION_GRAPHQL_ERROR`\n      ) {\n        // if this is globabl query extraction error, send it to all page component services\n        servicesToSendEventTo = services\n      } else {\n        action.payload.componentPath = normalize(action.payload.componentPath)\n        servicesToSendEventTo = [\n          services.get(action.payload.componentPath),\n        ].filter(Boolean)\n      }\n\n      servicesToSendEventTo.forEach(service =>\n        service.send({\n          type: action.type,\n          ...action.payload,\n        })\n      )\n\n      return state\n    }\n    case `PAGE_QUERY_RUN`: {\n      if (action.payload.isPage) {\n        action.payload.componentPath = normalize(action.payload.componentPath)\n        const service = services.get(action.payload.componentPath)\n        // TODO we want to keep track of whether there's any outstanding queries still\n        // running as this will mark queries as complete immediately even though\n        // a page component could have thousands of pages will processing.\n        // This can be done once we start modeling Pages as well.\n        service.send({\n          type: `QUERIES_COMPLETE`,\n        })\n      }\n      return state\n    }\n    case `REMOVE_STATIC_QUERIES_BY_TEMPLATE`: {\n      action.payload.componentPath = normalize(action.payload.componentPath)\n      state.delete(action.payload.componentPath)\n      return state\n    }\n    case `DELETE_PAGE`: {\n      const service = services.get(normalize(action.payload.component))\n      service.send({\n        type: `DELETE_PAGE`,\n        page: action.payload,\n      })\n      return state\n    }\n  }\n\n  return state\n}\n"],"file":"components.js"}