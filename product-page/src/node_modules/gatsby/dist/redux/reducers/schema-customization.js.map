{"version":3,"sources":["../../../src/redux/reducers/schema-customization.ts"],"names":["initialState","composer","context","fieldExtensions","printConfig","thirdPartySchemas","types","schemaCustomizationReducer","state","action","type","payload","Array","isArray","map","typeOrTypeDef","plugin","extension","name","path","include","exclude","withFieldTypes"],"mappings":";;;;;AAEA,MAAMA,YAAY,GAAG,MAA2C;AAC9D,SAAO;AACLC,IAAAA,QAAQ,EAAE,IADL;AAELC,IAAAA,OAAO,EAAE,EAFJ;AAGLC,IAAAA,eAAe,EAAE,EAHZ;AAILC,IAAAA,WAAW,EAAE,IAJR;AAKLC,IAAAA,iBAAiB,EAAE,EALd;AAMLC,IAAAA,KAAK,EAAE;AANF,GAAP;AAQD,CATD;;AAWO,MAAMC,0BAA0B,GAAG,CACxCC,KAA0C,GAAGR,YAAY,EADjB,EAExCS,MAFwC,KAGA;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAM,wBAAN;AACE,aAAO,EACL,GAAGF,KADE;AAELH,QAAAA,iBAAiB,EAAE,CAAC,GAAGG,KAAK,CAACH,iBAAV,EAA6BI,MAAM,CAACE,OAApC;AAFd,OAAP;;AAIF,SAAM,qBAAN;AACE,aAAO,EACL,GAAGH,KADE;AAELP,QAAAA,QAAQ,EAAEQ,MAAM,CAACE;AAFZ,OAAP;;AAIF,SAAM,cAAN;AAAqB;AACnB,YAAIL,KAAJ;;AACA,YAAIM,KAAK,CAACC,OAAN,CAAcJ,MAAM,CAACE,OAArB,CAAJ,EAAmC;AACjCL,UAAAA,KAAK,GAAG,CACN,GAAGE,KAAK,CAACF,KADH,EAEN,GAAGG,MAAM,CAACE,OAAP,CAAeG,GAAf,CAAmBC,aAAa,IAAI;AACrC,mBAAO;AACLA,cAAAA,aADK;AAELC,cAAAA,MAAM,EAAEP,MAAM,CAACO;AAFV,aAAP;AAID,WALE,CAFG,CAAR;AASD,SAVD,MAUO;AACLV,UAAAA,KAAK,GAAG,CACN,GAAGE,KAAK,CAACF,KADH,EAEN;AAAES,YAAAA,aAAa,EAAEN,MAAM,CAACE,OAAxB;AAAiCK,YAAAA,MAAM,EAAEP,MAAM,CAACO;AAAhD,WAFM,CAAR;AAID;;AACD,eAAO,EACL,GAAGR,KADE;AAELF,UAAAA;AAFK,SAAP;AAID;;AACD,SAAM,wBAAN;AAA+B;AAC7B,cAAM;AAAEW,UAAAA,SAAF;AAAaC,UAAAA;AAAb,YAAsBT,MAAM,CAACE,OAAnC;AACA,eAAO,EACL,GAAGH,KADE;AAELL,UAAAA,eAAe,EAAE,EAAE,GAAGK,KAAK,CAACL,eAAX;AAA4B,aAACe,IAAD,GAAQD;AAApC;AAFZ,SAAP;AAID;;AACD,SAAM,wBAAN;AAA+B;AAC7B,cAAM;AAAEE,UAAAA,IAAF;AAAQC,UAAAA,OAAR;AAAiBC,UAAAA,OAAjB;AAA0BC,UAAAA;AAA1B,YAA6Cb,MAAM,CAACE,OAA1D;AACA,eAAO,EACL,GAAGH,KADE;AAELJ,UAAAA,WAAW,EAAE;AACXe,YAAAA,IADW;AAEXC,YAAAA,OAFW;AAGXC,YAAAA,OAHW;AAIXC,YAAAA;AAJW;AAFR,SAAP;AASD;;AACD,SAAM,yBAAN;AAAgC;AAC9B,cAAMpB,OAAO,GAAGO,MAAM,CAACE,OAAvB;AACA,eAAO,EACL,GAAGH,KADE;AAELN,UAAAA,OAAO,EAAE,EAAE,GAAGM,KAAK,CAACN,OAAX;AAAoB,eAAGA;AAAvB;AAFJ,SAAP;AAID;;AACD,SAAM,4BAAN;AACE,aAAO,EACL,GAAGF,YAAY,EADV;AAELC,QAAAA,QAAQ,EAAEO,KAAK,CAACP;AAFX,OAAP;;AAIF,SAAM,cAAN;AACE,aAAOD,YAAY,EAAnB;;AACF;AACE,aAAOQ,KAAP;AApEJ;AAsED,CA1EM","sourcesContent":["import { IGatsbyState, ActionsUnion } from \"../types\"\n\nconst initialState = (): IGatsbyState[\"schemaCustomization\"] => {\n  return {\n    composer: null,\n    context: {},\n    fieldExtensions: {},\n    printConfig: null,\n    thirdPartySchemas: [],\n    types: [],\n  }\n}\n\nexport const schemaCustomizationReducer = (\n  state: IGatsbyState[\"schemaCustomization\"] = initialState(),\n  action: ActionsUnion\n): IGatsbyState[\"schemaCustomization\"] => {\n  switch (action.type) {\n    case `ADD_THIRD_PARTY_SCHEMA`:\n      return {\n        ...state,\n        thirdPartySchemas: [...state.thirdPartySchemas, action.payload],\n      }\n    case `SET_SCHEMA_COMPOSER`:\n      return {\n        ...state,\n        composer: action.payload,\n      }\n    case `CREATE_TYPES`: {\n      let types: IGatsbyState[\"schemaCustomization\"][\"types\"]\n      if (Array.isArray(action.payload)) {\n        types = [\n          ...state.types,\n          ...action.payload.map(typeOrTypeDef => {\n            return {\n              typeOrTypeDef,\n              plugin: action.plugin,\n            }\n          }),\n        ]\n      } else {\n        types = [\n          ...state.types,\n          { typeOrTypeDef: action.payload, plugin: action.plugin },\n        ]\n      }\n      return {\n        ...state,\n        types,\n      }\n    }\n    case `CREATE_FIELD_EXTENSION`: {\n      const { extension, name } = action.payload\n      return {\n        ...state,\n        fieldExtensions: { ...state.fieldExtensions, [name]: extension },\n      }\n    }\n    case `PRINT_SCHEMA_REQUESTED`: {\n      const { path, include, exclude, withFieldTypes } = action.payload\n      return {\n        ...state,\n        printConfig: {\n          path,\n          include,\n          exclude,\n          withFieldTypes,\n        },\n      }\n    }\n    case `CREATE_RESOLVER_CONTEXT`: {\n      const context = action.payload\n      return {\n        ...state,\n        context: { ...state.context, ...context },\n      }\n    }\n    case `CLEAR_SCHEMA_CUSTOMIZATION`:\n      return {\n        ...initialState(),\n        composer: state.composer,\n      }\n    case `DELETE_CACHE`:\n      return initialState()\n    default:\n      return state\n  }\n}\n"],"file":"schema-customization.js"}