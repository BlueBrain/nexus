{"version":3,"sources":["../../../src/redux/reducers/webpack.ts"],"names":["webpackReducer","state","action","type","nextConfig","payload","entry","output","target","resolveLoaders"],"mappings":";;;;;;;AAAA;;AAGO,MAAMA,cAAc,GAAG,CAC5BC,KAA8B,GAAG,EADL,EAE5BC,MAF4B,KAGA;AAC5B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAM,oBAAN;AAA2B;AACzB,cAAMC,UAAU,GAAGF,MAAM,CAACG,OAA1B;AACA,eAAOD,UAAU,CAACE,KAAlB;AACA,eAAOF,UAAU,CAACG,MAAlB;AACA,eAAOH,UAAU,CAACI,MAAlB;AACA,eAAOJ,UAAU,CAACK,cAAlB;AAEA,eAAO,2BAAMR,KAAN,EAAaG,UAAb,CAAP;AACD;;AACD,SAAM,wBAAN;AACE,aAAO,EAAE,GAAGF,MAAM,CAACG;AAAZ,OAAP;;AAEF;AACE,aAAOJ,KAAP;AAdJ;AAgBD,CApBM","sourcesContent":["import merge from \"webpack-merge\"\nimport { ActionsUnion, IGatsbyState } from \"../types\"\n\nexport const webpackReducer = (\n  state: IGatsbyState[\"webpack\"] = {},\n  action: ActionsUnion\n): IGatsbyState[\"webpack\"] => {\n  switch (action.type) {\n    case `SET_WEBPACK_CONFIG`: {\n      const nextConfig = action.payload\n      delete nextConfig.entry\n      delete nextConfig.output\n      delete nextConfig.target\n      delete nextConfig.resolveLoaders\n\n      return merge(state, nextConfig)\n    }\n    case `REPLACE_WEBPACK_CONFIG`:\n      return { ...action.payload }\n\n    default:\n      return state\n  }\n}\n"],"file":"webpack.js"}