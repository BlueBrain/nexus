{"version":3,"sources":["../../../src/schema/types/sort.js"],"names":["getNamedType","getNullableType","GraphQLInputObjectType","GraphQLList","require","SORTABLE_ENUM","SORTABLE","NOT_SORTABLE","DEPRECATED_SORTABLE","getSortOrderEnum","schemaComposer","getOrCreateETC","etc","setFields","ASC","value","DESC","getFieldsEnum","typeComposer","inputTypeComposer","typeName","getTypeName","fieldsEnumTypeName","fieldsEnumTypeComposer","derivedTypeName","fields","convert","getFields","getSortInput","getInputTypeComposer","sortOrderEnumTC","fieldsEnumTC","sortInputTypeName","getOrCreateITC","itc","addFields","order","type","defaultValue","module","exports","MAX_SORT_DEPTH","SORT_FIELD_DELIMITER","prefix","depth","deprecationReason","sortFields","Object","keys","forEach","fieldName","fieldConfig","sortable","getFieldExtension","sortKey","sortKeyFieldName","split","join","getAnyTC","name","replace","assign"],"mappings":"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","sourcesContent":["// @flow\n\nconst {\n  getNamedType,\n  getNullableType,\n  GraphQLInputObjectType,\n  GraphQLList,\n} = require(`graphql`)\nimport { addDerivedType } from \"./derived-types\"\n\nconst SORTABLE_ENUM = {\n  SORTABLE: `SORTABLE`,\n  NOT_SORTABLE: `NON_SORTABLE`,\n  DEPRECATED_SORTABLE: `DERPECATED_SORTABLE`,\n}\n\nconst getSortOrderEnum = ({ schemaComposer }) =>\n  schemaComposer.getOrCreateETC(`SortOrderEnum`, etc => {\n    etc.setFields({\n      ASC: { value: `ASC` },\n      DESC: { value: `DESC` },\n    })\n  })\n\nconst getFieldsEnum = ({ schemaComposer, typeComposer, inputTypeComposer }) => {\n  const typeName = typeComposer.getTypeName()\n  const fieldsEnumTypeName = `${typeName}FieldsEnum`\n  const fieldsEnumTypeComposer = schemaComposer.getOrCreateETC(\n    fieldsEnumTypeName\n  )\n  addDerivedType({ typeComposer, derivedTypeName: fieldsEnumTypeName })\n\n  const fields = convert(\n    schemaComposer,\n    typeComposer,\n    inputTypeComposer.getFields()\n  )\n  fieldsEnumTypeComposer.setFields(fields)\n  return fieldsEnumTypeComposer\n}\n\nconst getSortInput = ({ schemaComposer, typeComposer }) => {\n  const inputTypeComposer = typeComposer.getInputTypeComposer()\n  const sortOrderEnumTC = getSortOrderEnum({ schemaComposer })\n  const fieldsEnumTC = getFieldsEnum({\n    schemaComposer,\n    typeComposer,\n    inputTypeComposer,\n  })\n  const typeName = typeComposer.getTypeName()\n  // console.log(fieldsEnumTC.getType().getValues())\n\n  const sortInputTypeName = `${typeName}SortInput`\n  addDerivedType({ typeComposer, derivedTypeName: sortInputTypeName })\n\n  return schemaComposer.getOrCreateITC(sortInputTypeName, itc => {\n    itc.addFields({\n      fields: [fieldsEnumTC],\n      order: { type: [sortOrderEnumTC], defaultValue: [`ASC`] },\n    })\n  })\n}\n\nmodule.exports = {\n  getSortInput,\n  getFieldsEnum,\n  getSortOrderEnum,\n  SORTABLE_ENUM,\n}\n\nconst MAX_SORT_DEPTH = 3\nconst SORT_FIELD_DELIMITER = `___`\n\nconst convert = (\n  schemaComposer,\n  typeComposer,\n  fields,\n  prefix = null,\n  depth = 0,\n  deprecationReason\n) => {\n  const sortFields = {}\n\n  Object.keys(fields).forEach(fieldName => {\n    const fieldConfig = fields[fieldName]\n    const sortable = typeComposer.getFieldExtension(fieldName, `sortable`)\n    if (sortable === SORTABLE_ENUM.NOT_SORTABLE) {\n      return\n    } else if (sortable === SORTABLE_ENUM.DEPRECATED_SORTABLE) {\n      deprecationReason = `Sorting on fields that need arguments to resolve is deprecated.`\n    }\n    const sortKey = prefix ? `${prefix}.${fieldName}` : fieldName\n    const sortKeyFieldName = sortKey.split(`.`).join(SORT_FIELD_DELIMITER)\n\n    // XXX(freiksenet): this is to preserve legacy behaviour, this probably doesn't actually sort\n    if (getNullableType(fieldConfig.type) instanceof GraphQLList) {\n      sortFields[sortKeyFieldName] = {\n        value: sortKey,\n        deprecationReason,\n      }\n    }\n\n    const type = getNamedType(fieldConfig.type)\n    if (type instanceof GraphQLInputObjectType) {\n      if (depth < MAX_SORT_DEPTH) {\n        const typeComposer = schemaComposer.getAnyTC(\n          type.name.replace(/Input$/, ``)\n        )\n        Object.assign(\n          sortFields,\n          convert(\n            schemaComposer,\n            typeComposer,\n            type.getFields(),\n            sortKey,\n            depth + 1,\n            deprecationReason\n          )\n        )\n      }\n    } else {\n      // GraphQLScalarType || GraphQLEnumType\n      sortFields[sortKeyFieldName] = {\n        value: sortKey,\n        deprecationReason,\n      }\n    }\n  })\n  return sortFields\n}\n"],"file":"sort.js"}