{"version":3,"sources":["../../src/schema/print.js"],"names":["fs","require","EnumTypeComposer","InputTypeComposer","InterfaceTypeComposer","ObjectTypeComposer","ScalarTypeComposer","UnionTypeComposer","report","internalExtensionNames","printTypeDefinitions","config","schemaComposer","Promise","resolve","path","include","exclude","withFieldTypes","error","existsSync","internalTypes","internalPlugins","typesToExclude","types","pluginsToExclude","plugins","getName","tc","name","getTypeName","isInternalType","typeName","includes","plugin","getExtension","shouldIncludeType","processedTypes","Set","typeDefs","addType","has","add","addWithFieldTypes","interfaces","getInterfaces","forEach","iface","ifaceName","getAnyTC","getFieldNames","fieldName","fieldType","getFieldTC","fieldArgs","getFieldArgs","Object","keys","argName","getFieldArgTC","printedTypeDefs","Date","toISOString","push","printType","info","writeFile","join","printObjectType","printInterfaceType","printUnionType","printEnumType","printScalarType","printInputObjectType","Error","astFromValue","print","GraphQLString","DEFAULT_DEPRECATION_REASON","printBlockString","_","type","getType","printDescription","implementedInterfaces","length","map","i","extensions","getExtensions","hasInterface","dontInfer","directives","getDirectives","printedDirectives","printDirectives","fields","values","getFields","filter","field","printFields","getTypes","possibleTypes","getValues","value","printDeprecated","printBlock","f","printInputValue","printedFields","printArgs","args","String","items","indentation","every","arg","description","defaultAST","defaultValue","argDecl","entries","printDirectiveArgs","find","directive","directiveArgs","fieldOrEnumVal","isDeprecated","reason","deprecationReason","reasonAST","def","firstInBlock","lines","descriptionLines","text","preferMultipleLines","blockString","prefix","replace","maxLen","rawLines","split","flatMap","line","breakLine","parts","RegExp","sublines","slice","module","exports"],"mappings":"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","sourcesContent":["const fs = require(`fs-extra`)\nconst {\n  EnumTypeComposer,\n  InputTypeComposer,\n  InterfaceTypeComposer,\n  ObjectTypeComposer,\n  ScalarTypeComposer,\n  UnionTypeComposer,\n} = require(`graphql-compose`)\nconst report = require(`gatsby-cli/lib/reporter`)\n\nconst { internalExtensionNames } = require(`./extensions`)\n\nconst printTypeDefinitions = ({ config, schemaComposer }) => {\n  if (!config) return Promise.resolve()\n\n  const { path, include = {}, exclude = {}, withFieldTypes } = config || {}\n\n  if (!path) {\n    report.error(\n      `Printing type definitions aborted. Please provide a file path.`\n    )\n    return Promise.resolve()\n  }\n\n  if (fs.existsSync(path)) {\n    report.error(\n      `Printing type definitions aborted. The file \\`${path}\\` already exists.`\n    )\n    return Promise.resolve()\n  }\n\n  const internalTypes = [\n    `Boolean`,\n    `Buffer`,\n    `Date`,\n    `Float`,\n    `ID`,\n    `Int`,\n    `Internal`,\n    `InternalInput`,\n    `JSON`,\n    `Json`,\n    `Node`,\n    `NodeInput`,\n    `Query`,\n    `String`,\n  ]\n  const internalPlugins = [`internal-data-bridge`]\n\n  const typesToExclude = exclude.types || []\n  const pluginsToExclude = exclude.plugins || []\n\n  const getName = tc => tc.name || tc.getTypeName()\n\n  const isInternalType = tc => {\n    const typeName = getName(tc)\n    if (internalTypes.includes(typeName)) {\n      return true\n    }\n\n    const plugin = tc.getExtension(`plugin`)\n    if (internalPlugins.includes(plugin)) {\n      return true\n    }\n\n    return false\n  }\n\n  const shouldIncludeType = tc => {\n    const typeName = getName(tc)\n    if (typesToExclude.includes(typeName)) {\n      return false\n    }\n    if (include.types && !include.types.includes(typeName)) {\n      return false\n    }\n\n    const plugin = tc.getExtension(`plugin`)\n    if (pluginsToExclude.includes(plugin)) {\n      return false\n    }\n    if (include.plugins && !include.plugins.includes(plugin)) {\n      return false\n    }\n\n    return true\n  }\n\n  // Save processed type names, not references to the type composers,\n  // because of how graphql-compose, at least in v6, processes\n  // inline types\n  const processedTypes = new Set()\n  const typeDefs = new Set()\n\n  const addType = tc => {\n    const typeName = getName(tc)\n    if (!processedTypes.has(typeName) && !isInternalType(tc)) {\n      processedTypes.add(typeName)\n      return typeDefs.add(tc)\n    }\n    processedTypes.add(typeName)\n    return null\n  }\n\n  const addWithFieldTypes = tc => {\n    if (\n      addType(tc) &&\n      (tc instanceof ObjectTypeComposer ||\n        tc instanceof InterfaceTypeComposer ||\n        tc instanceof InputTypeComposer)\n    ) {\n      if (tc instanceof ObjectTypeComposer) {\n        const interfaces = tc.getInterfaces()\n        interfaces.forEach(iface => {\n          const ifaceName = getName(iface)\n          if (ifaceName !== `Node`) {\n            addWithFieldTypes(schemaComposer.getAnyTC(ifaceName))\n          }\n        })\n      }\n\n      tc.getFieldNames().forEach(fieldName => {\n        const fieldType = tc.getFieldTC(fieldName)\n        addWithFieldTypes(fieldType)\n\n        if (!(tc instanceof InputTypeComposer)) {\n          const fieldArgs = tc.getFieldArgs(fieldName)\n          Object.keys(fieldArgs).forEach(argName => {\n            addWithFieldTypes(tc.getFieldArgTC(fieldName, argName))\n          })\n        }\n      })\n    }\n  }\n\n  schemaComposer.forEach(tc => {\n    if (!isInternalType(tc) && shouldIncludeType(tc)) {\n      if (withFieldTypes) {\n        addWithFieldTypes(tc)\n      } else {\n        addType(tc)\n      }\n    }\n  })\n\n  const printedTypeDefs = [\n    `### Type definitions saved at ${new Date().toISOString()} ###`,\n  ]\n\n  try {\n    typeDefs.forEach(tc => printedTypeDefs.push(printType(tc)))\n    report.info(`Writing GraphQL type definitions to ${path}`)\n    return fs.writeFile(path, printedTypeDefs.join(`\\n\\n`))\n  } catch (error) {\n    report.error(`Failed writing type definitions to \\`${path}\\`.`, error)\n    return Promise.resolve()\n  }\n}\n\nconst printType = (tc, typeName) => {\n  if (tc instanceof ObjectTypeComposer) {\n    return printObjectType(tc)\n  } else if (tc instanceof InterfaceTypeComposer) {\n    return printInterfaceType(tc)\n  } else if (tc instanceof UnionTypeComposer) {\n    return printUnionType(tc)\n  } else if (tc instanceof EnumTypeComposer) {\n    return printEnumType(tc)\n  } else if (tc instanceof ScalarTypeComposer) {\n    return printScalarType(tc)\n  } else if (tc instanceof InputTypeComposer) {\n    return printInputObjectType(tc)\n  } else {\n    throw new Error(`Did not recognize type of ${typeName}.`)\n  }\n}\n\n// ------------------------- graphql-js schemaPrinter -------------------------\n\nconst {\n  astFromValue,\n  print,\n  GraphQLString,\n  DEFAULT_DEPRECATION_REASON,\n} = require(`graphql`)\nconst { printBlockString } = require(`graphql/language/blockString`)\nconst _ = require(`lodash`)\n\nconst printScalarType = tc => {\n  const type = tc.getType()\n  return printDescription(type) + `scalar ${type.name}`\n}\n\nconst printObjectType = tc => {\n  const type = tc.getType()\n  const interfaces = type.getInterfaces()\n  const implementedInterfaces = interfaces.length\n    ? ` implements ` + interfaces.map(i => i.name).join(` & `)\n    : ``\n  const extensions = tc.getExtensions()\n  if (tc.hasInterface(`Node`)) {\n    extensions.dontInfer = null\n  }\n  const directives = tc.schemaComposer.getDirectives()\n  const printedDirectives = printDirectives(extensions, directives)\n  const fields = tc.hasInterface(`Node`)\n    ? Object.values(type.getFields()).filter(\n        field => ![`id`, `parent`, `children`, `internal`].includes(field.name)\n      )\n    : Object.values(type.getFields())\n  return (\n    printDescription(type) +\n    `type ${type.name}${implementedInterfaces}${printedDirectives}` +\n    printFields(fields, directives)\n  )\n}\n\nconst printInterfaceType = tc => {\n  const type = tc.getType()\n  const extensions = tc.getExtensions()\n  const directives = tc.schemaComposer.getDirectives()\n  const printedDirectives = printDirectives(extensions, directives)\n  return (\n    printDescription(type) +\n    `interface ${type.name}${printedDirectives}` +\n    printFields(Object.values(type.getFields()), directives)\n  )\n}\n\nconst printUnionType = tc => {\n  const type = tc.getType()\n  const types = type.getTypes()\n  const possibleTypes = types.length ? ` = ` + types.join(` | `) : ``\n  return printDescription(type) + `union ` + type.name + possibleTypes\n}\n\nconst printEnumType = tc => {\n  const type = tc.getType()\n  const values = type\n    .getValues()\n    .map(\n      (value, i) =>\n        printDescription(value, `  `, !i) +\n        `  ` +\n        value.name +\n        printDeprecated(value)\n    )\n\n  return printDescription(type) + `enum ${type.name}` + printBlock(values)\n}\n\nconst printInputObjectType = tc => {\n  const type = tc.getType()\n  const fields = Object.values(type.getFields()).map(\n    (f, i) => printDescription(f, `  `, !i) + `  ` + printInputValue(f)\n  )\n  return printDescription(type) + `input ${type.name}` + printBlock(fields)\n}\n\nconst printFields = (fields, directives) => {\n  const printedFields = fields.map(\n    (f, i) =>\n      printDescription(f, `  `, !i) +\n      `  ` +\n      f.name +\n      printArgs(f.args, `  `) +\n      `: ` +\n      String(f.type) +\n      printDirectives(f.extensions || {}, directives) +\n      printDeprecated(f)\n  )\n  return printBlock(printedFields)\n}\n\nconst printBlock = items =>\n  items.length !== 0 ? ` {\\n` + items.join(`\\n`) + `\\n}` : ``\n\nconst printArgs = (args, indentation = ``) => {\n  if (args.length === 0) {\n    return ``\n  }\n\n  // If all args have no description, print them on one line\n  if (args.every(arg => !arg.description)) {\n    return `(` + args.map(printInputValue).join(`, `) + `)`\n  }\n\n  return (\n    `(\\n` +\n    args\n      .map(\n        (arg, i) =>\n          printDescription(arg, `  ` + indentation, !i) +\n          `  ` +\n          indentation +\n          printInputValue(arg)\n      )\n      .join(`\\n`) +\n    `\\n` +\n    indentation +\n    `)`\n  )\n}\n\nconst printInputValue = arg => {\n  const defaultAST = astFromValue(arg.defaultValue, arg.type)\n  let argDecl = arg.name + `: ` + String(arg.type)\n  if (defaultAST) {\n    argDecl += ` = ${print(defaultAST)}`\n  }\n  return argDecl\n}\n\nconst printDirectives = (extensions, directives) =>\n  Object.entries(extensions)\n    .map(([name, args]) => {\n      if ([...internalExtensionNames, `deprecated`].includes(name)) return ``\n      return (\n        ` @${name}` +\n        printDirectiveArgs(\n          args,\n          directives.find(directive => directive.name === name)\n        )\n      )\n    })\n    .join(``)\n\nconst printDirectiveArgs = (args, directive) => {\n  if (!args || !directive) {\n    return ``\n  }\n\n  const directiveArgs = Object.entries(args)\n  if (directiveArgs.length === 0) {\n    return ``\n  }\n\n  return (\n    `(` +\n    directiveArgs\n      .map(([name, value]) => {\n        const arg =\n          directive.args && directive.args.find(arg => arg.name === name)\n        return arg && `${name}: ${print(astFromValue(value, arg.type))}`\n      })\n      .join(`, `) +\n    `)`\n  )\n}\n\nconst printDeprecated = fieldOrEnumVal => {\n  if (!fieldOrEnumVal.isDeprecated) {\n    return ``\n  }\n  const reason = fieldOrEnumVal.deprecationReason\n  const reasonAST = astFromValue(reason, GraphQLString)\n  if (reasonAST && reason !== `` && reason !== DEFAULT_DEPRECATION_REASON) {\n    return ` @deprecated(reason: ` + print(reasonAST) + `)`\n  }\n  return ` @deprecated`\n}\n\nconst printDescription = (def, indentation = ``, firstInBlock = true) => {\n  if (!def.description) {\n    return ``\n  }\n\n  const lines = descriptionLines(def.description, 120 - indentation.length)\n\n  const text = lines.join(`\\n`)\n  const preferMultipleLines = text.length > 70\n  const blockString = printBlockString(text, ``, preferMultipleLines)\n  const prefix = indentation && !firstInBlock ? `\\n` + indentation : indentation\n\n  return prefix + blockString.replace(/\\n/g, `\\n` + indentation) + `\\n`\n}\n\nconst descriptionLines = (description, maxLen) => {\n  const rawLines = description.split(`\\n`)\n  return _.flatMap(rawLines, line => {\n    if (line.length < maxLen + 5) {\n      return line\n    }\n    // For > 120 character long lines, cut at space boundaries into sublines\n    // of ~80 chars.\n    return breakLine(line, maxLen)\n  })\n}\n\nconst breakLine = (line, maxLen) => {\n  const parts = line.split(new RegExp(`((?: |^).{15,${maxLen - 40}}(?= |$))`))\n  if (parts.length < 4) {\n    return [line]\n  }\n  const sublines = [parts[0] + parts[1] + parts[2]]\n  for (let i = 3; i < parts.length; i += 2) {\n    sublines.push(parts[i].slice(1) + parts[i + 1])\n  }\n  return sublines\n}\n\nmodule.exports = {\n  printTypeDefinitions,\n}\n"],"file":"print.js"}