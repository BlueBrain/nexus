'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var react = require('react');
var raf = _interopDefault(require('raf'));

/*
  We are using raf which is a polyfilled version of requestAnimationFrame
*/
/**
 *
 * useRaf
 * @param {function} callback The callback function to be executed
 * @param {boolean} [isActive=true] The value which while true, keeps the raf running infinitely
 */
function useRaf(callback, isActive) {
    const savedCallback = react.useRef();
    // Remember the latest function.
    react.useLayoutEffect(() => {
        savedCallback.current = callback;
    }, [callback]);
    react.useLayoutEffect(() => {
        let startTime, animationFrame;
        function tick() {
            const timeElapsed = Date.now() - startTime;
            startTime = Date.now();
            loop();
            savedCallback.current && savedCallback.current(timeElapsed);
        }
        function loop() {
            animationFrame = raf(tick);
        }
        if (isActive) {
            startTime = Date.now();
            loop();
            return () => {
                raf.cancel(animationFrame);
            };
        }
    }, [isActive]);
}

module.exports = useRaf;
//# sourceMappingURL=index.browser.cjs.js.map
