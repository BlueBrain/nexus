{"version":3,"file":"alert.cjs.development.js","sources":["../src/index.tsx"],"sourcesContent":["/**\n * Welcome to @reach/alert!\n *\n * An alert is an element that displays a brief, important message in a way that\n * attracts the user's attention without interrupting the user's task.\n * Dynamically rendered alerts are automatically announced by most screen\n * readers, and in some operating systems, they may trigger an alert sound.\n *\n * The approach here is to allow developers to render a visual <Alert> and then\n * we mirror that to a couple of aria-live regions behind the scenes. This way,\n * most of the time, developers don't have to think about visual vs. aria\n * alerts.\n *\n * Limitations: Developers can't read from context inside of an Alert because\n * we aren't using ReactDOM.createPortal(), we're actually creating a couple of\n * brand new React roots. We could use createPortal but then apps would need to\n * render the entire app tree in an <AlertProvider>, or maybe there's a way\n * with default context to do it, but we haven't explored that yet. So, we'll\n * see how this goes. If it becomes a problem we can introduce a portal later.\n *\n * @see Docs     https://reacttraining.com/reach-ui/alert\n * @see Source   https://github.com/reach/reach-ui/tree/master/packages/alert\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#alert\n */\nimport React, { forwardRef, useEffect, useRef, useMemo } from \"react\";\nimport { render } from \"react-dom\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport { getOwnerDocument, usePrevious, useForkedRef } from \"@reach/utils\";\nimport PropTypes from \"prop-types\";\n\n/*\n * Singleton state is fine because you don't server render\n * an alert (SRs don't read them on first load anyway)\n */\nlet keys: RegionKeys = {\n  polite: -1,\n  assertive: -1,\n};\n\nlet elements: ElementTypes = {\n  polite: {},\n  assertive: {},\n};\n\nlet liveRegions: RegionElements = {\n  polite: null,\n  assertive: null,\n};\n\nlet renderTimer: number | null;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Alert\n *\n * Screen-reader-friendly alert messages. In many apps developers add \"alert\"\n * messages when network events or other things happen. Users with assistive\n * technologies may not know about the message unless you develop for it.\n *\n * @see Docs https://reacttraining.com/reach-ui/alert\n */\nexport const Alert = forwardRef<HTMLDivElement, AlertProps>(function Alert(\n  { children, type = \"polite\", ...props },\n  forwardedRef\n) {\n  const ownRef = useRef(null);\n  const ref = useForkedRef(forwardedRef, ownRef);\n  const child = useMemo(\n    () => (\n      <div {...props} ref={ref} data-reach-alert>\n        {children}\n      </div>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [children, props]\n  );\n  useMirrorEffects(type, child, ownRef);\n\n  return child;\n});\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/alert#alert-props\n */\nexport type AlertProps = {\n  /**\n   * Controls whether the assistive technology should read immediately\n   * (\"assertive\") or wait until the user is idle (\"polite\").\n   *\n   * @see Docs https://reacttraining.com/reach-ui/alert#alert-type\n   */\n  type?: \"assertive\" | \"polite\";\n  children: React.ReactNode;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nif (__DEV__) {\n  Alert.displayName = \"Alert\";\n  Alert.propTypes = {\n    children: PropTypes.node,\n    type: PropTypes.oneOf([\"assertive\", \"polite\"]),\n  };\n}\n\nexport default Alert;\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction createMirror(type: \"polite\" | \"assertive\", doc: Document): Mirror {\n  let key = ++keys[type];\n\n  let mount = (element: JSX.Element) => {\n    if (liveRegions[type]) {\n      elements[type][key] = element;\n      renderAlerts();\n    } else {\n      let node = doc.createElement(\"div\");\n      node.setAttribute(`data-reach-live-${type}`, \"true\");\n      liveRegions[type] = node;\n      doc.body.appendChild(liveRegions[type]!);\n      mount(element);\n    }\n  };\n\n  let update = (element: JSX.Element) => {\n    elements[type][key] = element;\n    renderAlerts();\n  };\n\n  let unmount = () => {\n    delete elements[type][key];\n    renderAlerts();\n  };\n\n  return { mount, update, unmount };\n}\n\nfunction renderAlerts() {\n  if (renderTimer != null) {\n    window.clearTimeout(renderTimer);\n  }\n  renderTimer = window.setTimeout(() => {\n    Object.keys(elements).forEach(elementType => {\n      let type: RegionTypes = elementType as RegionTypes;\n      let container = liveRegions[type]!;\n      if (container) {\n        render(\n          <VisuallyHidden>\n            <div\n              // The status role is a type of live region and a container whose\n              // content is advisory information for the user that is not\n              // important enough to justify an alert, and is often presented as\n              // a status bar. When the role is added to an element, the browser\n              // will send out an accessible status event to assistive\n              // technology products which can then notify the user about it.\n              // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_status_role\n              role={type === \"assertive\" ? \"alert\" : \"status\"}\n              aria-live={type}\n            >\n              {Object.keys(elements[type]).map(key =>\n                React.cloneElement(elements[type][key], {\n                  key,\n                  ref: null,\n                })\n              )}\n            </div>\n          </VisuallyHidden>,\n          liveRegions[type]\n        );\n      }\n    });\n  }, 500);\n}\n\nfunction useMirrorEffects(\n  type: RegionTypes,\n  element: JSX.Element,\n  ref: React.RefObject<any>\n) {\n  const prevType = usePrevious<RegionTypes>(type);\n  const mirror = useRef<Mirror | null>(null);\n  const mounted = useRef(false);\n  useEffect(() => {\n    const ownerDocument = getOwnerDocument(ref.current) || document;\n    if (!mounted.current) {\n      mounted.current = true;\n      mirror.current = createMirror(type, ownerDocument);\n      mirror.current.mount(element);\n    } else if (prevType !== type) {\n      mirror.current && mirror.current.unmount();\n      mirror.current = createMirror(type, ownerDocument);\n      mirror.current.mount(element);\n    } else {\n      mirror.current && mirror.current.update(element);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [element, type, prevType]);\n\n  useEffect(() => {\n    return () => {\n      mirror.current && mirror.current.unmount();\n    };\n  }, []);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Types\n\ntype Mirror = {\n  mount: (element: JSX.Element) => void;\n  update: (element: JSX.Element) => void;\n  unmount: () => void;\n};\n\ntype RegionTypes = \"polite\" | \"assertive\";\n\ntype ElementTypes = {\n  [key in RegionTypes]: {\n    [key: string]: JSX.Element;\n  };\n};\n\ntype RegionElements<T extends HTMLElement = HTMLDivElement> = {\n  [key in RegionTypes]: T | null;\n};\n\ntype RegionKeys = {\n  [key in RegionTypes]: number;\n};\n"],"names":["keys","polite","assertive","elements","liveRegions","renderTimer","Alert","forwardRef","forwardedRef","children","type","props","ownRef","useRef","ref","useForkedRef","child","useMemo","React","useMirrorEffects","displayName","propTypes","PropTypes","node","oneOf","createMirror","doc","key","mount","element","renderAlerts","createElement","setAttribute","body","appendChild","update","unmount","window","clearTimeout","setTimeout","Object","forEach","elementType","container","render","VisuallyHidden","role","map","cloneElement","prevType","usePrevious","mirror","mounted","useEffect","ownerDocument","getOwnerDocument","current","document"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;;;;AAIA,IAAIA,IAAI,GAAe;AACrBC,EAAAA,MAAM,EAAE,CAAC,CADY;AAErBC,EAAAA,SAAS,EAAE,CAAC;AAFS,CAAvB;AAKA,IAAIC,QAAQ,GAAiB;AAC3BF,EAAAA,MAAM,EAAE,EADmB;AAE3BC,EAAAA,SAAS,EAAE;AAFgB,CAA7B;AAKA,IAAIE,WAAW,GAAmB;AAChCH,EAAAA,MAAM,EAAE,IADwB;AAEhCC,EAAAA,SAAS,EAAE;AAFqB,CAAlC;AAKA,IAAIG,WAAJ;;AAIA;;;;;;;;;;IASaC,KAAK,gBAAGC,gBAAU,CAA6B,SAASD,KAAT,OAE1DE,YAF0D;MACxDC,gBAAAA;uBAAUC;MAAAA,8BAAO;MAAaC;;AAGhC,MAAMC,MAAM,GAAGC,YAAM,CAAC,IAAD,CAArB;AACA,MAAMC,GAAG,GAAGC,kBAAY,CAACP,YAAD,EAAeI,MAAf,CAAxB;AACA,MAAMI,KAAK,GAAGC,aAAO,CACnB;AAAA,WACEC,4BAAA,MAAA,oBAASP;AAAOG,MAAAA,GAAG,EAAEA;;MAArB,EACGL,QADH,CADF;AAAA,GADmB;AAOnB,GAACA,QAAD,EAAWE,KAAX,CAPmB,CAArB;AASAQ,EAAAA,gBAAgB,CAACT,IAAD,EAAOM,KAAP,EAAcJ,MAAd,CAAhB;AAEA,SAAOI,KAAP;AACD,CAlB8B;;AAkClB;AACXV,EAAAA,KAAK,CAACc,WAAN,GAAoB,OAApB;AACAd,EAAAA,KAAK,CAACe,SAAN,GAAkB;AAChBZ,IAAAA,QAAQ,EAAEa,SAAS,CAACC,IADJ;AAEhBb,IAAAA,IAAI,eAAEY,SAAS,CAACE,KAAV,CAAgB,CAAC,WAAD,EAAc,QAAd,CAAhB;AAFU,GAAlB;AAID;;AAMD,SAASC,YAAT,CAAsBf,IAAtB,EAAoDgB,GAApD;AACE,MAAIC,GAAG,GAAG,EAAE3B,IAAI,CAACU,IAAD,CAAhB;;AAEA,MAAIkB,KAAK,GAAG,SAARA,KAAQ,CAACC,OAAD;AACV,QAAIzB,WAAW,CAACM,IAAD,CAAf,EAAuB;AACrBP,MAAAA,QAAQ,CAACO,IAAD,CAAR,CAAeiB,GAAf,IAAsBE,OAAtB;AACAC,MAAAA,YAAY;AACb,KAHD,MAGO;AACL,UAAIP,IAAI,GAAGG,GAAG,CAACK,aAAJ,CAAkB,KAAlB,CAAX;AACAR,MAAAA,IAAI,CAACS,YAAL,sBAAqCtB,IAArC,EAA6C,MAA7C;AACAN,MAAAA,WAAW,CAACM,IAAD,CAAX,GAAoBa,IAApB;AACAG,MAAAA,GAAG,CAACO,IAAJ,CAASC,WAAT,CAAqB9B,WAAW,CAACM,IAAD,CAAhC;AACAkB,MAAAA,KAAK,CAACC,OAAD,CAAL;AACD;AACF,GAXD;;AAaA,MAAIM,MAAM,GAAG,SAATA,MAAS,CAACN,OAAD;AACX1B,IAAAA,QAAQ,CAACO,IAAD,CAAR,CAAeiB,GAAf,IAAsBE,OAAtB;AACAC,IAAAA,YAAY;AACb,GAHD;;AAKA,MAAIM,OAAO,GAAG,SAAVA,OAAU;AACZ,WAAOjC,QAAQ,CAACO,IAAD,CAAR,CAAeiB,GAAf,CAAP;AACAG,IAAAA,YAAY;AACb,GAHD;;AAKA,SAAO;AAAEF,IAAAA,KAAK,EAALA,KAAF;AAASO,IAAAA,MAAM,EAANA,MAAT;AAAiBC,IAAAA,OAAO,EAAPA;AAAjB,GAAP;AACD;;AAED,SAASN,YAAT;AACE,MAAIzB,WAAW,IAAI,IAAnB,EAAyB;AACvBgC,IAAAA,MAAM,CAACC,YAAP,CAAoBjC,WAApB;AACD;;AACDA,EAAAA,WAAW,GAAGgC,MAAM,CAACE,UAAP,CAAkB;AAC9BC,IAAAA,MAAM,CAACxC,IAAP,CAAYG,QAAZ,EAAsBsC,OAAtB,CAA8B,UAAAC,WAAW;AACvC,UAAIhC,IAAI,GAAgBgC,WAAxB;AACA,UAAIC,SAAS,GAAGvC,WAAW,CAACM,IAAD,CAA3B;;AACA,UAAIiC,SAAJ,EAAe;AACbC,QAAAA,eAAM,CACJ1B,4BAAA,CAAC2B,cAAD,MAAA,EACE3B,4BAAA,MAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA4B,UAAAA,IAAI,EAAEpC,IAAI,KAAK,WAAT,GAAuB,OAAvB,GAAiC;uBAC5BA;SATb,EAWG8B,MAAM,CAACxC,IAAP,CAAYG,QAAQ,CAACO,IAAD,CAApB,EAA4BqC,GAA5B,CAAgC,UAAApB,GAAG;AAAA,iBAClCT,cAAK,CAAC8B,YAAN,CAAmB7C,QAAQ,CAACO,IAAD,CAAR,CAAeiB,GAAf,CAAnB,EAAwC;AACtCA,YAAAA,GAAG,EAAHA,GADsC;AAEtCb,YAAAA,GAAG,EAAE;AAFiC,WAAxC,CADkC;AAAA,SAAnC,CAXH,CADF,CADI,EAqBJV,WAAW,CAACM,IAAD,CArBP,CAAN;AAuBD;AACF,KA5BD;AA6BD,GA9Ba,EA8BX,GA9BW,CAAd;AA+BD;;AAED,SAASS,gBAAT,CACET,IADF,EAEEmB,OAFF,EAGEf,GAHF;AAKE,MAAMmC,QAAQ,GAAGC,iBAAW,CAAcxC,IAAd,CAA5B;AACA,MAAMyC,MAAM,GAAGtC,YAAM,CAAgB,IAAhB,CAArB;AACA,MAAMuC,OAAO,GAAGvC,YAAM,CAAC,KAAD,CAAtB;AACAwC,EAAAA,eAAS,CAAC;AACR,QAAMC,aAAa,GAAGC,sBAAgB,CAACzC,GAAG,CAAC0C,OAAL,CAAhB,IAAiCC,QAAvD;;AACA,QAAI,CAACL,OAAO,CAACI,OAAb,EAAsB;AACpBJ,MAAAA,OAAO,CAACI,OAAR,GAAkB,IAAlB;AACAL,MAAAA,MAAM,CAACK,OAAP,GAAiB/B,YAAY,CAACf,IAAD,EAAO4C,aAAP,CAA7B;AACAH,MAAAA,MAAM,CAACK,OAAP,CAAe5B,KAAf,CAAqBC,OAArB;AACD,KAJD,MAIO,IAAIoB,QAAQ,KAAKvC,IAAjB,EAAuB;AAC5ByC,MAAAA,MAAM,CAACK,OAAP,IAAkBL,MAAM,CAACK,OAAP,CAAepB,OAAf,EAAlB;AACAe,MAAAA,MAAM,CAACK,OAAP,GAAiB/B,YAAY,CAACf,IAAD,EAAO4C,aAAP,CAA7B;AACAH,MAAAA,MAAM,CAACK,OAAP,CAAe5B,KAAf,CAAqBC,OAArB;AACD,KAJM,MAIA;AACLsB,MAAAA,MAAM,CAACK,OAAP,IAAkBL,MAAM,CAACK,OAAP,CAAerB,MAAf,CAAsBN,OAAtB,CAAlB;AACD;;AAEF,GAdQ,EAcN,CAACA,OAAD,EAAUnB,IAAV,EAAgBuC,QAAhB,CAdM,CAAT;AAgBAI,EAAAA,eAAS,CAAC;AACR,WAAO;AACLF,MAAAA,MAAM,CAACK,OAAP,IAAkBL,MAAM,CAACK,OAAP,CAAepB,OAAf,EAAlB;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAKD;;;;;"}