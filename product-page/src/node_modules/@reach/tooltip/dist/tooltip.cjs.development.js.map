{"version":3,"file":"tooltip.cjs.development.js","sources":["../src/index.tsx"],"sourcesContent":["/**\n * Welcome to @reach/tooltip!\n *\n * When the user's mouse or focus rests on an element, a non-interactive popup\n * is displayed near it.\n *\n * Quick definitions:\n *\n * - \"on rest\" or \"rested on\": describes when the element receives mouse hover\n *   after a short delay (and hopefully soon, touch longpress).\n *\n * - \"activation\": describes a mouse click, keyboard enter, or keyboard space.\n *\n * Only one tooltip can be visible at a time, so we use a global state chart to\n * describe the various states and transitions between states that are\n * possible. With all the timeouts involved with tooltips it's important to\n * \"make impossible states impossible\" with a state machine.\n *\n * It's also okay to use these module globals because you don't server render\n * tooltips. None of the state is changed outside of user events.\n *\n * There are a few features that are important to understand.\n *\n * 1. Tooltips don't show up until the user has rested on one, we don't\n *    want tooltips popupping up as you move your mouse around the page.\n *\n * 2. Once any tooltip becomes visible, other tooltips nearby should skip\n *    resting and display immediately.\n *\n * 3. Tooltips stick around for a little bit after blur/mouseleave.\n *\n * TODO: Research longpress tooltips on Android, iOS\n *       - Probably want to position it by default above, since your thumb is\n *         below and would cover it\n *       - I'm thinking after longpress, display the tooltip and cancel any\n *         click events. Then on touchend, so they can read it display the\n *         tooltip for a little while longer in case their hand was\n *         obstructing the tooltip.\n *\n * @see Docs     https://reacttraining.com/reach-ui/tooltip\n * @see Source   https://github.com/reach/reach-ui/tree/master/packages/tooltip\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#tooltip\n */\n\nimport React, {\n  Children,\n  cloneElement,\n  Fragment,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useId } from \"@reach/auto-id\";\nimport {\n  checkStyles,\n  forwardRefWithAs,\n  getOwnerDocument,\n  getDocumentDimensions,\n  makeId,\n  useForkedRef,\n  wrapEvent,\n  warning,\n} from \"@reach/utils\";\nimport Portal from \"@reach/portal\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport { useRect } from \"@reach/rect\";\nimport PropTypes from \"prop-types\";\n\nexport const MOUSE_REST_TIMEOUT = 100;\nexport const LEAVE_TIMEOUT = 500;\n\n////////////////////////////////////////////////////////////////////////////////\n// States\n\n// Nothing goin' on\nconst IDLE = \"IDLE\";\n\n// We're considering showing the tooltip, but we're gonna wait a sec\nconst FOCUSED = \"FOCUSED\";\n\n// It's on!\nconst VISIBLE = \"VISIBLE\";\n\n// Focus has left, but we want to keep it visible for a sec\nconst LEAVING_VISIBLE = \"LEAVING_VISIBLE\";\n\n// The user clicked the tool, so we want to hide the thing, we can't just use\n// IDLE because we need to ignore mousemove, etc.\nconst DISMISSED = \"DISMISSED\";\n\n////////////////////////////////////////////////////////////////////////////////\n// Events\n\nconst BLUR = \"BLUR\";\nconst FOCUS = \"FOCUS\";\nconst GLOBAL_MOUSE_MOVE = \"GLOBAL_MOUSE_MOVE\";\nconst MOUSE_DOWN = \"MOUSE_DOWN\";\nconst MOUSE_ENTER = \"MOUSE_ENTER\";\nconst MOUSE_LEAVE = \"MOUSE_LEAVE\";\nconst MOUSE_MOVE = \"MOUSE_MOVE\";\nconst REST = \"REST\";\nconst SELECT_WITH_KEYBOARD = \"SELECT_WITH_KEYBOARD\";\nconst TIME_COMPLETE = \"TIME_COMPLETE\";\n\nconst chart: StateChart = {\n  initial: IDLE,\n  states: {\n    [IDLE]: {\n      enter: clearContextId,\n      on: {\n        [MOUSE_ENTER]: FOCUSED,\n        [FOCUS]: VISIBLE,\n      },\n    },\n    [FOCUSED]: {\n      enter: startRestTimer,\n      leave: clearRestTimer,\n      on: {\n        [MOUSE_MOVE]: FOCUSED,\n        [MOUSE_LEAVE]: IDLE,\n        [MOUSE_DOWN]: DISMISSED,\n        [BLUR]: IDLE,\n        [REST]: VISIBLE,\n      },\n    },\n    [VISIBLE]: {\n      on: {\n        [FOCUS]: FOCUSED,\n        [MOUSE_ENTER]: FOCUSED,\n        [MOUSE_LEAVE]: LEAVING_VISIBLE,\n        [BLUR]: LEAVING_VISIBLE,\n        [MOUSE_DOWN]: DISMISSED,\n        [SELECT_WITH_KEYBOARD]: DISMISSED,\n        [GLOBAL_MOUSE_MOVE]: LEAVING_VISIBLE,\n      },\n    },\n    [LEAVING_VISIBLE]: {\n      enter: startLeavingVisibleTimer,\n      leave: () => {\n        clearLeavingVisibleTimer();\n        clearContextId();\n      },\n      on: {\n        [MOUSE_ENTER]: VISIBLE,\n        [FOCUS]: VISIBLE,\n        [TIME_COMPLETE]: IDLE,\n      },\n    },\n    [DISMISSED]: {\n      leave: () => {\n        // allows us to come on back later w/o entering something else first\n        context.id = null;\n      },\n      on: {\n        [MOUSE_LEAVE]: IDLE,\n        [BLUR]: IDLE,\n      },\n    },\n  },\n};\n\n/*\n * Chart context allows us to persist some data around, in Tooltip all we use\n * is the id of the current tooltip being interacted with.\n */\nlet context: StateContext = { id: null };\nlet state = chart.initial;\n\n////////////////////////////////////////////////////////////////////////////////\n// Subscriptions:\n//\n// We could require apps to render a <TooltipProvider> around the app and use\n// React context to notify Tooltips of changes to our state machine, instead\n// we manage subscriptions ourselves and simplify the Tooltip API.\n//\n// Maybe if default context could take a hook (instead of just a static value)\n// that was rendered at the root for us, that'd be cool! But it doesn't.\nlet subscriptions: Function[] = [];\n\nfunction subscribe(fn: Function) {\n  subscriptions.push(fn);\n  return () => {\n    subscriptions.splice(subscriptions.indexOf(fn), 1);\n  };\n}\n\nfunction notify() {\n  subscriptions.forEach((fn) => fn(state, context));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Timeouts:\n\n// Manages when the user \"rests\" on an element. Keeps the interface from being\n// flashing tooltips all the time as the user moves the mouse around the screen.\nlet restTimeout: number;\n\nfunction startRestTimer() {\n  window.clearTimeout(restTimeout);\n  restTimeout = window.setTimeout(() => transition(REST), MOUSE_REST_TIMEOUT);\n}\n\nfunction clearRestTimer() {\n  window.clearTimeout(restTimeout);\n}\n\n// Manages the delay to hide the tooltip after rest leaves.\nlet leavingVisibleTimer: number;\n\nfunction startLeavingVisibleTimer() {\n  window.clearTimeout(leavingVisibleTimer);\n  leavingVisibleTimer = window.setTimeout(\n    () => transition(TIME_COMPLETE),\n    LEAVE_TIMEOUT\n  );\n}\n\nfunction clearLeavingVisibleTimer() {\n  window.clearTimeout(leavingVisibleTimer);\n}\n\n// allows us to come on back later w/o entering something else first after the\n// user leaves or dismisses\nfunction clearContextId() {\n  context.id = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * useTooltip\n *\n * @param params\n */\nexport function useTooltip<T extends HTMLElement>({\n  id: idProp,\n  onMouseEnter,\n  onMouseMove,\n  onMouseLeave,\n  onFocus,\n  onBlur,\n  onKeyDown,\n  onMouseDown,\n  ref: forwardedRef,\n  DEBUG_STYLE,\n}: {\n  ref?: React.Ref<any>;\n  DEBUG_STYLE?: boolean;\n} & React.HTMLAttributes<T> = {}): [TriggerParams, TooltipParams, boolean] {\n  let id = String(useId(idProp));\n\n  let [isVisible, setIsVisible] = useState(\n    DEBUG_STYLE\n      ? true\n      : id === null\n      ? false\n      : context.id === id && state === VISIBLE\n  );\n\n  // hopefully they always pass a ref if they ever pass one\n  let ownRef = useRef<HTMLDivElement | null>(null);\n\n  let ref = useForkedRef(forwardedRef as any, ownRef); // TODO: Fix in utils\n  let triggerRect = useRect(ownRef, isVisible);\n\n  useEffect(() => {\n    return subscribe(() => {\n      if (\n        context.id === id &&\n        (state === VISIBLE || state === LEAVING_VISIBLE)\n      ) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    });\n  }, [id]);\n\n  useEffect(() => checkStyles(\"tooltip\"), []);\n\n  useEffect(() => {\n    let ownerDocument = getOwnerDocument(ownRef.current) || document;\n    function listener(event: KeyboardEvent) {\n      if (\n        (event.key === \"Escape\" || event.key === \"Esc\") &&\n        state === VISIBLE\n      ) {\n        transition(SELECT_WITH_KEYBOARD);\n      }\n    }\n    ownerDocument.addEventListener(\"keydown\", listener);\n    return () => ownerDocument.removeEventListener(\"keydown\", listener);\n  }, []);\n\n  function handleMouseEnter() {\n    transition(MOUSE_ENTER, { id });\n  }\n\n  function handleMouseMove() {\n    transition(MOUSE_MOVE, { id });\n  }\n\n  function handleFocus() {\n    // @ts-ignore\n    if (window.__REACH_DISABLE_TOOLTIPS) {\n      return;\n    }\n    transition(FOCUS, { id });\n  }\n\n  function handleMouseLeave() {\n    transition(MOUSE_LEAVE);\n  }\n\n  function handleBlur() {\n    // Allow quick click from one tool to another\n    if (context.id !== id) return;\n    transition(BLUR);\n  }\n\n  function handleMouseDown() {\n    // Allow quick click from one tool to another\n    if (context.id !== id) return;\n    transition(MOUSE_DOWN);\n  }\n\n  function handleKeyDown(event: React.KeyboardEvent<T>) {\n    if (event.key === \"Enter\" || event.key === \" \") {\n      transition(SELECT_WITH_KEYBOARD);\n    }\n  }\n\n  let trigger: TriggerParams = {\n    // The element that triggers the tooltip references the tooltip element with\n    // `aria-describedby`.\n    // https://www.w3.org/TR/wai-aria-practices-1.2/#tooltip\n    \"aria-describedby\": isVisible ? makeId(\"tooltip\", id) : undefined,\n    \"data-reach-tooltip-trigger\": \"\",\n    ref,\n    onMouseEnter: wrapEvent(onMouseEnter, handleMouseEnter),\n    onMouseMove: wrapEvent(onMouseMove, handleMouseMove),\n    onFocus: wrapEvent(onFocus, handleFocus),\n    onBlur: wrapEvent(onBlur, handleBlur),\n    onMouseLeave: wrapEvent(onMouseLeave, handleMouseLeave),\n    onKeyDown: wrapEvent(onKeyDown, handleKeyDown),\n    onMouseDown: wrapEvent(onMouseDown, handleMouseDown),\n  };\n\n  let tooltip: TooltipParams = {\n    id,\n    triggerRect,\n    isVisible,\n  };\n\n  return [trigger, tooltip, isVisible];\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Tooltip\n *\n * @see Docs https://reacttraining.com/reach-ui/tooltip#tooltip\n */\nexport const Tooltip = forwardRefWithAs<TooltipProps, \"div\">(function (\n  {\n    children,\n    label,\n    // TODO: Remove `ariaLabel` prop in 1.0 and just use `aria-label`\n    ariaLabel: DEPRECATED_ariaLabel,\n    id,\n    DEBUG_STYLE,\n    ...props\n  },\n  forwardedRef\n) {\n  let child = Children.only(children) as any;\n\n  warning(\n    !DEPRECATED_ariaLabel,\n    \"The `ariaLabel prop is deprecated and will be removed from @reach/tooltip in a future version. Please use `aria-label` instead.\"\n  );\n\n  // We need to pass some properties from the child into useTooltip\n  // to make sure users can maintain control over the trigger's ref and events\n  let [trigger, tooltip] = useTooltip({\n    id,\n    onMouseEnter: child.props.onMouseEnter,\n    onMouseMove: child.props.onMouseMove,\n    onMouseLeave: child.props.onMouseLeave,\n    onFocus: child.props.onFocus,\n    onBlur: child.props.onBlur,\n    onKeyDown: child.props.onKeyDown,\n    onMouseDown: child.props.onMouseDown,\n    ref: child.ref,\n    DEBUG_STYLE,\n  });\n  return (\n    <Fragment>\n      {cloneElement(child, trigger as any)}\n      <TooltipPopup\n        ref={forwardedRef}\n        label={label}\n        aria-label={DEPRECATED_ariaLabel}\n        {...tooltip}\n        {...props}\n      />\n    </Fragment>\n  );\n});\n\nexport type TooltipProps = {\n  children: React.ReactNode;\n  DEBUG_STYLE?: boolean;\n} & Omit<TooltipContentProps, \"triggerRect\" | \"isVisible\">;\n\nif (__DEV__) {\n  Tooltip.displayName = \"Tooltip\";\n  Tooltip.propTypes = {\n    children: PropTypes.node.isRequired,\n    label: PropTypes.node.isRequired,\n    ariaLabel: PropTypes.string,\n  };\n}\n\nexport default Tooltip;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * TooltipPopup\n *\n * @see Docs https://reacttraining.com/reach-ui/tooltip#tooltippopup\n */\nexport const TooltipPopup = forwardRefWithAs<TooltipPopupProps, \"div\">(\n  function TooltipPopup(\n    {\n      // could use children but we want to encourage simple strings\n      label,\n      // TODO: Remove `ariaLabel` prop in 1.0 and just use `aria-label`\n      ariaLabel: DEPRECATED_ariaLabel,\n      isVisible,\n      id,\n      ...props\n    },\n    forwardRef\n  ) {\n    return isVisible ? (\n      <Portal>\n        <TooltipContent\n          ref={forwardRef}\n          label={label}\n          aria-label={DEPRECATED_ariaLabel}\n          isVisible={isVisible}\n          {...props}\n          id={makeId(\"tooltip\", String(id))}\n        />\n      </Portal>\n    ) : null;\n  }\n);\n\nexport type TooltipPopupProps = {\n  children?: React.ReactNode;\n} & TooltipContentProps;\n\nif (__DEV__) {\n  TooltipPopup.displayName = \"TooltipPopup\";\n  TooltipPopup.propTypes = {\n    label: PropTypes.node.isRequired,\n    ariaLabel: PropTypes.string,\n    position: PropTypes.func,\n  };\n}\n\n/**\n * TooltipContent\n *\n * We need a separate component so that useRect works inside the portal.\n *\n * @see Docs https://reacttraining.com/reach-ui/tooltip#tooltipcontent\n */\nconst TooltipContent = forwardRefWithAs<TooltipContentProps, \"div\">(\n  function TooltipContent(\n    {\n      // TODO: Remove `ariaLabel` prop in 1.0 and just use `aria-label`\n      ariaLabel,\n      \"aria-label\": realAriaLabel,\n      as: Comp = \"div\",\n      id,\n      isVisible,\n      label,\n      position = positionDefault,\n      style,\n      triggerRect,\n      ...props\n    },\n    forwardedRef\n  ) {\n    // The element that serves as the tooltip container has role tooltip.\n    // https://www.w3.org/TR/wai-aria-practices-1.2/#tooltip\n    // When an app passes an `aria-label`, we actually want to implement\n    // `role=\"tooltip\"` on a visually hidden element inside of the trigger.\n    // In these cases we want the screen reader user to know both the content in\n    // the tooltip, but also the content in the badge. For screen reader users,\n    // the only content announced to them is whatever is in the tooltip.\n    let hasAriaLabel = (realAriaLabel || ariaLabel) != null;\n\n    let ownRef = useRef(null);\n    let ref = useForkedRef(forwardedRef, ownRef);\n    let tooltipRect = useRect(ownRef, isVisible);\n    return (\n      <Fragment>\n        <Comp\n          role={hasAriaLabel ? undefined : \"tooltip\"}\n          {...props}\n          ref={ref}\n          data-reach-tooltip=\"\"\n          id={hasAriaLabel ? undefined : id}\n          style={{\n            ...style,\n            ...getStyles(position, triggerRect as PRect, tooltipRect as PRect),\n          }}\n        >\n          {label}\n        </Comp>\n        {hasAriaLabel && (\n          <VisuallyHidden role=\"tooltip\" id={id}>\n            {realAriaLabel || ariaLabel}\n          </VisuallyHidden>\n        )}\n      </Fragment>\n    );\n  }\n);\n\nexport type TooltipContentProps = {\n  ariaLabel?: string;\n  position?: Position;\n  label: React.ReactNode;\n  isVisible?: boolean;\n  triggerRect: DOMRect | null;\n};\n\nif (__DEV__) {\n  TooltipContent.displayName = \"TooltipContent\";\n  TooltipContent.propTypes = {};\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// feels awkward when it's perfectly aligned w/ the trigger\nconst OFFSET = 8;\n\nfunction getStyles(\n  position: Position,\n  triggerRect: PRect,\n  tooltipRect: PRect\n): React.CSSProperties {\n  let haventMeasuredTooltipYet = !tooltipRect;\n  if (haventMeasuredTooltipYet) {\n    return { visibility: \"hidden\" };\n  }\n  return position(triggerRect, tooltipRect);\n}\n\nlet positionDefault: Position = (triggerRect, tooltipRect) => {\n  let { width: windowWidth, height: windowHeight } = getDocumentDimensions();\n  if (!triggerRect || !tooltipRect) {\n    return {};\n  }\n\n  let collisions = {\n    top: triggerRect.top - tooltipRect.height < 0,\n    right: windowWidth < triggerRect.left + tooltipRect.width,\n    bottom: windowHeight < triggerRect.bottom + tooltipRect.height + OFFSET,\n    left: triggerRect.left - tooltipRect.width < 0,\n  };\n\n  let directionRight = collisions.right && !collisions.left;\n  let directionUp = collisions.bottom && !collisions.top;\n\n  return {\n    left: directionRight\n      ? `${triggerRect.right - tooltipRect.width + window.pageXOffset}px`\n      : `${triggerRect.left + window.pageXOffset}px`,\n    top: directionUp\n      ? `${\n          triggerRect.top - OFFSET - tooltipRect.height + window.pageYOffset\n        }px`\n      : `${\n          triggerRect.top + OFFSET + triggerRect.height + window.pageYOffset\n        }px`,\n  };\n};\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Finds the next state from the current state + action. If the chart doesn't\n * describe that transition, it will throw.\n *\n * It also manages lifecycles of the machine, (enter/leave hooks on the state\n * chart)\n *\n * @param event\n * @param payload\n */\nconst transition: Transition = (event, payload) => {\n  let stateDef = chart.states[state];\n  let nextState = stateDef && stateDef.on && stateDef.on[event];\n\n  // Really useful for debugging\n  // console.log({ event, state, nextState, contextId: context.id });\n  // !nextState && console.log('no transition taken')\n\n  if (!nextState) {\n    return;\n  }\n\n  if (stateDef && stateDef.leave) {\n    stateDef.leave();\n  }\n\n  if (payload) {\n    context = payload;\n  }\n\n  let nextDef = chart.states[nextState];\n  if (nextDef && nextDef.enter) {\n    nextDef.enter();\n  }\n\n  state = nextState;\n  notify();\n};\n\n////////////////////////////////////////////////////////////////////////////////\n// TYPES\n\nexport interface TriggerParams {\n  \"aria-describedby\"?: string | undefined;\n  \"data-reach-tooltip-trigger\": string;\n  ref: React.Ref<any>;\n  onMouseEnter: React.ReactEventHandler;\n  onMouseMove: React.ReactEventHandler;\n  onFocus: React.ReactEventHandler;\n  onBlur: React.ReactEventHandler;\n  onMouseLeave: React.ReactEventHandler;\n  onKeyDown: React.ReactEventHandler;\n  onMouseDown: React.ReactEventHandler;\n}\n\nexport interface TooltipParams {\n  id: string;\n  triggerRect: DOMRect | null;\n  isVisible: boolean;\n}\n\ntype Transition = (event: MachineEventType, payload?: any) => any;\n\ntype State = \"IDLE\" | \"FOCUSED\" | \"VISIBLE\" | \"LEAVING_VISIBLE\" | \"DISMISSED\";\n\ntype MachineEventType =\n  | \"BLUR\"\n  | \"FOCUS\"\n  | \"GLOBAL_MOUSE_MOVE\"\n  | \"MOUSE_DOWN\"\n  | \"MOUSE_ENTER\"\n  | \"MOUSE_LEAVE\"\n  | \"MOUSE_MOVE\"\n  | \"REST\"\n  | \"SELECT_WITH_KEYBOARD\"\n  | \"TIME_COMPLETE\";\n\ninterface StateChart {\n  initial: State;\n  states: {\n    [key in State]?: {\n      enter?: Function;\n      leave?: Function;\n      on: {\n        [key in MachineEventType]?: State;\n      };\n    };\n  };\n}\n\ntype StateContext = {\n  id?: string | null;\n};\n\nexport type Position = (\n  targetRect?: PRect | null,\n  popoverRect?: PRect | null\n) => React.CSSProperties;\n\ntype PRect = Partial<DOMRect> & {\n  readonly bottom: number;\n  readonly height: number;\n  readonly left: number;\n  readonly right: number;\n  readonly top: number;\n  readonly width: number;\n};\n"],"names":["MOUSE_REST_TIMEOUT","LEAVE_TIMEOUT","IDLE","FOCUSED","VISIBLE","LEAVING_VISIBLE","DISMISSED","BLUR","FOCUS","GLOBAL_MOUSE_MOVE","MOUSE_DOWN","MOUSE_ENTER","MOUSE_LEAVE","MOUSE_MOVE","REST","SELECT_WITH_KEYBOARD","TIME_COMPLETE","chart","initial","states","enter","clearContextId","on","startRestTimer","leave","clearRestTimer","startLeavingVisibleTimer","clearLeavingVisibleTimer","context","id","state","subscriptions","subscribe","fn","push","splice","indexOf","notify","forEach","restTimeout","window","clearTimeout","setTimeout","transition","leavingVisibleTimer","useTooltip","idProp","onMouseEnter","onMouseMove","onMouseLeave","onFocus","onBlur","onKeyDown","onMouseDown","forwardedRef","ref","DEBUG_STYLE","String","useId","useState","isVisible","setIsVisible","ownRef","useRef","useForkedRef","triggerRect","useRect","useEffect","checkStyles","ownerDocument","getOwnerDocument","current","document","listener","event","key","addEventListener","removeEventListener","handleMouseEnter","handleMouseMove","handleFocus","__REACH_DISABLE_TOOLTIPS","handleMouseLeave","handleBlur","handleMouseDown","handleKeyDown","trigger","makeId","undefined","wrapEvent","tooltip","Tooltip","forwardRefWithAs","children","label","DEPRECATED_ariaLabel","ariaLabel","props","child","Children","only","warning","React","Fragment","cloneElement","TooltipPopup","displayName","propTypes","PropTypes","node","isRequired","string","forwardRef","Portal","TooltipContent","position","func","realAriaLabel","as","Comp","positionDefault","style","hasAriaLabel","tooltipRect","role","getStyles","VisuallyHidden","OFFSET","haventMeasuredTooltipYet","visibility","getDocumentDimensions","windowWidth","width","windowHeight","height","collisions","top","right","left","bottom","directionRight","directionUp","pageXOffset","pageYOffset","payload","stateDef","nextState","nextDef"],"mappings":"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"}