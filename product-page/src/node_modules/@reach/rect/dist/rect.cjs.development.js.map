{"version":3,"file":"rect.cjs.development.js","sources":["../src/index.tsx"],"sourcesContent":["/**\n * Welcome to @reach/rect!\n *\n * Measures DOM elements (aka. bounding client rect).\n *\n * @see getBoundingClientRect https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n * @see Docs                  https://reacttraining.com/reach-ui/rect\n * @see Source                https://github.com/reach/reach-ui/tree/main/packages/rect\n */\n\nimport React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport observeRect from \"@reach/observe-rect\";\nimport { useIsomorphicLayoutEffect } from \"@reach/utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Rect\n *\n * @param props\n */\nexport const Rect: React.FC<RectProps> = ({\n  onChange,\n  observe = true,\n  children,\n}) => {\n  const ref = useRef<HTMLElement | null>(null);\n  const rect = useRect(ref, observe, onChange);\n  return children({ ref, rect });\n};\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/rect#rect-props\n */\nexport type RectProps = {\n  /**\n   * Tells `Rect` to observe the position of the node or not. While observing,\n   * the `children` render prop may call back very quickly (especially while\n   * scrolling) so it can be important for performance to avoid observing when\n   * you don't need to.\n   *\n   * This is typically used for elements that pop over other elements (like a\n   * dropdown menu), so you don't need to observe all the time, only when the\n   * popup is active.\n   *\n   * Pass `true` to observe, `false` to ignore.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/rect#rect-observe\n   */\n  observe?: boolean;\n  /**\n   * Calls back whenever the `rect` of the element changes.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/rect#rect-onchange\n   */\n  onChange?: (rect: PRect) => void;\n  /**\n   * A function that calls back to you with a `ref` to place on an element and\n   * the `rect` measurements of the dom node.\n   *\n   * **Note**: On the first render `rect` will be `undefined` because we can't\n   * measure a node that has not yet been rendered. Make sure your code accounts\n   * for this.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/rect#rect-onchange\n   */\n  children(args: {\n    rect: PRect | null;\n    ref: React.RefObject<any>;\n  }): JSX.Element;\n};\n\nif (__DEV__) {\n  Rect.displayName = \"Rect\";\n  Rect.propTypes = {\n    children: PropTypes.func.isRequired,\n    observe: PropTypes.bool,\n    onChange: PropTypes.func,\n  };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * useRect\n *\n * @param nodeRef\n * @param observe\n * @param onChange\n */\nexport function useRect<T extends Element = HTMLElement>(\n  nodeRef: React.RefObject<T | undefined | null>,\n  observe: boolean = true,\n  onChange?: (rect: DOMRect) => void\n): null | DOMRect {\n  let [element, setElement] = useState(nodeRef.current);\n  let initialRectIsSet = useRef(false);\n  let initialRefIsSet = useRef(false);\n  let [rect, setRect] = useState<DOMRect | null>(null);\n  let onChangeRef = useRef<typeof onChange>();\n\n  useIsomorphicLayoutEffect(() => {\n    onChangeRef.current = onChange;\n    if (nodeRef.current !== element) {\n      setElement(nodeRef.current);\n    }\n  });\n\n  useIsomorphicLayoutEffect(() => {\n    if (element && !initialRectIsSet.current) {\n      initialRectIsSet.current = true;\n      setRect(element.getBoundingClientRect());\n    }\n  }, [element]);\n\n  useIsomorphicLayoutEffect(() => {\n    let observer: ReturnType<typeof observeRect>;\n    let elem = element;\n\n    // State initializes before refs are placed, meaning the element state will\n    // be undefined on the first render. We still want the rect on the first\n    // render, so initially we'll use the nodeRef that was passed instead of\n    // state for our measurements.\n    if (!initialRefIsSet.current) {\n      initialRefIsSet.current = true;\n      elem = nodeRef.current;\n    }\n\n    if (!elem) {\n      if (__DEV__) {\n        console.warn(\"You need to place the ref\");\n      }\n      return cleanup;\n    }\n\n    observer = observeRect(elem, (rect) => {\n      onChangeRef.current && onChangeRef.current(rect);\n      setRect(rect);\n    });\n\n    observe && observer.observe();\n    return cleanup;\n\n    function cleanup() {\n      observer && observer.unobserve();\n    }\n  }, [observe, element]);\n\n  return rect;\n}\n\nexport default Rect;\n\nexport type PRect = Partial<DOMRect> & {\n  readonly bottom: number;\n  readonly height: number;\n  readonly left: number;\n  readonly right: number;\n  readonly top: number;\n  readonly width: number;\n};\n"],"names":["Rect","onChange","observe","children","ref","useRef","rect","useRect","displayName","propTypes","PropTypes","func","isRequired","bool","nodeRef","useState","current","element","setElement","initialRectIsSet","initialRefIsSet","setRect","onChangeRef","useIsomorphicLayoutEffect","getBoundingClientRect","observer","elem","console","warn","cleanup","observeRect","unobserve"],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;AAiBA;;;;;;IAKaA,IAAI,GAAwB,SAA5BA,IAA4B;MACvCC,gBAAAA;0BACAC;MAAAA,oCAAU;MACVC,gBAAAA;AAEA,MAAMC,GAAG,GAAGC,YAAM,CAAqB,IAArB,CAAlB;AACA,MAAMC,IAAI,GAAGC,OAAO,CAACH,GAAD,EAAMF,OAAN,EAAeD,QAAf,CAApB;AACA,SAAOE,QAAQ,CAAC;AAAEC,IAAAA,GAAG,EAAHA,GAAF;AAAOE,IAAAA,IAAI,EAAJA;AAAP,GAAD,CAAf;AACD;;AA2CY;AACXN,EAAAA,IAAI,CAACQ,WAAL,GAAmB,MAAnB;AACAR,EAAAA,IAAI,CAACS,SAAL,GAAiB;AACfN,IAAAA,QAAQ,EAAEO,SAAS,CAACC,IAAV,CAAeC,UADV;AAEfV,IAAAA,OAAO,EAAEQ,SAAS,CAACG,IAFJ;AAGfZ,IAAAA,QAAQ,EAAES,SAAS,CAACC;AAHL,GAAjB;AAKD;;AAID;;;;;;;;;SAOgBJ,QACdO,SACAZ,SACAD;MADAC;AAAAA,IAAAA,UAAmB;;;kBAGSa,cAAQ,CAACD,OAAO,CAACE,OAAT;MAA/BC;MAASC;;AACd,MAAIC,gBAAgB,GAAGd,YAAM,CAAC,KAAD,CAA7B;AACA,MAAIe,eAAe,GAAGf,YAAM,CAAC,KAAD,CAA5B;;mBACsBU,cAAQ,CAAiB,IAAjB;MAAzBT;MAAMe;;AACX,MAAIC,WAAW,GAAGjB,YAAM,EAAxB;AAEAkB,EAAAA,+BAAyB,CAAC;AACxBD,IAAAA,WAAW,CAACN,OAAZ,GAAsBf,QAAtB;;AACA,QAAIa,OAAO,CAACE,OAAR,KAAoBC,OAAxB,EAAiC;AAC/BC,MAAAA,UAAU,CAACJ,OAAO,CAACE,OAAT,CAAV;AACD;AACF,GALwB,CAAzB;AAOAO,EAAAA,+BAAyB,CAAC;AACxB,QAAIN,OAAO,IAAI,CAACE,gBAAgB,CAACH,OAAjC,EAA0C;AACxCG,MAAAA,gBAAgB,CAACH,OAAjB,GAA2B,IAA3B;AACAK,MAAAA,OAAO,CAACJ,OAAO,CAACO,qBAAR,EAAD,CAAP;AACD;AACF,GALwB,EAKtB,CAACP,OAAD,CALsB,CAAzB;AAOAM,EAAAA,+BAAyB,CAAC;AACxB,QAAIE,QAAJ;AACA,QAAIC,IAAI,GAAGT,OAAX;AAGA;AACA;AACA;;AACA,QAAI,CAACG,eAAe,CAACJ,OAArB,EAA8B;AAC5BI,MAAAA,eAAe,CAACJ,OAAhB,GAA0B,IAA1B;AACAU,MAAAA,IAAI,GAAGZ,OAAO,CAACE,OAAf;AACD;;AAED,QAAI,CAACU,IAAL,EAAW;AACT,MAAa;AACXC,QAAAA,OAAO,CAACC,IAAR,CAAa,2BAAb;AACD;;AACD,aAAOC,OAAP;AACD;;AAEDJ,IAAAA,QAAQ,GAAGK,WAAW,CAACJ,IAAD,EAAO,UAACpB,IAAD;AAC3BgB,MAAAA,WAAW,CAACN,OAAZ,IAAuBM,WAAW,CAACN,OAAZ,CAAoBV,IAApB,CAAvB;AACAe,MAAAA,OAAO,CAACf,IAAD,CAAP;AACD,KAHqB,CAAtB;AAKAJ,IAAAA,OAAO,IAAIuB,QAAQ,CAACvB,OAAT,EAAX;AACA,WAAO2B,OAAP;;AAEA,aAASA,OAAT;AACEJ,MAAAA,QAAQ,IAAIA,QAAQ,CAACM,SAAT,EAAZ;AACD;AACF,GA/BwB,EA+BtB,CAAC7B,OAAD,EAAUe,OAAV,CA/BsB,CAAzB;AAiCA,SAAOX,IAAP;AACD;;;;;;"}