function h() {
  return (h = Object.assign || function(a) {
    var b, c, d;
    for (b = 1; b < arguments.length; b++) {
      c = arguments[b];
      for (d in c) {
        Object.prototype.hasOwnProperty.call(c, d) && (a[d] = c[d]);
      }
    }
    return a;
  }).apply(this, arguments);
}

function l(a) {
  return "string" == typeof a ? new GraphQLError(a) : "object" == typeof a && a.message ? new GraphQLError(a.message, a.nodes, a.source, a.positions, a.path, a, a.extensions || {}) : a;
}

function n() {
  return this.message;
}

function u(a) {
  q.clear();
  return function t(a) {
    var b, c, d, e, f, g;
    if (null === a || q.has(a)) {
      return "null";
    }
    if ("object" != typeof a) {
      return JSON.stringify(a) || "";
    }
    if (a.toJSON) {
      return t(a.toJSON());
    }
    if (Array.isArray(a)) {
      for (b = "[", c = 0, d = a.length; c < d; c++) {
        0 < c && (b += ",");
        b += 0 < (e = t(a[c])).length ? e : "null";
      }
      return b + "]";
    }
    if (!(b = Object.keys(a).sort()).length && a.constructor && a.constructor !== Object) {
      return b = r.get(a) || Math.random().toString(36).slice(2), r.set(a, b), '{"__key":"' + b + '"}';
    }
    q.add(a);
    c = "{";
    d = 0;
    for (e = b.length; d < e; d++) {
      (g = t(a[f = b[d]])) && (1 < c.length && (c += ","), c += t(f) + ":" + g);
    }
    q.delete(a);
    return c + "}";
  }(a);
}

function v(a, b, c) {
  return {
    operation: a,
    data: b.data,
    error: Array.isArray(b.errors) ? new p({
      graphQLErrors: b.errors,
      response: c
    }) : void 0,
    extensions: "object" == typeof b.extensions && b.extensions || void 0
  };
}

function w(a, b, c) {
  return {
    operation: a,
    data: void 0,
    error: new p({
      networkError: b,
      response: c
    }),
    extensions: void 0
  };
}

function makeFetchBody(a) {
  var c, d, e, f, b = print(a.query);
  a: {
    for (d = 0, e = (c = a.query).definitions.length; d < e; d++) {
      if ((f = c.definitions[d]).kind === Kind.OPERATION_DEFINITION && f.name) {
        c = f.name.value;
        break a;
      }
    }
    c = void 0;
  }
  return {
    query: b,
    operationName: c,
    variables: a.variables || void 0,
    extensions: void 0
  };
}

function makeFetchURL(a, b) {
  var c = a.context.url;
  if ("query" !== a.operationName || !a.context.preferGetMethod || !b) {
    return c;
  }
  a = [];
  b.operationName && a.push("operationName=" + encodeURIComponent(b.operationName));
  b.query && a.push("query=" + encodeURIComponent(b.query.replace(/([\s,]|#[^\n\r]+)+/g, " ").trim()));
  b.variables && a.push("variables=" + encodeURIComponent(u(b.variables)));
  b.extensions && a.push("extensions=" + encodeURIComponent(u(b.extensions)));
  return c + "?" + a.join("&");
}

function makeFetchOptions(a, b) {
  var c = "query" === a.operationName && !!a.context.preferGetMethod;
  return h({}, a = "function" == typeof a.context.fetchOptions ? a.context.fetchOptions() : a.context.fetchOptions || {}, {
    body: !c && b ? JSON.stringify(b) : void 0,
    method: c ? "GET" : "POST",
    headers: h({}, {
      "content-type": "application/json"
    }, a.headers)
  });
}

function makeFetchSource(a, b, c) {
  return make((function(d) {
    var e = d.next, f = d.complete, g = "undefined" != typeof AbortController ? new AbortController : null, m = !1;
    Promise.resolve().then((function() {
      if (!m) {
        return g && (c.signal = g.signal), function x(a, b, c) {
          var e, d = !1;
          return (a.context.fetch || fetch)(b, c).then((function(a) {
            e = a;
            d = 200 > a.status || a.status >= ("manual" === c.redirect ? 400 : 300);
            return a.json();
          })).then((function(b) {
            if (!("data" in b) && !("errors" in b)) {
              throw Error("No Content");
            }
            return v(a, b, e);
          })).catch((function(b) {
            if ("AbortError" !== b.name) {
              return w(a, d ? Error(e.statusText) : b, e);
            }
          }));
        }(a, b, c);
      }
    })).then((function(a) {
      m || (m = !0, a && e(a), f());
    }));
    return function() {
      m = !0;
      g && g.abort();
    };
  }));
}

import { Kind } from "graphql/language/kinds";

import { print } from "graphql/language/printer";

import { GraphQLError } from "graphql/error/GraphQLError";

import { make } from "wonka";

var p = function(a) {
  function b(b) {
    var f, c = b.networkError, e = b.response;
    f = function k(a, b) {
      var d = "";
      if (void 0 !== a) {
        return d = "[Network] " + a.message;
      }
      void 0 !== b && b.forEach((function c(a) {
        d += "[GraphQL] " + a.message + "\n";
      }));
      return d.trim();
    }(c, b = (b.graphQLErrors || []).map(l));
    a.call(this, f);
    this.name = "CombinedError";
    this.message = f;
    this.graphQLErrors = b;
    this.networkError = c;
    this.response = e;
  }
  a && (b.__proto__ = a);
  (b.prototype = Object.create(a && a.prototype)).constructor = b;
  b.prototype.toString = n;
  return b;
}(Error), q = new Set, r = new WeakMap;

export { p as C, h as _, w as a, makeFetchBody as b, makeFetchURL as c, makeFetchOptions as d, makeFetchSource as e, v as m, u as s };
//# sourceMappingURL=36dc2ce0.mjs.map
