import React from "react";
export declare type StyledModalVariant = `DEFAULT` | `SUCCESS` | `WARNING` | `ERROR` | `ACTION` | `RETAKE`;
export declare type StyledModalContextValue = {
    variant: StyledModalVariant;
};
export declare function useStyledModalContext(): StyledModalContextValue;
export declare type StyledModalProps = {
    children: React.ReactNode;
    variant?: StyledModalVariant;
};
export declare function StyledModal({ children, variant, }: StyledModalProps): JSX.Element;
export declare type StyledModalHeaderProps = {
    children: React.ReactNode;
    onCloseButtonClick?: () => void;
    closeButtonLabel?: string;
};
export declare function StyledModalHeader({ children, onCloseButtonClick, closeButtonLabel, }: StyledModalHeaderProps): JSX.Element;
export declare type StyledModalCloseButtonProps = Omit<JSX.IntrinsicElements["button"], "ref">;
export declare function StyledModalCloseButton(props: StyledModalCloseButtonProps): JSX.Element;
export declare type StyledModalBodyProps = {
    children: React.ReactNode;
};
export declare function StyledModalBody({ children }: StyledModalBodyProps): JSX.Element;
export declare type StyledModalActionsProps = {
    children: React.ReactNode;
};
export declare function StyledModalActions({ children }: StyledModalActionsProps): JSX.Element;
