{"version":3,"file":"cluster.esm.js","sources":["../../../../src/components/cluster/cluster.tsx"],"sourcesContent":["import { Interpolation } from \"@emotion/serialize\"\nimport { Theme, ThemeSpace, ThemeMediaBreakpoint } from \"../../theme\"\n\nexport type ClusterGap = ThemeSpace | string\ntype ResponsiveClusterGap = {\n  gap: ClusterGap\n  verticalGap?: ClusterGap\n}\nexport type ResponsiveClusterGaps = Partial<\n  Record<ThemeMediaBreakpoint, ResponsiveClusterGap>\n>\nexport type ClusterAlign = `center` | `left` | `right`\nexport type ClusterAlignCss = `center` | `flex-start` | `flex-end`\nconst ALIGN_TO_CSS_ALIGN: Record<ClusterAlign, ClusterAlignCss> = {\n  center: `center`,\n  right: `flex-end`,\n  left: `flex-start`,\n}\n\nexport type GetClusterStylesParams = {\n  gap?: ClusterGap\n  verticalGap?: ClusterGap\n  responsiveGaps?: ResponsiveClusterGaps\n  align?: ClusterAlign\n  theme?: Theme\n}\n\nexport type GetClusterStylesReturn = {\n  clusterCss: Interpolation\n  clusterItemCss: Interpolation\n}\n\nfunction pickProperGap(gap: ClusterGap, verticalGap?: ClusterGap) {\n  return verticalGap ? verticalGap : gap\n}\n\nfunction getGapVal(gap: ClusterGap, t?: Theme): string {\n  if (t && t.space[gap as ThemeSpace]) {\n    return t.space[gap as ThemeSpace]\n  }\n\n  return gap as string\n}\n\nfunction getClusterGapCalc(gap: string) {\n  return `calc(${gap} / 2 * -1)`\n}\n\nfunction getClusterItemGapCalc(gap: string) {\n  return `calc(${gap} / 2)`\n}\n\ntype GetMarginCssTarget = `cluster` | `clusterItem`\ntype GetMarginsCssValuesParams = {\n  gap: ClusterGap\n  verticalGap?: ClusterGap\n  target?: GetMarginCssTarget\n  theme?: Theme\n}\n\nfunction getMarginsCssValues(params: GetMarginsCssValuesParams) {\n  const { gap, verticalGap, target = `cluster`, theme: t } = params\n  const calcGetter =\n    target === `clusterItem` ? getClusterItemGapCalc : getClusterGapCalc\n\n  return {\n    margin: calcGetter(getGapVal(gap, t)),\n    marginBottom: calcGetter(getGapVal(pickProperGap(gap, verticalGap), t)),\n    marginTop: calcGetter(getGapVal(pickProperGap(gap, verticalGap), t)),\n  }\n}\n\nexport function getClusterStyles(\n  params?: GetClusterStylesParams\n): GetClusterStylesReturn {\n  const {\n    gap = 0,\n    verticalGap = 0,\n    responsiveGaps = {},\n    align = `left`,\n    theme: t,\n  } = params || {}\n\n  const clusterResponsiveGapsCss: Record<string, Interpolation> = {}\n  const clusterItemResponsiveGapsCss: Record<string, Interpolation> = {}\n\n  if (t && t.mediaQueries) {\n    Object.entries(responsiveGaps).forEach(([breakpoint, gaps]) => {\n      const mediaQuery = t.mediaQueries[breakpoint as ThemeMediaBreakpoint]\n      const { gap, verticalGap } = gaps || {}\n\n      if (mediaQuery && gap !== undefined && gap !== null) {\n        clusterResponsiveGapsCss[mediaQuery] = getMarginsCssValues({\n          gap,\n          verticalGap,\n          target: `cluster`,\n          theme: t,\n        })\n\n        clusterItemResponsiveGapsCss[mediaQuery] = getMarginsCssValues({\n          gap,\n          verticalGap,\n          target: `clusterItem`,\n          theme: t,\n        })\n      }\n    })\n  }\n\n  const clusterCss: Interpolation = {\n    alignItems: ALIGN_TO_CSS_ALIGN[align || `justify`],\n    display: `flex`,\n    flexWrap: `wrap`,\n    justifyContent: align ? ALIGN_TO_CSS_ALIGN[align] : `center`,\n    ...getMarginsCssValues({\n      gap,\n      verticalGap,\n      target: `cluster`,\n      theme: t,\n    }),\n    ...clusterResponsiveGapsCss,\n  }\n\n  const clusterItemCss: Interpolation = {\n    ...getMarginsCssValues({\n      gap,\n      verticalGap,\n      target: `clusterItem`,\n      theme: t,\n    }),\n    ...clusterItemResponsiveGapsCss,\n  }\n\n  return {\n    clusterCss,\n    clusterItemCss,\n  }\n}\n"],"names":["ALIGN_TO_CSS_ALIGN","center","right","left","pickProperGap","gap","verticalGap","getGapVal","t","space","getClusterGapCalc","getClusterItemGapCalc","getMarginsCssValues","params","target","theme","calcGetter","margin","marginBottom","marginTop","getClusterStyles","responsiveGaps","align","clusterResponsiveGapsCss","clusterItemResponsiveGapsCss","mediaQueries","Object","entries","forEach","breakpoint","gaps","mediaQuery","undefined","clusterCss","alignItems","display","flexWrap","justifyContent","clusterItemCss"],"mappings":"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"}