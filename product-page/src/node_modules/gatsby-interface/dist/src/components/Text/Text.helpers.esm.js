var baseStyle = function baseStyle(tone) {
  return function (theme) {
    return {
      // TODO figure out a better way to do this
      // https://github.com/gatsby-inc/gatsby-interface/issues/324
      color: tone === "NEUTRAL" ? theme.tones[tone].dark : theme.tones[tone].text,
      fontFamily: theme.fonts.system,
      fontWeight: "normal"
    };
  };
};
var sizeStyles = {
  S: function S(theme) {
    return {
      fontSize: theme.fontSizes[1],
      lineHeight: theme.lineHeights["default"]
    };
  },
  M: function M(theme) {
    return {
      fontSize: theme.fontSizes[2],
      lineHeight: theme.lineHeights["default"]
    };
  },
  L: function L(theme) {
    return {
      fontSize: theme.fontSizes[3],
      lineHeight: theme.lineHeights["default"]
    };
  },
  XL: function XL(theme) {
    return {
      fontSize: theme.fontSizes[4],
      lineHeight: theme.lineHeights["default"]
    };
  },
  "2XL": function XL(theme) {
    return {
      fontSize: theme.fontSizes[5],
      lineHeight: theme.lineHeights["default"]
    };
  }
};
var variantStyles = {
  PRIMARY: function PRIMARY() {
    return {};
  },
  EMPHASIZED: function EMPHASIZED() {
    return {
      fontWeight: "bold"
    };
  },
  LEDE: function LEDE(theme) {
    return [sizeStyles["L"](theme), {
      margin: "".concat(theme.space[3], " 0 0")
    }];
  },
  EMPHASIZED_LEDE: function EMPHASIZED_LEDE(theme) {
    return [sizeStyles["2XL"](theme), {
      fontFamily: theme.fonts.heading,
      lineHeight: theme.lineHeights.dense,
      margin: "".concat(theme.space[5], " 0 0")
    }];
  },
  ERROR: function ERROR() {
    return {};
  }
};

export { baseStyle, sizeStyles, variantStyles };
//# sourceMappingURL=Text.helpers.esm.js.map
