import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import { jsx, css } from '@emotion/core';
import colors from '../../theme/colors.esm.js';
import { avatarSizeValues, placeholderFontSizes, borderSizeValues } from './constants.esm.js';

var baseCss = css({
  background: colors.grey[20],
  borderRadius: "50%",
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "space-around",
  flexShrink: 0,
  overflow: "hidden",
  color: colors.grey[60]
});
// TODO fit placeholder text to its avatar size for cases like +99
function AvatarSkeleton(_ref) {
  var size = _ref.size,
      borderColor = _ref.borderColor,
      rest = _objectWithoutProperties(_ref, ["size", "borderColor"]);

  return jsx("span", _extends({
    css: [baseCss, css({
      width: avatarSizeValues[size],
      height: avatarSizeValues[size],
      fontSize: placeholderFontSizes[size],
      border: borderColor ? "".concat(borderSizeValues[size], "px solid ").concat(borderColor) : undefined
    })]
  }, rest));
}
AvatarSkeleton.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "AvatarSkeleton",
  "props": {
    "size": {
      "required": true,
      "tsType": {
        "name": "AvatarSize"
      },
      "description": ""
    },
    "borderColor": {
      "required": false,
      "tsType": {
        "name": "union",
        "raw": "string | null",
        "elements": [{
          "name": "string"
        }, {
          "name": "null"
        }]
      },
      "description": ""
    }
  }
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/Avatar/AvatarSkeleton.tsx"] = {
    name: "AvatarSkeleton",
    docgenInfo: AvatarSkeleton.__docgenInfo,
    path: "src/components/Avatar/AvatarSkeleton.tsx"
  };
}

export default AvatarSkeleton;
//# sourceMappingURL=AvatarSkeleton.esm.js.map
