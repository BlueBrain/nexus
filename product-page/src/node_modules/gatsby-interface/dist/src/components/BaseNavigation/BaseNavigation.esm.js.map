{"version":3,"file":"BaseNavigation.esm.js","sources":["../../../../src/components/BaseNavigation/BaseNavigation.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport React from \"react\"\nimport { Link, GatsbyLinkProps } from \"gatsby\"\nimport { MdArrowForward } from \"react-icons/md\"\n\nimport { LinkButton, LinkButtonProps } from \"../LinkButton\"\nimport { AnchorButton, AnchorButtonProps } from \"../AnchorButton\"\nimport { BaseAnchor, BaseAnchorProps } from \"../BaseAnchor\"\nimport useOnClickOutside from \"../../utils/hooks/useOnClickOutside\"\nimport baseStyles from \"./BaseNavigation.styles\"\nimport { visuallyHiddenCss } from \"../../stylesheets/a11y\"\n\nexport type BaseNavigationItem = {\n  name: string\n  linkTo: string\n}\n\nexport type BaseNavigationItemOptions = BaseNavigationItem & {\n  items?: BaseNavigationItem[]\n}\n\nexport type DropdownOffsets = { [key: string]: number }\n\nexport type BaseNavigationComponents = {\n  Hamburger: React.ComponentType<any>\n  HamburgerIcon: React.ComponentType<any>\n  Nav: React.ComponentType<any>\n  List: React.ComponentType<any>\n  Item: React.ComponentType<any>\n  ItemLink: React.ComponentType<any>\n  ItemAnchor: React.ComponentType<any>\n  Dropdown: React.ComponentType<any>\n  DropdownItem: React.ComponentType<any>\n  DropdownToggle: React.ComponentType<any>\n  LinkButton: React.ComponentType<any>\n  AnchorButton: React.ComponentType<any>\n}\n\nexport type BaseNavigationContextValue = {\n  items: BaseNavigationItemOptions[]\n  secondaryItems: BaseNavigationItemOptions[]\n  rootChildren: React.ReactNode\n  isInverted: boolean\n  mobileNavMediaQuery: string\n  isMobileNavOpen: boolean\n  setIsMobileNavOpen: (value: boolean) => void\n  components: BaseNavigationComponents\n  dropdownOffsets: DropdownOffsets\n  setDropdownOffsets: React.Dispatch<React.SetStateAction<DropdownOffsets>>\n}\n\nconst BaseNavigationContext = React.createContext<BaseNavigationContextValue>(\n  {} as any\n)\n\nexport type BaseNavigationProps = Omit<JSX.IntrinsicElements[\"div\"], \"ref\"> & {\n  items?: BaseNavigationItemOptions[]\n  secondaryItems?: BaseNavigationItemOptions[]\n  isInverted?: boolean\n  mobileNavMediaQuery?: string\n  isMobileNavOpen?: boolean\n  setIsMobileNavOpen?: (value: boolean) => void\n} & Partial<BaseNavigationComponents>\n\nexport const BaseNavigation = ({\n  items = [],\n  secondaryItems = [],\n  children,\n  isInverted = false,\n  mobileNavMediaQuery = `@media (max-width: 1065px)`,\n  isMobileNavOpen: customIsMobileNavOpen,\n  setIsMobileNavOpen: customSetIsMobileNavOpen,\n  // override base components\n  Hamburger = BaseNavigationHamburger,\n  HamburgerIcon = BaseNavigationHamburgerIcon,\n  Nav = BaseNavigationNav,\n  List = BaseNavigationList,\n  Item = BaseNavigationListItem,\n  ItemLink = BaseNavigationItemLink,\n  ItemAnchor = BaseNavigationItemAnchor,\n  Dropdown = BaseNavigationDropdown,\n  DropdownItem = BaseNavigationDropdownItem,\n  DropdownToggle = BaseNavigationDropdownToggle,\n  LinkButton = BaseNavigationLinkButton,\n  AnchorButton = BaseNavigationAnchorButton,\n  ...rest\n}: BaseNavigationProps) => {\n  const [internalIsMobileNavOpen, internalSetIsMobileNavOpen] = React.useState(\n    false\n  )\n\n  const [dropdownOffsets, setDropdownOffsets] = React.useState({})\n\n  let isMobileNavOpen = internalIsMobileNavOpen\n  let setIsMobileNavOpen: BaseNavigationContextValue[\"setIsMobileNavOpen\"] = internalSetIsMobileNavOpen\n\n  if (\n    customIsMobileNavOpen !== undefined &&\n    customSetIsMobileNavOpen !== undefined\n  ) {\n    isMobileNavOpen = customIsMobileNavOpen\n    setIsMobileNavOpen = customSetIsMobileNavOpen\n  }\n\n  const value = {\n    items,\n    secondaryItems,\n    rootChildren: children,\n    isInverted,\n    mobileNavMediaQuery,\n    isMobileNavOpen,\n    setIsMobileNavOpen,\n    dropdownOffsets,\n    setDropdownOffsets,\n    components: {\n      Hamburger,\n      HamburgerIcon,\n      Nav,\n      List,\n      Item,\n      ItemLink,\n      ItemAnchor,\n      Dropdown,\n      DropdownItem,\n      DropdownToggle,\n      LinkButton,\n      AnchorButton,\n    },\n  }\n\n  return (\n    <BaseNavigationContext.Provider value={value}>\n      <div css={baseStyles.navigation.default} {...rest}>\n        <Hamburger />\n        <Nav />\n      </div>\n    </BaseNavigationContext.Provider>\n  )\n}\n\nexport type BaseNavigationHamburgerProps = Omit<\n  JSX.IntrinsicElements[\"button\"],\n  \"children\"\n>\nconst BaseNavigationHamburger = React.forwardRef<\n  HTMLButtonElement,\n  BaseNavigationHamburgerProps\n>(function BaseNavigationHamburger(props, ref) {\n  const {\n    mobileNavMediaQuery,\n    isMobileNavOpen,\n    setIsMobileNavOpen,\n\n    components: { HamburgerIcon },\n  } = BaseNavigation.useNavigationContext()\n\n  return (\n    <button\n      onClick={() => {\n        setIsMobileNavOpen(!isMobileNavOpen)\n      }}\n      aria-expanded={isMobileNavOpen}\n      css={{\n        ...baseStyles.hamburger.default,\n        [mobileNavMediaQuery]: baseStyles.hamburger.mobile,\n      }}\n      {...props}\n      aria-label={`${isMobileNavOpen ? \"Close\" : \"Open\"} the menu`}\n      ref={ref}\n    >\n      <HamburgerIcon />\n    </button>\n  )\n})\n\nBaseNavigation.Hamburger = BaseNavigationHamburger\n\nexport type BaseNavigationHamburgerIconProps = Omit<\n  JSX.IntrinsicElements[\"div\"],\n  \"ref\"\n>\n\nexport function BaseNavigationHamburgerIcon(\n  props: BaseNavigationHamburgerIconProps\n) {\n  const { isInverted, isMobileNavOpen } = BaseNavigation.useNavigationContext()\n\n  return (\n    <div\n      className={isMobileNavOpen ? `active` : ``}\n      css={baseStyles.hamburgerIcon(isInverted)}\n      {...props}\n    />\n  )\n}\n\nBaseNavigation.HamburgerIcon = BaseNavigationHamburgerIcon\n\nexport type BaseNavigationNavProps = Omit<JSX.IntrinsicElements[\"nav\"], \"ref\">\n\nexport function BaseNavigationNav(props: BaseNavigationNavProps) {\n  const {\n    mobileNavMediaQuery,\n    isMobileNavOpen,\n    components: { List },\n  } = BaseNavigation.useNavigationContext()\n\n  return (\n    <nav\n      css={theme => ({\n        [mobileNavMediaQuery]: baseStyles.nav.mobile(isMobileNavOpen)(theme),\n      })}\n      {...props}\n    >\n      <List />\n    </nav>\n  )\n}\n\nBaseNavigation.Nav = BaseNavigationNav\n\nexport type BaseNavigationListProps = Omit<JSX.IntrinsicElements[\"ul\"], \"ref\">\n\nexport function BaseNavigationList(props: BaseNavigationListProps) {\n  const {\n    items,\n    secondaryItems,\n    rootChildren,\n    components: { Item },\n  } = useBaseNavigationContext()\n\n  return (\n    <div css={baseStyles.list.wrapper}>\n      <ul css={[baseStyles.list.side, baseStyles.list.leftSide]} {...props}>\n        {items.length > 0 &&\n          items.map(item => <Item key={item.name} item={item} />)}\n        <li role=\"separator\" css={baseStyles.list.spacer} />\n        {secondaryItems.length > 0 &&\n          secondaryItems.map(item => <Item key={item.name} item={item} />)}\n        {rootChildren && rootChildren}\n      </ul>\n    </div>\n  )\n}\n\nBaseNavigation.List = BaseNavigationList\n\nexport type BaseNavigationListItemProps = Omit<\n  JSX.IntrinsicElements[\"li\"],\n  \"ref\"\n> & {\n  item: BaseNavigationItemOptions\n}\n\nexport function BaseNavigationListItem({\n  item,\n  children,\n  ...rest\n}: BaseNavigationListItemProps) {\n  const [isDropdownOpen, toggleDropdown] = React.useState(false)\n  const dropdownItems = item.items || []\n  const dropdownChildren = children || false\n  const itemHasDropdown = dropdownItems.length > 0 || dropdownChildren\n\n  const ref = React.useRef<HTMLLIElement>(null)\n\n  // Call hook passing in the ref and a function to call on outside click\n  useOnClickOutside(ref, () => {\n    if (itemHasDropdown) {\n      toggleDropdown(false)\n    }\n  })\n\n  const {\n    isInverted,\n    components: { ItemLink, DropdownToggle, Dropdown },\n  } = BaseNavigation.useNavigationContext()\n\n  return (\n    <li ref={ref} css={baseStyles.item(isInverted)} {...rest}>\n      <ItemLink item={item} />\n      {itemHasDropdown && (\n        <React.Fragment>\n          <DropdownToggle\n            item={item}\n            isDropdownOpen={isDropdownOpen}\n            toggleDropdown={toggleDropdown}\n          />\n          <Dropdown\n            item={item}\n            isDropdownOpen={isDropdownOpen}\n            toggleDropdown={toggleDropdown}\n            dropdownItems={item.items}\n            dropdownChildren={dropdownChildren}\n          />\n        </React.Fragment>\n      )}\n    </li>\n  )\n}\n\nBaseNavigation.Item = BaseNavigationListItem\n\nexport type BaseNavigationItemLinkProps = Omit<GatsbyLinkProps<any>, \"ref\"> & {\n  item: BaseNavigationItem\n}\n\nexport type BaseNavigationItemAnchorProps = Omit<BaseAnchorProps, \"ref\"> & {\n  item: BaseNavigationItem\n}\n\nexport function BaseNavigationItemAnchor({\n  item,\n  ...rest\n}: BaseNavigationItemAnchorProps) {\n  return (\n    <BaseAnchor href={item.linkTo} {...rest}>\n      {/*\n        This span is needed for the styles applied in theme/styles/navigation\n      */}\n      <span>{item.name}</span>\n    </BaseAnchor>\n  )\n}\n\nBaseNavigation.ItemAnchor = BaseNavigationItemAnchor\n\nexport function BaseNavigationItemLink({\n  item,\n  ...rest\n}: BaseNavigationItemLinkProps) {\n  const { setIsMobileNavOpen } = BaseNavigation.useNavigationContext()\n\n  return (\n    <Link\n      activeClassName=\"nav-item-active\"\n      to={item.linkTo}\n      onClick={() => setIsMobileNavOpen(false)}\n      {...rest}\n    >\n      {/*\n        This span is needed for the styles applied in theme/styles/navigation\n      */}\n      <span>{item.name}</span>\n    </Link>\n  )\n}\n\nBaseNavigation.ItemLink = BaseNavigationItemLink\n\nexport type BaseNavigationDropdownToggleProps = JSX.IntrinsicElements[\"button\"] & {\n  item: BaseNavigationItem\n  isDropdownOpen: boolean\n  toggleDropdown: (value: boolean) => void\n}\n\nexport const BaseNavigationDropdownToggle = React.forwardRef<\n  HTMLButtonElement,\n  BaseNavigationDropdownToggleProps\n>(function BaseNavigationDropdownToggle(\n  { item, isDropdownOpen, toggleDropdown, ...rest },\n  ref\n) {\n  const { isInverted } = BaseNavigation.useNavigationContext()\n\n  return (\n    <button\n      ref={ref}\n      aria-expanded={!!isDropdownOpen}\n      aria-controls={getDropdownId(item.name)}\n      onClick={() => {\n        toggleDropdown(!isDropdownOpen)\n      }}\n      css={baseStyles.dropdownToggle(isInverted)}\n      {...rest}\n    >\n      <span aria-hidden=\"true\">&or;</span>\n      <span css={visuallyHiddenCss}>{`${item.name} Menu`}</span>\n    </button>\n  )\n})\n\nBaseNavigation.DropdownToggle = BaseNavigationDropdownToggle\n\nexport type BaseNavigationDropdownProps = Omit<\n  JSX.IntrinsicElements[\"div\"],\n  \"ref\"\n> & {\n  item: BaseNavigationItem\n  isDropdownOpen: boolean\n  toggleDropdown: (value: boolean) => void\n  dropdownItems?: BaseNavigationItem[]\n  dropdownChildren?: React.ReactNode\n  dropdownListClassName?: string\n}\n\nexport function BaseNavigationDropdown({\n  item,\n  isDropdownOpen,\n  toggleDropdown,\n  dropdownItems = [],\n  dropdownChildren = false,\n  dropdownListClassName,\n  ...rest\n}: BaseNavigationDropdownProps) {\n  const dropdownRef = React.useRef<HTMLDivElement>(null)\n  const {\n    components: { DropdownItem },\n    setDropdownOffsets,\n    mobileNavMediaQuery,\n  } = BaseNavigation.useNavigationContext()\n  const [isMeasured, setIsMeasured] = React.useState(false)\n  const [windowWidth, setWindowWidth] = React.useState(0)\n  const VIEWPORT_FIT_MARGIN = 20\n\n  React.useEffect(() => {\n    setIsMeasured(true)\n    setWindowWidth(window.innerWidth || document.documentElement.clientWidth)\n  }, [])\n\n  React.useEffect(() => {\n    if (dropdownRef.current && isMeasured) {\n      const { left, right } = dropdownRef.current.getBoundingClientRect()\n      setIsMeasured(false)\n\n      const leftFit = left >= VIEWPORT_FIT_MARGIN\n      const rightFit = right <= windowWidth - VIEWPORT_FIT_MARGIN\n      const offset = !leftFit\n        ? (left - VIEWPORT_FIT_MARGIN) * -1\n        : !rightFit\n        ? windowWidth - (right + VIEWPORT_FIT_MARGIN)\n        : 0\n\n      setDropdownOffsets((state: DropdownOffsets) => ({\n        ...state,\n        [item.name]: offset,\n      }))\n    }\n  }, [isMeasured])\n\n  return (\n    <div\n      ref={dropdownRef}\n      css={baseStyles.dropdown(isDropdownOpen, isMeasured, mobileNavMediaQuery)}\n      // id to associate with aria-controls on BaseNavigation.Item\n      id={getDropdownId(item.name)}\n      onKeyDown={e => {\n        // handle closing dropdown on `esc`\n        if (e.keyCode === 27) {\n          toggleDropdown(false)\n        }\n        return\n      }}\n      {...rest}\n    >\n      <ul css={baseStyles.dropdownList()} className={dropdownListClassName}>\n        {dropdownItems.length > 0 &&\n          dropdownItems.map((item, index) => (\n            <DropdownItem key={`${index}-${item.name}`} item={item} />\n          ))}\n        {dropdownChildren && dropdownChildren}\n      </ul>\n    </div>\n  )\n}\n\nBaseNavigation.Dropdown = BaseNavigationDropdown\n\nexport type BaseNavigationDropdownItemProps = Omit<\n  JSX.IntrinsicElements[\"li\"],\n  \"ref\"\n> & {\n  item: BaseNavigationItem\n}\n\nexport function BaseNavigationDropdownItem({\n  item: { name, linkTo },\n  ...rest\n}: BaseNavigationDropdownItemProps) {\n  const { setIsMobileNavOpen } = BaseNavigation.useNavigationContext()\n\n  return (\n    <li {...rest}>\n      <Link\n        activeClassName=\"nav-item-active\"\n        to={linkTo}\n        onClick={() => setIsMobileNavOpen(false)}\n      >\n        {name}\n      </Link>\n    </li>\n  )\n}\n\nBaseNavigation.DropdownItem = BaseNavigationDropdownItem\n\nexport type BaseNavigationLinkButtonProps = LinkButtonProps & {\n  icon?: boolean\n  linkTo?: string\n}\n\nexport function BaseNavigationLinkButton({\n  linkTo,\n  icon = true,\n  size = `M`,\n  children,\n  ...rest\n}: BaseNavigationLinkButtonProps) {\n  const { isInverted } = BaseNavigation.useNavigationContext()\n\n  return (\n    <LinkButton\n      to={linkTo}\n      size={size}\n      css={baseStyles.button(isInverted)}\n      rightIcon={icon ? <MdArrowForward /> : undefined}\n      {...rest}\n    >\n      {children}\n    </LinkButton>\n  )\n}\n\nBaseNavigation.LinkButton = BaseNavigationLinkButton\n\nexport type BaseNavigationAnchorButtonProps = AnchorButtonProps & {\n  icon?: boolean\n  linkTo?: string\n}\n\nexport const BaseNavigationAnchorButton = React.forwardRef<\n  HTMLAnchorElement,\n  BaseNavigationAnchorButtonProps\n>(function BaseNavigationAnchorButton(\n  { linkTo, icon = true, size = `M`, children, ...rest },\n  ref\n) {\n  const { isInverted } = BaseNavigation.useNavigationContext()\n\n  return (\n    <AnchorButton\n      ref={ref}\n      href={linkTo}\n      size={size}\n      css={baseStyles.button(isInverted)}\n      rightIcon={icon ? <MdArrowForward /> : undefined}\n      {...rest}\n    >\n      {children}\n    </AnchorButton>\n  )\n})\n\nBaseNavigation.AnchorButton = BaseNavigationAnchorButton\n\nexport function useBaseNavigationContext() {\n  const context = React.useContext(BaseNavigationContext)\n  if (!context) {\n    throw new Error(\n      `BaseNavigation compound components cannot be rendered outside the BaseNavigation component`\n    )\n  }\n  return context\n}\n\nBaseNavigation.useNavigationContext = useBaseNavigationContext\n\nfunction getDropdownId(itemName: string) {\n  // Strip item name (i.e. label) from special characters\n  return `${itemName.replace(/[^\\w]/gi, \"-\")}-dropdown`\n}\n"],"names":["BaseNavigationContext","React","createContext","BaseNavigation","items","secondaryItems","children","isInverted","mobileNavMediaQuery","customIsMobileNavOpen","isMobileNavOpen","customSetIsMobileNavOpen","setIsMobileNavOpen","Hamburger","BaseNavigationHamburger","HamburgerIcon","BaseNavigationHamburgerIcon","Nav","BaseNavigationNav","List","BaseNavigationList","Item","BaseNavigationListItem","ItemLink","BaseNavigationItemLink","ItemAnchor","BaseNavigationItemAnchor","Dropdown","BaseNavigationDropdown","DropdownItem","BaseNavigationDropdownItem","DropdownToggle","BaseNavigationDropdownToggle","LinkButton","BaseNavigationLinkButton","AnchorButton","BaseNavigationAnchorButton","rest","useState","internalIsMobileNavOpen","internalSetIsMobileNavOpen","dropdownOffsets","setDropdownOffsets","undefined","value","rootChildren","components","baseStyles","navigation","name","linkTo","forwardRef","props","ref","useNavigationContext","hamburger","mobile","hamburgerIcon","theme","nav","useBaseNavigationContext","list","wrapper","side","leftSide","length","map","item","spacer","isDropdownOpen","toggleDropdown","dropdownItems","dropdownChildren","itemHasDropdown","useRef","useOnClickOutside","getDropdownId","dropdownToggle","visuallyHiddenCss","dropdownListClassName","dropdownRef","isMeasured","setIsMeasured","windowWidth","setWindowWidth","VIEWPORT_FIT_MARGIN","useEffect","window","innerWidth","document","documentElement","clientWidth","current","getBoundingClientRect","left","right","leftFit","rightFit","offset","state","dropdown","e","keyCode","dropdownList","index","icon","size","button","context","useContext","Error","itemName","replace"],"mappings":"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}