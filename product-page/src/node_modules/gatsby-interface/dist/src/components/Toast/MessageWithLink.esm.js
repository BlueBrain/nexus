import { taggedTemplateLiteral as _taggedTemplateLiteral, objectWithoutProperties as _objectWithoutProperties } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import { css, jsx } from '@emotion/core';
import React__default from 'react';
import _pt from 'prop-types';
import { Link } from '../Link/Link.esm.js';

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  margin-bottom: 8px;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
var messageCss = css(_templateObject());
var MessageWithLink = function MessageWithLink(_ref) {
  var children = _ref.children,
      linkLabel = _ref.linkLabel,
      linkProps = _objectWithoutProperties(_ref, ["children", "linkLabel"]);

  return jsx(React__default.Fragment, null, jsx("div", {
    css: messageCss
  }, children), jsx(Link // we need to cast to "any" because TS claims that "href" is required for <Link /> even though it's not
  , linkProps, linkLabel));
};
MessageWithLink.propTypes = {
  linkLabel: _pt.node.isRequired,
  href: _pt.string,
  target: _pt.string.isRequired,
  to: _pt.string
};
MessageWithLink.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "MessageWithLink"
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/Toast/MessageWithLink.tsx"] = {
    name: "MessageWithLink",
    docgenInfo: MessageWithLink.__docgenInfo,
    path: "src/components/Toast/MessageWithLink.tsx"
  };
}

export { MessageWithLink };
//# sourceMappingURL=MessageWithLink.esm.js.map
