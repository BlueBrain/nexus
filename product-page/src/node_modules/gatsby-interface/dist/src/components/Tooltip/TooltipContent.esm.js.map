{"version":3,"file":"TooltipContent.esm.js","sources":["../../../../src/components/Tooltip/TooltipContent.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport React from \"react\"\nimport { TooltipPopup, TooltipParams } from \"@reach/tooltip\"\nimport { TooltipPosition } from \"./types\"\nimport TooltipPointer, { TooltipPointerProps } from \"./TooltipPointer\"\nimport { tooltipPosition } from \"./TooltipContent.helpers\"\nimport { ThemeCss } from \"../../theme\"\n\ntype TooltipContentProps = Omit<\n  JSX.IntrinsicElements[\"div\"],\n  \"label\" | \"children\"\n> & {\n  label: React.ReactNode\n  tooltipParams: TooltipParams\n  position?: TooltipPosition\n} & Pick<TooltipPointerProps, \"style\">\n\nconst baseCss: ThemeCss = theme => ({\n  // defaults from @reach/tooltip\n  zIndex: 1,\n  pointerEvents: `none`,\n  position: `absolute`,\n  boxShadow: `2px 2px 10px hsla(0, 0%, 0%, 0.1)`,\n  // gatsby-interface styles\n  background: theme.colors.black,\n  color: theme.colors.whiteFade[80],\n  fontSize: theme.fontSizes[1],\n  border: \"none\",\n  borderRadius: \"2px\",\n  padding: `${theme.space[2]} ${theme.space[4]}`,\n  transformOrigin: \"center\",\n  whiteSpace: \"normal\",\n})\n\nexport default function TooltipContent({\n  position = \"top\",\n  label,\n  tooltipParams,\n  \"aria-label\": ariaLabel,\n  style,\n  ...rest\n}: TooltipContentProps) {\n  return (\n    <TooltipPopup\n      {...tooltipParams}\n      {...rest}\n      label={\n        <React.Fragment>\n          {tooltipParams.triggerRect && (\n            <TooltipPointer\n              triggerRect={tooltipParams.triggerRect}\n              position={position}\n              style={style}\n            />\n          )}\n          {label}\n        </React.Fragment>\n      }\n      ariaLabel={ariaLabel}\n      aria-label={ariaLabel}\n      css={baseCss}\n      style={style}\n      position={tooltipPosition[position]}\n    />\n  )\n}\n"],"names":["baseCss","theme","zIndex","pointerEvents","position","boxShadow","background","colors","black","color","whiteFade","fontSize","fontSizes","border","borderRadius","padding","space","transformOrigin","whiteSpace","TooltipContent","label","tooltipParams","ariaLabel","style","rest","React","triggerRect","tooltipPosition"],"mappings":";;;;;;;;AAkBA,IAAMA,OAAiB,GAAG,SAApBA,OAAoB,CAAAC,KAAK;AAAA,SAAK;AAClC;AACAC,IAAAA,MAAM,EAAE,CAF0B;AAGlCC,IAAAA,aAAa,QAHqB;AAIlCC,IAAAA,QAAQ,YAJ0B;AAKlCC,IAAAA,SAAS,qCALyB;AAMlC;AACAC,IAAAA,UAAU,EAAEL,KAAK,CAACM,MAAN,CAAaC,KAPS;AAQlCC,IAAAA,KAAK,EAAER,KAAK,CAACM,MAAN,CAAaG,SAAb,CAAuB,EAAvB,CAR2B;AASlCC,IAAAA,QAAQ,EAAEV,KAAK,CAACW,SAAN,CAAgB,CAAhB,CATwB;AAUlCC,IAAAA,MAAM,EAAE,MAV0B;AAWlCC,IAAAA,YAAY,EAAE,KAXoB;AAYlCC,IAAAA,OAAO,YAAKd,KAAK,CAACe,KAAN,CAAY,CAAZ,CAAL,cAAuBf,KAAK,CAACe,KAAN,CAAY,CAAZ,CAAvB,CAZ2B;AAalCC,IAAAA,eAAe,EAAE,QAbiB;AAclCC,IAAAA,UAAU,EAAE;AAdsB,GAAL;AAAA,CAA/B;;AAiBe,SAASC,cAAT,OAOS;AAAA,2BANtBf,QAMsB;AAAA,MANtBA,QAMsB,8BANX,KAMW;AAAA,MALtBgB,KAKsB,QALtBA,KAKsB;AAAA,MAJtBC,aAIsB,QAJtBA,aAIsB;AAAA,MAHRC,SAGQ,QAHtB,YAGsB;AAAA,MAFtBC,KAEsB,QAFtBA,KAEsB;AAAA,MADnBC,IACmB;;AACtB,SACE,IAAC,YAAD,eACMH,aADN,EAEMG,IAFN;AAGE,IAAA,KAAK,EACH,IAACC,cAAD,CAAO,QAAP,QACGJ,aAAa,CAACK,WAAd,IACC,IAAC,cAAD;AACE,MAAA,WAAW,EAAEL,aAAa,CAACK,WAD7B;AAEE,MAAA,QAAQ,EAAEtB,QAFZ;AAGE,MAAA,KAAK,EAAEmB;AAHT,MAFJ,EAQGH,KARH,CAJJ;AAeE,IAAA,SAAS,EAAEE,SAfb;AAgBE,kBAAYA,SAhBd;AAiBE,IAAA,GAAG,EAAEtB,OAjBP;AAkBE,IAAA,KAAK,EAAEuB,KAlBT;AAmBE,IAAA,QAAQ,EAAEI,eAAe,CAACvB,QAAD;AAnB3B,KADF;AAuBD;;AArDCgB,EAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}