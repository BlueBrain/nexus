{"version":3,"file":"Notification.esm.js","sources":["../../../../src/components/Notification/Notification.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport React, { Fragment } from \"react\"\nimport { MdClose, MdArrowForward } from \"react-icons/md\"\n\nimport { Button } from \"../Button\"\nimport { NotificationVariant, NotificationTone } from \"./types\"\nimport {\n  getNotificationVariantStyles,\n  iconByTone,\n} from \"./Notification.helpers\"\nimport { PropsOf } from \"../../utils/types\"\nimport { Link } from \"../Link\"\nimport { ThemeCss, Theme } from \"../../theme\"\n\nexport type NotificationContextValue = {\n  onDismiss?: () => void\n  variant?: NotificationVariant\n  tone?: NotificationTone\n}\n\nconst NotificationContext = React.createContext<NotificationContextValue>({\n  onDismiss: () => undefined,\n  variant: undefined,\n  tone: undefined,\n})\n\nconst baseCss: ThemeCss = theme => ({\n  color: theme.colors.grey[90],\n  display: `flex`,\n  alignItems: `flex-start`,\n  justifyContent: `space-between`,\n  flexWrap: `nowrap`,\n  width: `100%`,\n  fontSize: theme.fontSizes[1],\n  lineHeight: theme.lineHeights.default,\n})\n\nexport type NotificationProps = Omit<JSX.IntrinsicElements[\"div\"], \"ref\"> & {\n  children?: React.ReactNode\n  variant?: NotificationVariant\n  tone?: NotificationTone\n  content?: React.ReactNode\n  contentAs?: NotificationContentProps[\"as\"]\n  linkUrl?: string\n  linkText?: React.ReactNode\n  onLinkClick?: React.MouseEventHandler<HTMLAnchorElement>\n  isOpened?: boolean\n  onDismissButtonClick?: () => void\n  showDismissButton?: boolean\n  dismissButtonLabel?: string\n  Icon?: React.ComponentType<any>\n}\n\nexport default function Notification({\n  children,\n  tone = `BRAND`,\n  variant = `PRIMARY`,\n  content,\n  contentAs = `span`,\n  linkUrl,\n  linkText,\n  onLinkClick,\n  isOpened = true,\n  onDismissButtonClick,\n  showDismissButton = !!onDismissButtonClick,\n  dismissButtonLabel,\n  Icon: CustomIcon,\n  ...rest\n}: NotificationProps) {\n  if (!isOpened) {\n    return null\n  }\n  const PresetIcon = content && iconByTone[tone]\n  const Icon = CustomIcon || PresetIcon\n\n  return (\n    <NotificationContext.Provider\n      value={{ onDismiss: onDismissButtonClick, variant, tone }}\n    >\n      <div\n        css={(theme: Theme) => [\n          variant === `PRIMARY` && theme.cardStyles.frame,\n          baseCss(theme),\n          getNotificationVariantStyles(variant, tone)(theme),\n        ]}\n        {...rest}\n      >\n        {content && (\n          <NotificationContent\n            as={contentAs}\n            css={theme => [\n              linkUrl &&\n                linkText && {\n                  marginRight: theme.space[5],\n                },\n            ]}\n          >\n            {Icon && (\n              <Icon\n                css={theme => [\n                  {\n                    marginRight: theme.space[4],\n                    fontSize: theme.fontSizes[4],\n                    color: theme.tones[tone].medium,\n                    flexShrink: 0,\n                    width: \"auto\",\n                    height: \"1em\",\n                  },\n                  variant === `SOLID` && {\n                    color: theme.tones[tone].mediumInverted\n                      ? theme.tones[tone].mediumInverted\n                      : theme.colors.whiteFade[90],\n                  },\n                ]}\n              />\n            )}\n            {content}\n          </NotificationContent>\n        )}\n\n        {linkUrl && linkText && (\n          <Link\n            to={linkUrl}\n            onClick={onLinkClick}\n            css={theme => ({\n              // to push <Link> to the right also when there's a\n              // <NotificationDismissButton>\n              marginLeft: \"auto\",\n              color: variant === `SOLID` ? theme.colors.white : null,\n              \":hover\": {\n                color: variant === `SOLID` ? theme.colors.whiteFade[80] : null,\n              },\n            })}\n          >\n            {linkText && (\n              <Fragment>\n                {linkText} <MdArrowForward />\n              </Fragment>\n            )}\n          </Link>\n        )}\n\n        {showDismissButton && (\n          <NotificationDismissButton label={dismissButtonLabel} />\n        )}\n        {children}\n      </div>\n    </NotificationContext.Provider>\n  )\n}\n\ntype AllowedContentAs = \"span\" | \"div\"\n\nexport type NotificationContentProps = Omit<\n  PropsOf<AllowedContentAs>,\n  \"ref\"\n> & {\n  as?: AllowedContentAs\n}\n\nfunction NotificationContent({\n  as: Component = `span`,\n  ...rest\n}: NotificationContentProps) {\n  return (\n    <Component\n      css={{\n        display: `flex`,\n        alignItems: `flex-start`,\n      }}\n      {...rest}\n    />\n  )\n}\n\nfunction NotificationDismissButton({ label = `Close` }: { label?: string }) {\n  const { onDismiss, variant, tone } = useNotificationContext()\n\n  return (\n    <Button\n      css={theme => [\n        {\n          padding: `0`,\n          minHeight: `auto`,\n          color: theme.colors.grey[40],\n          width: theme.space[5],\n          marginLeft: theme.space[5],\n          fontSize: theme.fontSizes[4],\n        },\n        variant === `SOLID` && {\n          color: theme.colors.whiteFade[60],\n          \":hover\": {\n            background: \"transparent\",\n            color: theme.colors.white,\n          },\n        },\n        variant === `SOLID` &&\n          tone === `WARNING` && {\n            color: theme.colors.blackFade[60],\n            \":hover\": {\n              color: theme.colors.black,\n            },\n          },\n      ]}\n      type=\"button\"\n      onClick={onDismiss}\n      variant=\"GHOST\"\n      aria-label={label}\n    >\n      <MdClose />\n    </Button>\n  )\n}\n\nfunction useNotificationContext() {\n  const context = React.useContext(NotificationContext)\n  if (!context) {\n    throw new Error(\n      `Notification compound components cannot be rendered outside the main component`\n    )\n  }\n  return context\n}\n"],"names":["NotificationContext","React","createContext","onDismiss","undefined","variant","tone","baseCss","theme","color","colors","grey","display","alignItems","justifyContent","flexWrap","width","fontSize","fontSizes","lineHeight","lineHeights","Notification","children","content","contentAs","linkUrl","linkText","onLinkClick","isOpened","onDismissButtonClick","showDismissButton","dismissButtonLabel","CustomIcon","Icon","rest","PresetIcon","iconByTone","cardStyles","frame","getNotificationVariantStyles","marginRight","space","tones","medium","flexShrink","height","mediumInverted","whiteFade","marginLeft","white","NotificationContent","as","Component","NotificationDismissButton","label","useNotificationContext","padding","minHeight","background","blackFade","black","context","useContext","Error"],"mappings":"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"}