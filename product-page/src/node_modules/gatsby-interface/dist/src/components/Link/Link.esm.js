import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import { jsx } from '@emotion/core';
import { BaseAnchor } from '../BaseAnchor/BaseAnchor.esm.js';
import { Link as Link$1 } from 'gatsby';

var baseCss = function baseCss(theme) {
  return {
    alignItems: "center",
    color: theme.colors.purple[60],
    display: "inline-flex"
  };
};

var variantsCss = {
  DEFAULT: function DEFAULT(theme) {
    return {
      textDecoration: "underline",
      ":focus, :hover": {
        color: theme.colors.purple[60],
        textDecoration: "underline"
      }
    };
  },
  SIMPLE: function SIMPLE(theme) {
    return {
      textDecoration: "none",
      ":focus, :hover": {
        color: theme.colors.purple[40],
        textDecoration: "underline"
      }
    };
  }
};
function Link(_ref) {
  var _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? "DEFAULT" : _ref$variant,
      rest = _objectWithoutProperties(_ref, ["variant"]);

  var commonProps = {
    css: function css(theme) {
      return [baseCss(theme), variantsCss[variant](theme)];
    }
  };

  if (isGatsbyLink(rest)) {
    // GatsbyLink does not support target attribute
    return jsx(Link$1, _extends({}, commonProps, rest, {
      target: undefined
    }));
  }

  return jsx(BaseAnchor, _extends({}, commonProps, rest));
}
/**
 * An awesome tidbit from React TypeScript Cheatsheet
 * https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/blob/master/ADVANCED.md#typing-a-component-that-accepts-different-props
 */

function isGatsbyLink(props) {
  return "to" in props;
}

Link.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "Link",
  "props": {
    "variant": {
      "defaultValue": {
        "value": "`DEFAULT`",
        "computed": false
      },
      "required": false,
      "tsType": {
        "name": "union",
        "raw": "`DEFAULT` | `SIMPLE`",
        "elements": [{
          "name": "literal",
          "value": "undefined"
        }, {
          "name": "literal",
          "value": "undefined"
        }]
      },
      "description": ""
    }
  }
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/Link/Link.tsx"] = {
    name: "Link",
    docgenInfo: Link.__docgenInfo,
    path: "src/components/Link/Link.tsx"
  };
}

export { Link };
//# sourceMappingURL=Link.esm.js.map
