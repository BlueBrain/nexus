{"version":3,"file":"FormGroupField.esm.js","sources":["../../../../../src/components/form/components/FormGroupField.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport React from \"react\"\n\nimport {\n  useStyledFieldLabel,\n  useStyledFieldHint,\n  useStyledFieldError,\n} from \"./FormField\"\nimport { Theme, ThemeCss } from \"../../../theme\"\nimport { getLabelFontSize, FormFieldLabelSize } from \"./FormField.helpers\"\n\nexport const INPUT_WIDTH = `20px`\nexport const INPUT_VERTICAL_OFFSET_CALC = `(1em - 14px) * 0.5`\n\nexport type FormGroupOptionsDirection = `row` | `column`\n\nexport type FormGroupFieldContextValue = {\n  optionsDirection?: FormGroupOptionsDirection\n}\n\nconst FormGroupFieldContext = React.createContext<FormGroupFieldContextValue>({\n  optionsDirection: undefined,\n})\n\nexport type FormGroupFieldProviderProps = {\n  optionsDirection?: FormGroupOptionsDirection\n  children?: React.ReactNode\n}\n\n// TODO we can probably do away with context for optionsDirection\n// it can be replaced with passing props since in most cases we're going to use *Block or *ConnectedField components\nexport function FormGroupFieldProvider({\n  optionsDirection,\n  children,\n}: FormGroupFieldProviderProps) {\n  const fieldContext = React.useMemo<FormGroupFieldContextValue>(() => {\n    return {\n      optionsDirection,\n    }\n  }, [optionsDirection])\n\n  return (\n    <FormGroupFieldContext.Provider value={fieldContext}>\n      {children}\n    </FormGroupFieldContext.Provider>\n  )\n}\n\nexport type WithFormGroupField<T> = Omit<T, keyof FormGroupFieldProviderProps> &\n  FormGroupFieldProviderProps\n\nexport const formGroupFieldCss: ThemeCss = () => ({\n  padding: 0,\n  margin: 0,\n  border: 0,\n})\n\nexport function useStyledGroupFieldLabel(\n  ...args: Parameters<typeof useStyledFieldLabel>\n) {\n  const { css: baseCss, ...rest } = useStyledFieldLabel(...args)\n\n  return {\n    css: (theme: Theme) => [\n      baseCss(theme),\n      {\n        padding: 0,\n        marginRight: 0,\n        marginLeft: 0,\n        width: `100%`,\n      },\n    ],\n    ...rest,\n  }\n}\n\nexport function useStyledGroupFieldHint(\n  ...args: Parameters<typeof useStyledFieldHint>\n) {\n  const { css: baseCss, ...baseStyledProps } = useStyledFieldHint(...args)\n\n  return {\n    css: (theme: Theme) => [baseCss(theme)],\n    ...baseStyledProps,\n  }\n}\n\nexport function useStyledGroupFieldError(\n  ...args: Parameters<typeof useStyledFieldError>\n) {\n  const { css: baseCss, ...baseStyledProps } = useStyledFieldError(...args)\n\n  return {\n    css: (theme: Theme) => [baseCss(theme)],\n    ...baseStyledProps,\n  }\n}\n\nconst horizontalOptionsCss: ThemeCss = _theme => ({\n  display: `flex`,\n  flexWrap: `wrap`,\n})\n\nconst verticalOptionsCss: ThemeCss = theme => [\n  {\n    paddingTop: theme.space[3],\n    paddingBottom: theme.space[3],\n  },\n]\n\nexport type FormGroupFieldOptionsProps = Omit<\n  JSX.IntrinsicElements[\"div\"],\n  \"ref\"\n>\nexport const FormGroupFieldOptions: React.FC<FormGroupFieldOptionsProps> = props => {\n  const { optionsDirection } = useFormGroupField()\n  const isHorizontal = optionsDirection === `row`\n\n  return isHorizontal ? (\n    <div css={horizontalOptionsCss} {...props} />\n  ) : (\n    <div css={verticalOptionsCss} {...props} />\n  )\n}\n\nexport type FormGroupFieldOptionLabelProps = {\n  size?: FormFieldLabelSize\n}\n\nexport function useStyledGroupFieldOptionLabel({\n  size = `L`,\n}: {\n  size?: FormFieldLabelSize\n}): { css: ThemeCss } {\n  const { optionsDirection } = useFormGroupField()\n  const isHorizontal = optionsDirection === `row`\n\n  return {\n    css: (theme: Theme) => [\n      getLabelFontSize(size, theme),\n      {\n        color: theme.colors.grey[90],\n        cursor: `pointer`,\n        justifyContent: `flex-start`,\n        lineHeight: 1.3,\n        paddingLeft: `calc(${INPUT_WIDTH} + ${\n          isHorizontal ? theme.space[2] : theme.space[4]\n        })`,\n        position: `relative`,\n      },\n    ],\n  }\n}\n\nexport type FormGroupFieldOptionWrapperProps = Omit<\n  JSX.IntrinsicElements[\"div\"],\n  \"ref\"\n> & {\n  noSpacing?: boolean\n}\n\nexport const FormGroupFieldOptionWrapper: React.FC<FormGroupFieldOptionWrapperProps> = ({\n  noSpacing,\n  ...rest\n}) => {\n  const { optionsDirection } = useFormGroupField()\n  const isHorizontal = optionsDirection === `row`\n\n  return (\n    <div\n      css={(theme: Theme) => [\n        {\n          display: `flex`,\n          alignItems: `center`,\n          flexShrink: 0,\n        },\n        !noSpacing && [\n          {\n            marginBottom: theme.space[4],\n          },\n          isHorizontal\n            ? {\n                marginRight: theme.space[6],\n              }\n            : {\n                \"&:last-of-type\": {\n                  marginBottom: 0,\n                },\n              },\n        ],\n      ]}\n      {...rest}\n    />\n  )\n}\n\nexport function useFormGroupField() {\n  return React.useContext(FormGroupFieldContext)\n}\n"],"names":["INPUT_WIDTH","INPUT_VERTICAL_OFFSET_CALC","FormGroupFieldContext","React","createContext","optionsDirection","undefined","FormGroupFieldProvider","children","fieldContext","useMemo","formGroupFieldCss","padding","margin","border","useStyledGroupFieldLabel","useStyledFieldLabel","baseCss","css","rest","theme","marginRight","marginLeft","width","useStyledGroupFieldHint","useStyledFieldHint","baseStyledProps","useStyledGroupFieldError","useStyledFieldError","horizontalOptionsCss","_theme","display","flexWrap","verticalOptionsCss","paddingTop","space","paddingBottom","FormGroupFieldOptions","props","useFormGroupField","isHorizontal","useStyledGroupFieldOptionLabel","size","getLabelFontSize","color","colors","grey","cursor","justifyContent","lineHeight","paddingLeft","position","FormGroupFieldOptionWrapper","noSpacing","alignItems","flexShrink","marginBottom","useContext"],"mappings":"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"}