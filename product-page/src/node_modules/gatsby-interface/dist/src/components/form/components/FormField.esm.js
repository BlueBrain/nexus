import { objectWithoutProperties as _objectWithoutProperties, extends as _extends, taggedTemplateLiteral as _taggedTemplateLiteral } from '../../../../_virtual/_rollupPluginBabelHelpers.js';
import { jsx, keyframes } from '@emotion/core';
import React__default from 'react';
import _pt from 'prop-types';
import { MdError } from 'react-icons/md';
import { getLabelFontSize, getLabelStyles, RequiredFlag, getDescriptionStyles, getFieldLayoutStyles } from './FormField.helpers.esm.js';

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n  to {\n    transform: translateY(-0.1em) scale(1) \n  }\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  50% {\n    opacity: .5;\n  }\n  to {\n    opacity: 1;\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
function useStyledFieldLabel(label) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? "M" : _ref$size,
      _ref$isRequired = _ref.isRequired,
      isRequired = _ref$isRequired === void 0 ? false : _ref$isRequired;

  return {
    css: function css(theme) {
      return [getLabelFontSize(size, theme), getLabelStyles(theme)];
    },
    children: jsx(React__default.Fragment, null, label, " ", isRequired && jsx(RequiredFlag, null))
  };
}
function useStyledFieldHint() {
  return {
    css: function css(theme) {
      return [getDescriptionStyles(theme), {
        gridArea: "hint"
      }];
    }
  };
}
var errorEntry = keyframes(_templateObject());
var errorIconEntry = keyframes(_templateObject2());
function useStyledFieldError(error) {
  return {
    css: function css(theme) {
      return [getDescriptionStyles(theme), {
        gridArea: "error",
        animation: "".concat(errorEntry, " .25s ease forwards"),
        color: theme.colors.red[70],
        opacity: 0
      }];
    },
    children: jsx(React__default.Fragment, null, jsx(MdError, {
      css: function css(theme) {
        return {
          animation: "".concat(errorIconEntry, " .25s ease-out forwards"),
          height: "1em",
          marginRight: theme.space[1],
          transform: "translateY(-0.1em) scale(0)",
          verticalAlign: "middle",
          width: "1em"
        };
      }
    }), error)
  };
}
function FormFieldContainer(_ref2) {
  var layout = _ref2.layout,
      rest = _objectWithoutProperties(_ref2, ["layout"]);

  var layoutProps = useFormFieldContainerProps(layout);
  return jsx("div", _extends({}, layoutProps, rest));
}
FormFieldContainer.propTypes = {
  layout: _pt.oneOf(["horizontal", "vertical"])
};
function useFormFieldContainerProps() {
  var layout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "vertical";
  return {
    css: function css(theme) {
      return getFieldLayoutStyles(theme, layout);
    }
  };
}
FormFieldContainer.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "FormFieldContainer",
  "props": {
    "layout": {
      "required": false,
      "tsType": {
        "name": "union",
        "raw": "`horizontal` | `vertical`",
        "elements": [{
          "name": "literal",
          "value": "undefined"
        }, {
          "name": "literal",
          "value": "undefined"
        }]
      },
      "description": ""
    }
  }
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/form/components/FormField.tsx"] = {
    name: "FormFieldContainer",
    docgenInfo: FormFieldContainer.__docgenInfo,
    path: "src/components/form/components/FormField.tsx"
  };
}

export { FormFieldContainer, useFormFieldContainerProps, useStyledFieldError, useStyledFieldHint, useStyledFieldLabel };
//# sourceMappingURL=FormField.esm.js.map
