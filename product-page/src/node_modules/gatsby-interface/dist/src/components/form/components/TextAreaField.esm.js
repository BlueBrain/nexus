import { extends as _extends, objectWithoutProperties as _objectWithoutProperties } from '../../../../_virtual/_rollupPluginBabelHelpers.js';
import { jsx } from '@emotion/core';
import React__default from 'react';
import { getInputStyles } from './FormField.helpers.esm.js';
import { useStyledFieldLabel, useStyledFieldError, useStyledFieldHint } from './FormField.esm.js';
import { useFormFieldSkeleton } from '../../form-skeletons/components/FormFieldSkeleton.esm.js';
import { TextAreaFieldSkeleton, TextAreaFieldSkeletonControl, TextAreaFieldSkeletonLabel, TextAreaFieldSkeletonError, TextAreaFieldSkeletonHint } from '../../form-skeletons/components/TextAreaFieldSkeleton.esm.js';

function TextAreaField(props) {
  return jsx(TextAreaFieldSkeleton, props);
}
var TextAreaFieldControl = React__default.forwardRef(function TextAreaFieldControl(props, ref) {
  var _useFormFieldSkeleton = useFormFieldSkeleton(),
      hasError = _useFormFieldSkeleton.hasError;

  var placeholder = props.placeholder && props.disabled ? "The field is disabled" : props.placeholder;
  return jsx(TextAreaFieldSkeletonControl, _extends({
    ref: ref,
    css: function css(theme) {
      return [getInputStyles(theme, hasError), {
        display: "block",
        minHeight: "4.85em",
        resize: "vertical",
        padding: "".concat(theme.space[2], " ").concat(theme.space[3])
      }];
    }
  }, props, {
    placeholder: placeholder
  }));
});
function TextAreaFieldLabel(_ref) {
  var children = _ref.children,
      size = _ref.size,
      isRequired = _ref.isRequired,
      props = _objectWithoutProperties(_ref, ["children", "size", "isRequired"]);

  var styledProps = useStyledFieldLabel(children, {
    size: size,
    isRequired: isRequired
  });
  return jsx(TextAreaFieldSkeletonLabel, _extends({}, props, styledProps));
}
function TextAreaFieldError(_ref2) {
  var children = _ref2.children,
      props = _objectWithoutProperties(_ref2, ["children"]);

  var styledProps = useStyledFieldError(children);
  return jsx(TextAreaFieldSkeletonError, _extends({}, props, styledProps));
}
function TextAreaFieldHint(props) {
  var styledProps = useStyledFieldHint();
  return jsx(TextAreaFieldSkeletonHint, _extends({}, props, styledProps));
}
TextAreaField.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "TextAreaField"
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/form/components/TextAreaField.tsx"] = {
    name: "TextAreaField",
    docgenInfo: TextAreaField.__docgenInfo,
    path: "src/components/form/components/TextAreaField.tsx"
  };
}

TextAreaFieldControl.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "TextAreaFieldControl"
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/form/components/TextAreaField.tsx"] = {
    name: "TextAreaFieldControl",
    docgenInfo: TextAreaFieldControl.__docgenInfo,
    path: "src/components/form/components/TextAreaField.tsx"
  };
}

TextAreaFieldLabel.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "TextAreaFieldLabel"
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/form/components/TextAreaField.tsx"] = {
    name: "TextAreaFieldLabel",
    docgenInfo: TextAreaFieldLabel.__docgenInfo,
    path: "src/components/form/components/TextAreaField.tsx"
  };
}

TextAreaFieldError.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "TextAreaFieldError"
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/form/components/TextAreaField.tsx"] = {
    name: "TextAreaFieldError",
    docgenInfo: TextAreaFieldError.__docgenInfo,
    path: "src/components/form/components/TextAreaField.tsx"
  };
}

TextAreaFieldHint.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "TextAreaFieldHint"
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/form/components/TextAreaField.tsx"] = {
    name: "TextAreaFieldHint",
    docgenInfo: TextAreaFieldHint.__docgenInfo,
    path: "src/components/form/components/TextAreaField.tsx"
  };
}

export { TextAreaField, TextAreaFieldControl, TextAreaFieldError, TextAreaFieldHint, TextAreaFieldLabel };
//# sourceMappingURL=TextAreaField.esm.js.map
