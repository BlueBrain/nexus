import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../../_virtual/_rollupPluginBabelHelpers.js';
import { jsx } from '@emotion/core';
import { useFormFieldContainerProps } from './FormField.esm.js';
import { RadioButtonField, RadioButtonFieldLabel, RadioButtonFieldOptions, RadioButtonFieldOptionItem, RadioButtonFieldHint, RadioButtonFieldError } from './RadioButtonField.esm.js';

var RadioButtonFieldBlock = function RadioButtonFieldBlock(props) {
  var id = props.id,
      label = props.label,
      labelSize = props.labelSize,
      error = props.error,
      hint = props.hint,
      className = props.className,
      validationMode = props.validationMode,
      fieldValue = props.value,
      options = props.options,
      layout = props.layout,
      optionsDirection = props.optionsDirection,
      variant = props.variant,
      rest = _objectWithoutProperties(props, ["id", "label", "labelSize", "error", "hint", "className", "validationMode", "value", "options", "layout", "optionsDirection", "variant"]);

  var layoutProps = useFormFieldContainerProps(layout);
  return jsx(RadioButtonField, _extends({
    id: id,
    hasError: !!error,
    hasHint: !!hint,
    optionsDirection: optionsDirection,
    className: className
  }, layoutProps), jsx(RadioButtonFieldLabel, {
    size: labelSize,
    isRequired: !!rest.required,
    css: function css(_theme) {
      return [layout === "horizontal" && {
        alignSelf: "baseline"
      }];
    }
  }, label), jsx(RadioButtonFieldOptions, {
    css: function css(_theme) {
      return [layout === "horizontal" && {
        paddingTop: 0
      }];
    }
  }, options.map(function (_ref) {
    var value = _ref.value,
        label = _ref.label,
        restOption = _objectWithoutProperties(_ref, ["value", "label"]);

    return jsx(RadioButtonFieldOptionItem, _extends({
      key: value,
      value: value // Support uncontrolled field
      ,
      checked: fieldValue === undefined ? undefined : value === fieldValue,
      label: label,
      variant: variant
    }, rest, restOption));
  })), jsx(RadioButtonFieldHint, null, hint), jsx(RadioButtonFieldError, {
    validationMode: validationMode
  }, error));
};
RadioButtonFieldBlock.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "RadioButtonFieldBlock"
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/form/components/RadioButtonFieldBlock.tsx"] = {
    name: "RadioButtonFieldBlock",
    docgenInfo: RadioButtonFieldBlock.__docgenInfo,
    path: "src/components/form/components/RadioButtonFieldBlock.tsx"
  };
}

export { RadioButtonFieldBlock };
//# sourceMappingURL=RadioButtonFieldBlock.esm.js.map
