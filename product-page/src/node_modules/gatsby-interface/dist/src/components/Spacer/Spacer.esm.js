import { defineProperty as _defineProperty } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import { jsx } from '@emotion/core';
import { useTheme } from '../ThemeProvider/ThemeProvider.esm.js';

var verticalCss = function verticalCss(_theme) {
  return {
    display: "block",
    width: "unset"
  };
};

var horizontalCss = function horizontalCss(_theme) {
  return {
    display: "inline-block",
    height: "unset"
  };
};

function Spacer(_ref) {
  var size = _ref.size,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? "vertical" : _ref$direction,
      _ref$responsiveSize = _ref.responsiveSize,
      responsiveSize = _ref$responsiveSize === void 0 ? {} : _ref$responsiveSize,
      _ref$responsiveDirect = _ref.responsiveDirection,
      responsiveDirection = _ref$responsiveDirect === void 0 ? {} : _ref$responsiveDirect,
      className = _ref.className;
  var theme = useTheme();
  var breakpoints = Object.keys(theme.mediaQueries);
  var responsiveStyles = {};

  for (var _i = 0, _breakpoints = breakpoints; _i < _breakpoints.length; _i++) {
    var breakpoint = _breakpoints[_i];
    var sizeForBreakpoint = responsiveSize[breakpoint] || size;
    var directionForBreakpoint = responsiveDirection[breakpoint] || direction;
    var sizePropertyForBreakpoint = directionForBreakpoint === "horizontal" ? "width" : "height";
    var mediaQuery = theme.mediaQueries[breakpoint];
    responsiveStyles[mediaQuery] = [_defineProperty({}, sizePropertyForBreakpoint, theme.space[sizeForBreakpoint]), directionForBreakpoint === "horizontal" ? horizontalCss() : verticalCss()];
  }

  var defaultSizeProperty = direction === "horizontal" ? "width" : "height";
  return jsx("div", {
    css: [_defineProperty({}, defaultSizeProperty, theme.space[size]), direction === "horizontal" ? horizontalCss() : verticalCss(), responsiveStyles],
    "aria-hidden": true,
    className: className
  });
}
Spacer.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "Spacer",
  "props": {
    "direction": {
      "defaultValue": {
        "value": "`vertical`",
        "computed": false
      },
      "required": false,
      "tsType": {
        "name": "union",
        "raw": "`horizontal` | `vertical`",
        "elements": [{
          "name": "literal",
          "value": "undefined"
        }, {
          "name": "literal",
          "value": "undefined"
        }]
      },
      "description": ""
    },
    "responsiveSize": {
      "defaultValue": {
        "value": "{}",
        "computed": false
      },
      "required": false,
      "tsType": {
        "name": "Partial",
        "elements": [{
          "name": "signature",
          "type": "object",
          "raw": "{\n  [MediaBreakpoint in ThemeMediaBreakpoint]: SpacerSize\n}",
          "signature": {
            "properties": [{
              "key": {
                "name": "ThemeMediaBreakpoint",
                "required": true
              },
              "value": {
                "name": "ThemeSpace"
              }
            }]
          }
        }],
        "raw": "Partial<\n  {\n    [MediaBreakpoint in ThemeMediaBreakpoint]: SpacerSize\n  }\n>"
      },
      "description": ""
    },
    "responsiveDirection": {
      "defaultValue": {
        "value": "{}",
        "computed": false
      },
      "required": false,
      "tsType": {
        "name": "Partial",
        "elements": [{
          "name": "signature",
          "type": "object",
          "raw": "{\n  [MediaBreakpoint in ThemeMediaBreakpoint]: SpacerDirection\n}",
          "signature": {
            "properties": [{
              "key": {
                "name": "ThemeMediaBreakpoint",
                "required": true
              },
              "value": {
                "name": "union",
                "raw": "`horizontal` | `vertical`",
                "elements": [{
                  "name": "literal",
                  "value": "undefined"
                }, {
                  "name": "literal",
                  "value": "undefined"
                }]
              }
            }]
          }
        }],
        "raw": "Partial<\n  {\n    [MediaBreakpoint in ThemeMediaBreakpoint]: SpacerDirection\n  }\n>"
      },
      "description": ""
    },
    "size": {
      "required": true,
      "tsType": {
        "name": "ThemeSpace"
      },
      "description": ""
    },
    "className": {
      "required": false,
      "tsType": {
        "name": "string"
      },
      "description": ""
    }
  }
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/Spacer/Spacer.tsx"] = {
    name: "Spacer",
    docgenInfo: Spacer.__docgenInfo,
    path: "src/components/Spacer/Spacer.tsx"
  };
}

export { Spacer };
//# sourceMappingURL=Spacer.esm.js.map
