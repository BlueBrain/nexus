import { extends as _extends, taggedTemplateLiteral as _taggedTemplateLiteral } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import { keyframes, jsx } from '@emotion/core';
import { ModalContent } from './ModalContent.esm.js';

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  100% {\n     transform: translate(0, 0) scale(1) perspective(1000px) rotateX(0);\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
var rotationIncoming = keyframes(_templateObject());

var baseCss = function baseCss(theme) {
  return {
    background: theme.colors.white,
    height: "100vh",
    width: "100%",
    position: "relative",
    overflowY: "auto",
    overflowX: "hidden",
    animation: "".concat(rotationIncoming, " 0.5s 0.25s ease forwards"),
    transform: "translate(0, 150vh) scale(0.9) perspective(1000px) rotateX(-90deg)",
    transformOrigin: "top center"
  };
};

var ModalFullScreen = function ModalFullScreen(props) {
  return jsx(ModalContent, _extends({
    css: baseCss
  }, props));
};
ModalFullScreen.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "ModalFullScreen"
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/Modal/ModalFullScreen.tsx"] = {
    name: "ModalFullScreen",
    docgenInfo: ModalFullScreen.__docgenInfo,
    path: "src/components/Modal/ModalFullScreen.tsx"
  };
}

export { ModalFullScreen };
//# sourceMappingURL=ModalFullScreen.esm.js.map
