import { defineProperty as _defineProperty, taggedTemplateLiteral as _taggedTemplateLiteral } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import { keyframes } from '@emotion/core';
import '../../utils/helpers/secureTargetBlankLink.esm.js';
import '../../utils/helpers/copyToClipboard.esm.js';
import '../../utils/helpers/testSafeRandomness.esm.js';
import { hexToRGBA } from '../../utils/helpers/hexToRgb.esm.js';

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  100% {\n     opacity: 1\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
var entry = keyframes(_templateObject());
var headerCss = function headerCss(theme) {
  var _ref;

  return _ref = {
    display: "flex",
    alignItems: "center",
    justifyContent: "space-between",
    padding: "".concat(theme.space[7], " ").concat(theme.space[8]),
    borderRadius: "".concat(theme.radii[3], " ").concat(theme.radii[3], " 0 0"),
    background: theme.colors.white
  }, _defineProperty(_ref, theme.mediaQueries.mobile, {
    paddingLeft: theme.space[8],
    paddingRight: theme.space[8]
  }), _defineProperty(_ref, theme.mediaQueries.phablet, {
    paddingLeft: theme.space[9],
    paddingRight: theme.space[9]
  }), _ref;
};
var titleCss = function titleCss(theme) {
  return {
    animation: "".concat(entry, " 0.75s 0.7s ease forwards"),
    fontSize: theme.fontSizes[4],
    opacity: 0
  };
};
var CLOSE_BUTTON_SIZE = 40;
var CLOSE_ICON_SIZE = 20;
var closeButtonCss = function closeButtonCss(_theme) {
  return {
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    flexShrink: 0,
    border: "none",
    background: "none",
    padding: 0,
    cursor: "pointer",
    width: CLOSE_BUTTON_SIZE,
    height: CLOSE_BUTTON_SIZE,
    transform: "translateX(".concat(CLOSE_BUTTON_SIZE - CLOSE_ICON_SIZE / 2, ")")
  };
};
var closeIconCss = function closeIconCss(_theme) {
  return {
    width: CLOSE_ICON_SIZE,
    height: CLOSE_ICON_SIZE
  };
};
var bodyCss = function bodyCss(theme) {
  var _ref2;

  return _ref2 = {
    display: "flex",
    flexDirection: "column",
    background: theme.colors.white,
    padding: "".concat(theme.space[5], " ").concat(theme.space[8], " ").concat(theme.space[7]),
    borderRadius: "0 0 ".concat(theme.radii[3], " ").concat(theme.radii[3]),
    animation: "".concat(entry, " 0.75s 0.8s ease forwards"),
    opacity: 0
  }, _defineProperty(_ref2, theme.mediaQueries.mobile, {
    paddingTop: theme.space[7],
    paddingBottom: theme.space[7],
    paddingRight: theme.space[7],
    paddingLeft: theme.space[7]
  }), _defineProperty(_ref2, theme.mediaQueries.phablet, {
    paddingTop: theme.space[8],
    paddingBottom: theme.space[8],
    paddingRight: theme.space[8],
    paddingLeft: theme.space[8]
  }), _ref2;
};

var bodyGradientBaseCss = function bodyGradientBaseCss(theme) {
  return {
    position: "relative",
    ":before": {
      position: "absolute",
      content: '""',
      top: "0",
      left: "0",
      width: "100%",
      height: "5px",
      backgroundSize: "50px 50px",
      backgroundImage: "linear-gradient(\n        130deg,\n        ".concat(hexToRGBA(theme.colors.white, 0.5, true), " 25%,\n        transparent 25%,\n        transparent 50%,\n        ").concat(hexToRGBA(theme.colors.white, 0.5, true), " 50%,\n        ").concat(hexToRGBA(theme.colors.white, 0.5, true), " 75%,\n        transparent 75%,\n        transparent\n      )")
    }
  };
};

var bodyVariantCss = {
  DEFAULT: function DEFAULT(_theme) {
    return {};
  },
  SUCCESS: function SUCCESS(theme) {
    return {
      backgroundColor: theme.colors.green[5],
      borderTop: "1px solid ".concat(theme.colors.green[10])
    };
  },
  WARNING: function WARNING(theme) {
    return [bodyGradientBaseCss(theme), {
      backgroundColor: theme.colors.red[5],
      ":before": {
        backgroundColor: hexToRGBA(theme.colors.red[50], 0.8, true)
      }
    }];
  },
  ERROR: function ERROR(theme) {
    return {
      backgroundColor: theme.colors.red[5],
      borderTop: "1px solid ".concat(theme.colors.red[10])
    };
  },
  ACTION: function ACTION(theme) {
    return {
      backgroundColor: theme.colors.purple[5],
      borderTop: "1px solid ".concat(theme.colors.purple[10])
    };
  },
  RETAKE: function RETAKE(theme) {
    return [bodyGradientBaseCss(theme), {
      backgroundColor: theme.colors.purple[5],
      ":before": {
        backgroundColor: hexToRGBA(theme.colors.purple[50], 0.8, true)
      }
    }];
  }
};
var actionsCss = function actionsCss(theme) {
  return _defineProperty({
    display: "flex",
    alignItems: "center",
    justifyContent: "space-between",
    width: "100%",
    marginTop: theme.space[7]
  }, theme.mediaQueries.desktop, {
    marginTop: theme.space[8]
  });
};

export { actionsCss, bodyCss, bodyVariantCss, closeButtonCss, closeIconCss, headerCss, titleCss };
//# sourceMappingURL=StyledModal.styles.esm.js.map
