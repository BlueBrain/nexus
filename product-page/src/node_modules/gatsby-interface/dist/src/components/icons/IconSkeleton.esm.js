import { objectWithoutProperties as _objectWithoutProperties, extends as _extends, objectSpread2 as _objectSpread2 } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import React__default from 'react';

var iconHeightBySize = {
  inherit: "1em",
  xxsmall: "16px",
  xsmall: "20px",
  small: "24px",
  medium: "32px",
  large: "40px"
};
function IconSkeleton(_ref) {
  var iconName = _ref.iconName,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? "small" : _ref$size,
      style = _ref.style,
      _ref$applyColorToStro = _ref.applyColorToStroke,
      applyColorToStroke = _ref$applyColorToStro === void 0 ? true : _ref$applyColorToStro,
      rest = _objectWithoutProperties(_ref, ["iconName", "size", "style", "applyColorToStroke"]);

  return /*#__PURE__*/React__default.createElement("svg", _extends({
    preserveAspectRatio: "xMidYMid meet",
    height: iconHeightBySize[size],
    width: iconHeightBySize[size],
    viewBox: "0 0 24 24",
    fill: applyColorToStroke ? "none" : "currentColor",
    stroke: applyColorToStroke ? "currentColor" : "none",
    strokeWidth: "1",
    fillRule: "evenodd",
    "data-testid": "icon-".concat(iconName),
    style: _objectSpread2({
      verticalAlign: "middle"
    }, style || {}),
    "aria-hidden": true
  }, rest));
}
IconSkeleton.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "IconSkeleton",
  "props": {
    "size": {
      "defaultValue": {
        "value": "`small`",
        "computed": false
      },
      "required": false
    },
    "applyColorToStroke": {
      "defaultValue": {
        "value": "true",
        "computed": false
      },
      "required": false
    }
  }
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/icons/IconSkeleton.tsx"] = {
    name: "IconSkeleton",
    docgenInfo: IconSkeleton.__docgenInfo,
    path: "src/components/icons/IconSkeleton.tsx"
  };
}

export default IconSkeleton;
export { iconHeightBySize };
//# sourceMappingURL=IconSkeleton.esm.js.map
