import { extends as _extends, objectWithoutProperties as _objectWithoutProperties } from '../../../../_virtual/_rollupPluginBabelHelpers.js';
import React__default from 'react';
import _pt from 'prop-types';
import { getFinalAriaDescribedBy } from '../utils/index.esm.js';
import { useFormFieldSkeleton, FormFieldSkeleton } from './FormFieldSkeleton.esm.js';

function FormGroupFieldSkeleton(_ref) {
  var id = _ref.id,
      hasError = _ref.hasError,
      hasHint = _ref.hasHint,
      children = _ref.children,
      className = _ref.className,
      style = _ref.style;
  return /*#__PURE__*/React__default.createElement(FormFieldSkeleton, {
    id: id,
    hasError: hasError,
    hasHint: hasHint
  }, /*#__PURE__*/React__default.createElement("div", {
    role: "group",
    id: id,
    "aria-labelledby": "".concat(id, "__legend"),
    className: className,
    style: style
  }, children));
}
var FormGroupFieldSkeletonLabel = function FormGroupFieldSkeletonLabel(props) {
  var _useFormFieldSkeleton = useFormFieldSkeleton(),
      id = _useFormFieldSkeleton.id;

  return /*#__PURE__*/React__default.createElement("div", _extends({}, props, {
    id: "".concat(id, "__legend")
  }));
};
var FormGroupFieldSkeletonOption = React__default.forwardRef(function FormGroupFieldSkeletonOption(props, ref) {
  var _useFormFieldSkeleton2 = useFormFieldSkeleton(),
      id = _useFormFieldSkeleton2.id,
      hasError = _useFormFieldSkeleton2.hasError,
      meta = _useFormFieldSkeleton2.meta; // We have to set aria-describedby for EACH option (see https://russmaxdesign.github.io/accessible-error-fieldset/)


  return /*#__PURE__*/React__default.createElement("input", _extends({
    id: getGroupOptionId(id, props.value)
  }, props, {
    "aria-describedby": getFinalAriaDescribedBy(meta.controlDescribedBy, props["aria-describedby"]),
    "aria-invalid": hasError,
    ref: ref
  }));
});
FormGroupFieldSkeletonOption.propTypes = {
  name: _pt.string.isRequired,
  value: _pt.string.isRequired
};
var FormGroupFieldSkeletonOptionLabel = function FormGroupFieldSkeletonOptionLabel(_ref2) {
  var optionValue = _ref2.optionValue,
      rest = _objectWithoutProperties(_ref2, ["optionValue"]);

  var _useFormFieldSkeleton3 = useFormFieldSkeleton(),
      id = _useFormFieldSkeleton3.id;

  return /*#__PURE__*/React__default.createElement("label", _extends({
    htmlFor: getGroupOptionId(id, optionValue)
  }, rest));
};
FormGroupFieldSkeletonOptionLabel.propTypes = {
  optionValue: _pt.string.isRequired
};

function getGroupOptionId(fieldId, optionValue) {
  return "".concat(fieldId, "__option--").concat(optionValue);
}

FormGroupFieldSkeleton.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "FormGroupFieldSkeleton"
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/form-skeletons/components/FormGroupFieldSkeleton.tsx"] = {
    name: "FormGroupFieldSkeleton",
    docgenInfo: FormGroupFieldSkeleton.__docgenInfo,
    path: "src/components/form-skeletons/components/FormGroupFieldSkeleton.tsx"
  };
}

FormGroupFieldSkeletonLabel.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "FormGroupFieldSkeletonLabel"
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/form-skeletons/components/FormGroupFieldSkeleton.tsx"] = {
    name: "FormGroupFieldSkeletonLabel",
    docgenInfo: FormGroupFieldSkeletonLabel.__docgenInfo,
    path: "src/components/form-skeletons/components/FormGroupFieldSkeleton.tsx"
  };
}

FormGroupFieldSkeletonOption.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "FormGroupFieldSkeletonOption"
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/form-skeletons/components/FormGroupFieldSkeleton.tsx"] = {
    name: "FormGroupFieldSkeletonOption",
    docgenInfo: FormGroupFieldSkeletonOption.__docgenInfo,
    path: "src/components/form-skeletons/components/FormGroupFieldSkeleton.tsx"
  };
}

FormGroupFieldSkeletonOptionLabel.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "FormGroupFieldSkeletonOptionLabel"
};

if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["src/components/form-skeletons/components/FormGroupFieldSkeleton.tsx"] = {
    name: "FormGroupFieldSkeletonOptionLabel",
    docgenInfo: FormGroupFieldSkeletonOptionLabel.__docgenInfo,
    path: "src/components/form-skeletons/components/FormGroupFieldSkeleton.tsx"
  };
}

export { FormGroupFieldSkeleton, FormGroupFieldSkeletonLabel, FormGroupFieldSkeletonOption, FormGroupFieldSkeletonOptionLabel };
//# sourceMappingURL=FormGroupFieldSkeleton.esm.js.map
