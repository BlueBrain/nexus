{"version":3,"file":"CheckboxFieldSkeleton.esm.js","sources":["../../../../../src/components/form-skeletons/components/CheckboxFieldSkeleton.tsx"],"sourcesContent":["import React from \"react\"\nimport {\n  FormFieldSkeleton,\n  FormFieldSkeletonProps,\n  FormFieldSkeletonLabelProps,\n  FormFieldSkeletonHintProps,\n  FormFieldSkeletonErrorProps,\n  FormFieldSkeletonLabel,\n  FormFieldSkeletonHint,\n  FormFieldSkeletonError,\n  useFormFieldSkeleton,\n} from \"./FormFieldSkeleton\"\nimport { getFinalAriaDescribedBy } from \"../utils\"\nimport { OmitControlProps } from \"../sharedTypes\"\n\nexport type CheckboxFieldSkeletonProps = FormFieldSkeletonProps\nexport function CheckboxFieldSkeleton(props: CheckboxFieldSkeletonProps) {\n  return <FormFieldSkeleton {...props} />\n}\n\nexport type CheckboxFieldSkeletonControlProps = Omit<\n  OmitControlProps<JSX.IntrinsicElements[\"input\"]>,\n  \"type\"\n>\n\nexport const CheckboxFieldSkeletonControl = React.forwardRef<\n  HTMLInputElement,\n  CheckboxFieldSkeletonControlProps\n>(function CheckboxFieldSkeletonControl(props, ref) {\n  const { id, hasError, meta } = useFormFieldSkeleton()\n\n  return (\n    <input\n      id={id}\n      {...props}\n      type=\"checkbox\"\n      aria-describedby={getFinalAriaDescribedBy(\n        meta.controlDescribedBy,\n        props[`aria-describedby`]\n      )}\n      aria-invalid={hasError}\n      ref={ref}\n    />\n  )\n})\n\nexport type CheckboxFieldSkeletonLabelProps = FormFieldSkeletonLabelProps\nexport function CheckboxFieldSkeletonLabel(\n  props: CheckboxFieldSkeletonLabelProps\n) {\n  return <FormFieldSkeletonLabel {...props} />\n}\n\nexport type CheckboxFieldSkeletonHintProps = FormFieldSkeletonHintProps\nexport function CheckboxFieldSkeletonHint(\n  props: CheckboxFieldSkeletonHintProps\n) {\n  return <FormFieldSkeletonHint {...props} />\n}\n\nexport type CheckboxFieldSkeletonErrorProps = FormFieldSkeletonErrorProps\nexport function CheckboxFieldSkeletonError(\n  props: CheckboxFieldSkeletonErrorProps\n) {\n  return <FormFieldSkeletonError {...props} />\n}\n"],"names":["CheckboxFieldSkeleton","props","React","CheckboxFieldSkeletonControl","forwardRef","ref","useFormFieldSkeleton","id","hasError","meta","getFinalAriaDescribedBy","controlDescribedBy","CheckboxFieldSkeletonLabel","CheckboxFieldSkeletonHint","CheckboxFieldSkeletonError"],"mappings":";;;;;AAgBO,SAASA,qBAAT,CAA+BC,KAA/B,EAAkE;AACvE,sBAAOC,6BAAC,iBAAD,EAAuBD,KAAvB,CAAP;AACD;IAOYE,4BAA4B,GAAGD,cAAK,CAACE,UAAN,CAG1C,SAASD,4BAAT,CAAsCF,KAAtC,EAA6CI,GAA7C,EAAkD;AAAA,8BACnBC,oBAAoB,EADD;AAAA,MAC1CC,EAD0C,yBAC1CA,EAD0C;AAAA,MACtCC,QADsC,yBACtCA,QADsC;AAAA,MAC5BC,IAD4B,yBAC5BA,IAD4B;;AAGlD,sBACEP;AACE,IAAA,EAAE,EAAEK;AADN,KAEMN,KAFN;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,wBAAkBS,uBAAuB,CACvCD,IAAI,CAACE,kBADkC,EAEvCV,KAAK,oBAFkC,CAJ3C;AAQE,oBAAcO,QARhB;AASE,IAAA,GAAG,EAAEH;AATP,KADF;AAaD,CAnB2C;AAsBrC,SAASO,0BAAT,CACLX,KADK,EAEL;AACA,sBAAOC,6BAAC,sBAAD,EAA4BD,KAA5B,CAAP;AACD;AAGM,SAASY,yBAAT,CACLZ,KADK,EAEL;AACA,sBAAOC,6BAAC,qBAAD,EAA2BD,KAA3B,CAAP;AACD;AAGM,SAASa,0BAAT,CACLb,KADK,EAEL;AACA,sBAAOC,6BAAC,sBAAD,EAA4BD,KAA5B,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}