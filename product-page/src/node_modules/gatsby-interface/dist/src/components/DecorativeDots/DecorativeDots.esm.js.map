{"version":3,"file":"DecorativeDots.esm.js","sources":["../../../../src/components/DecorativeDots/DecorativeDots.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport colors from \"../../theme/colors\"\nimport {\n  testSafeMathRandom,\n  testSafeSample,\n} from \"../../utils/helpers/testSafeRandomness\"\n\nimport { getLikelihoodOfBeingBlank } from \"./DecorativeDots.helpers\"\nimport Dot, { DotProps } from \"./Dot\"\n\ninterface DecorativeDotsProps {\n  width: number\n  height: number\n  dotSize: number\n  angle?: number\n  fadeStrength?: number\n}\n\n// These colors were chosen somewhat haphazardly from previous assets.\n// For now, this is not customizable, colors are meant to be semi-randomly\n// drawn from our design palette.\nconst COLORS = [\n  colors.red[40],\n  colors.red[60],\n  colors.orange[40],\n  colors.orange[60],\n  colors.yellow[40],\n  colors.green[20],\n  colors.green[40],\n  colors.blue[20],\n  colors.blue[40],\n  colors.magenta[20],\n  colors.magenta[50],\n  colors.purple[40],\n  colors.purple[60],\n  colors.teal[20],\n  colors.teal[50],\n  colors.teal[70],\n]\n\n// Every circle is given a random opacity, but it's weighted so that outliers\n// don't happen much.\nconst OPACITIES = [0.15, 0.25, 0.25, 0.25, 0.5, 0.5, 0.75]\n\nconst generateDotData = (\n  numRows: number,\n  numCols: number,\n  angle: number,\n  dotSize: number,\n  fadeStrength: number\n): Array<DotProps> => {\n  const dots = []\n\n  const dotSpacing = Math.round(dotSize / 10)\n  const totalDotSpace = dotSize + dotSpacing\n\n  for (let rowIndex = 0; rowIndex < numRows; rowIndex++) {\n    for (let colIndex = 0; colIndex < numCols; colIndex++) {\n      const likelihoodOfBeingBlank = getLikelihoodOfBeingBlank(\n        angle,\n        colIndex,\n        rowIndex,\n        numCols,\n        numRows\n      )\n\n      const isBlank =\n        likelihoodOfBeingBlank * testSafeMathRandom() < fadeStrength\n\n      if (!isBlank) {\n        dots.push({\n          x: colIndex * totalDotSpace,\n          y: rowIndex * totalDotSpace,\n          color: testSafeSample(COLORS) as string,\n          opacity: testSafeSample(OPACITIES) as number,\n          size: dotSize,\n        })\n      }\n    }\n  }\n\n  return dots\n}\n\nconst dotSvgStyles = {\n  // We want to let the circles at the edge of the SVG spill out, not get\n  // cropped by the SVG boundaries. Cropping will naturally occur if we\n  // position this SVG at an edge of the viewport =)\n  overflow: `visible`,\n}\n\nconst DecorativeDots: React.FC<DecorativeDotsProps> = ({\n  width,\n  height,\n  dotSize,\n  angle = 0,\n  fadeStrength = 0.25,\n}) => {\n  const numRows = Math.floor(height / dotSize)\n  const numCols = Math.floor(width / dotSize)\n\n  const dots = generateDotData(numRows, numCols, angle, dotSize, fadeStrength)\n\n  return (\n    <svg width={width} height={height} style={dotSvgStyles} aria-hidden={true}>\n      {dots.map((dot, i) => (\n        <Dot\n          key={i}\n          x={dot.x}\n          y={dot.y}\n          color={dot.color}\n          opacity={dot.opacity}\n          size={dot.size}\n        />\n      ))}\n    </svg>\n  )\n}\n\nexport default React.memo(DecorativeDots)\n"],"names":["COLORS","colors","red","orange","yellow","green","blue","magenta","purple","teal","OPACITIES","generateDotData","numRows","numCols","angle","dotSize","fadeStrength","dots","dotSpacing","Math","round","totalDotSpace","rowIndex","colIndex","likelihoodOfBeingBlank","getLikelihoodOfBeingBlank","isBlank","testSafeMathRandom","push","x","y","color","testSafeSample","opacity","size","dotSvgStyles","overflow","DecorativeDots","width","height","floor","React.createElement","map","dot","i","React"],"mappings":"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"}