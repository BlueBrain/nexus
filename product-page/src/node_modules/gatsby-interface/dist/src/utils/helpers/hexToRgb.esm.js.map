{"version":3,"file":"hexToRgb.esm.js","sources":["../../../../src/utils/helpers/hexToRgb.ts"],"sourcesContent":["export function hexToRGB(hex: string) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n      }\n    : null\n}\n\nexport function hexToRGBA(hexColor: string, opacity: number, isCssVar = false) {\n  let hexStringToParse = hexColor\n\n  if (isCssVar) {\n    // If the passed string is a CSS var coming from ThemeUI (e.g. \"var(--theme-ui-colors-white, #ffffff)\"),\n    // we can extract the HEX value and parse it\n    const hexMatch = hexColor.match(/#([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})/i)\n    if (hexMatch && hexMatch[0]) {\n      hexStringToParse = hexMatch[0]\n    }\n  }\n\n  const rgbColor = hexToRGB(hexStringToParse)\n  if (!rgbColor) {\n    return hexColor\n  }\n  return `rgba(${rgbColor.r}, ${rgbColor.g}, ${rgbColor.b}, ${opacity})`\n}\n"],"names":["hexToRGB","hex","result","exec","r","parseInt","g","b","hexToRGBA","hexColor","opacity","isCssVar","hexStringToParse","hexMatch","match","rgbColor"],"mappings":"AAAO,SAASA,QAAT,CAAkBC,GAAlB,EAA+B;AACpC,MAAMC,MAAM,GAAG,4CAA4CC,IAA5C,CAAiDF,GAAjD,CAAf;AACA,SAAOC,MAAM,GACT;AACEE,IAAAA,CAAC,EAAEC,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CADb;AAEEI,IAAAA,CAAC,EAAED,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAFb;AAGEK,IAAAA,CAAC,EAAEF,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ;AAHb,GADS,GAMT,IANJ;AAOD;AAEM,SAASM,SAAT,CAAmBC,QAAnB,EAAqCC,OAArC,EAAwE;AAAA,MAAlBC,QAAkB,uEAAP,KAAO;AAC7E,MAAIC,gBAAgB,GAAGH,QAAvB;;AAEA,MAAIE,QAAJ,EAAc;AACZ;AACA;AACA,QAAME,QAAQ,GAAGJ,QAAQ,CAACK,KAAT,CAAe,wCAAf,CAAjB;;AACA,QAAID,QAAQ,IAAIA,QAAQ,CAAC,CAAD,CAAxB,EAA6B;AAC3BD,MAAAA,gBAAgB,GAAGC,QAAQ,CAAC,CAAD,CAA3B;AACD;AACF;;AAED,MAAME,QAAQ,GAAGf,QAAQ,CAACY,gBAAD,CAAzB;;AACA,MAAI,CAACG,QAAL,EAAe;AACb,WAAON,QAAP;AACD;;AACD,wBAAeM,QAAQ,CAACX,CAAxB,eAA8BW,QAAQ,CAACT,CAAvC,eAA6CS,QAAQ,CAACR,CAAtD,eAA4DG,OAA5D;AACD;;;;"}