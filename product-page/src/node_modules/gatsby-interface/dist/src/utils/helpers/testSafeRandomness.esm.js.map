{"version":3,"file":"testSafeRandomness.esm.js","sources":["../../../../src/utils/helpers/testSafeRandomness.ts"],"sourcesContent":["/**\n  Some components are impure - a good example is DecorativeDots,\n  which purposefully produces a different value for every \n  instance.\n\n  This works fine in dev/prod, but causes problems with our\n  tests - snapshot tests expect consistent UI given a set of \n  props!\n\n  These functions can be used instead, which provide consistent\n  values while in the 'test' environment.\n*/\n\nimport sample from \"lodash.sample\"\n\nexport const testSafeMathRandom = (defaultValue = 0.5) => {\n  if (process.env.NODE_ENV === \"test\") {\n    return defaultValue\n  }\n\n  return Math.random()\n}\n\nexport const testSafeSample = (arr: Array<any>, defaultIndex = 0) => {\n  if (process.env.NODE_ENV === \"test\") {\n    return arr[defaultIndex]\n  }\n\n  return sample(arr)\n}\n"],"names":["testSafeMathRandom","defaultValue","process","env","NODE_ENV","Math","random","testSafeSample","arr","defaultIndex","sample"],"mappings":";;AAAA;;;;;;;;;;;;IAeaA,kBAAkB,GAAG,SAArBA,kBAAqB,GAAwB;AAAA,MAAvBC,YAAuB,uEAAR,GAAQ;;AACxD,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAA7B,EAAqC;AACnC,WAAOH,YAAP;AACD;;AAED,SAAOI,IAAI,CAACC,MAAL,EAAP;AACD;IAEYC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAAuC;AAAA,MAArBC,YAAqB,uEAAN,CAAM;;AACnE,MAAIP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAA7B,EAAqC;AACnC,WAAOI,GAAG,CAACC,YAAD,CAAV;AACD;;AAED,SAAOC,MAAM,CAACF,GAAD,CAAb;AACD;;;;"}