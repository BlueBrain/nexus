function hexToRGB(hex) {
  var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
  return result ? {
    r: parseInt(result[1], 16),
    g: parseInt(result[2], 16),
    b: parseInt(result[3], 16)
  } : null;
}
function hexToRGBA(hexColor, opacity) {
  var isCssVar = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var hexStringToParse = hexColor;

  if (isCssVar) {
    // If the passed string is a CSS var coming from ThemeUI (e.g. "var(--theme-ui-colors-white, #ffffff)"),
    // we can extract the HEX value and parse it
    var hexMatch = hexColor.match(/#([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})/i);

    if (hexMatch && hexMatch[0]) {
      hexStringToParse = hexMatch[0];
    }
  }

  var rgbColor = hexToRGB(hexStringToParse);

  if (!rgbColor) {
    return hexColor;
  }

  return "rgba(".concat(rgbColor.r, ", ").concat(rgbColor.g, ", ").concat(rgbColor.b, ", ").concat(opacity, ")");
}

export { hexToRGB, hexToRGBA };
//# sourceMappingURL=hexToRgb.esm.js.map
