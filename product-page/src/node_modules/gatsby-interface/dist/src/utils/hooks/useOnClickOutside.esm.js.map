{"version":3,"file":"useOnClickOutside.esm.js","sources":["../../../../src/utils/hooks/useOnClickOutside.ts"],"sourcesContent":["import React from \"react\"\n\n// Used to close dropdown on an outside click\nfunction useOnClickOutside<TElement extends Element>(\n  ref: React.RefObject<TElement>,\n  handler: (event: MouseEvent | TouchEvent) => void\n) {\n  React.useEffect(() => {\n    const listener = (event: MouseEvent | TouchEvent) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target as Node)) {\n        return\n      }\n\n      handler(event)\n    }\n    if (document) {\n      document.addEventListener(`mousedown`, listener)\n      document.addEventListener(`touchstart`, listener)\n\n      return () => {\n        document.removeEventListener(`mousedown`, listener)\n        document.removeEventListener(`touchstart`, listener)\n      }\n    }\n  }, [ref, handler])\n}\n\nexport default useOnClickOutside\n"],"names":["useOnClickOutside","ref","handler","React","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener"],"mappings":";;AAGA,SAASA,iBAAT,CACEC,GADF,EAEEC,OAFF,EAGE;AACAC,EAAAA,cAAK,CAACC,SAAN,CAAgB,YAAM;AACpB,QAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAoC;AACnD;AACA,UAAI,CAACL,GAAG,CAACM,OAAL,IAAgBN,GAAG,CAACM,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAgE;AAC9D;AACD;;AAEDP,MAAAA,OAAO,CAACI,KAAD,CAAP;AACD,KAPD;;AAQA,QAAII,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACC,gBAAT,cAAuCN,QAAvC;AACAK,MAAAA,QAAQ,CAACC,gBAAT,eAAwCN,QAAxC;AAEA,aAAO,YAAM;AACXK,QAAAA,QAAQ,CAACE,mBAAT,cAA0CP,QAA1C;AACAK,QAAAA,QAAQ,CAACE,mBAAT,eAA2CP,QAA3C;AACD,OAHD;AAID;AACF,GAlBD,EAkBG,CAACJ,GAAD,EAAMC,OAAN,CAlBH;AAmBD;;;;"}