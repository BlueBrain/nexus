import { forwardRef, createElement } from 'react';
import _objectWithoutPropertiesLoose from '../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.esm.js';
import _extends from '../../node_modules/@babel/runtime/helpers/esm/extends.esm.js';
import FocusLockUI from './Lock.esm.js';
import FocusTrap from './Trap.esm.js';

/* that would be a BREAKING CHANGE!
// delaying sidecar execution till the first usage
const RequireSideCar = (props) => {
  // eslint-disable-next-line global-require
  const SideCar = require('./Trap').default;
  return <SideCar {...props} />;
};
*/

var FocusLockCombination = forwardRef(function (props, ref) {
  return createElement(FocusLockUI, _extends({
    sideCar: FocusTrap,
    ref: ref
  }, props));
});

var _ref = FocusLockUI.propTypes || {},
    sideCar = _ref.sideCar,
    propTypes = _objectWithoutPropertiesLoose(_ref, ["sideCar"]);

FocusLockCombination.propTypes = propTypes;

export default FocusLockCombination;
//# sourceMappingURL=Combination.esm.js.map
