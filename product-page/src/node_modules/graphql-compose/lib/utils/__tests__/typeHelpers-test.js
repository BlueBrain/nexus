"use strict";

var _typeHelpers = require("../typeHelpers");

var _graphql = require("../../graphql");

var _ = require("../..");

describe('typeHelpers', () => {
  describe('getComposeTypeName()', () => {
    it('understand strings', () => {
      expect((0, _typeHelpers.getComposeTypeName)('MyTypeName')).toBe('MyTypeName');
      expect((0, _typeHelpers.getComposeTypeName)('type AAA { f: Int }')).toBe('AAA');
    });
    it('understands GraphQL named types', () => {
      expect((0, _typeHelpers.getComposeTypeName)(new _graphql.GraphQLObjectType({
        name: 'OutputType',
        fields: () => ({})
      }))).toBe('OutputType');
      expect((0, _typeHelpers.getComposeTypeName)(new _graphql.GraphQLInputObjectType({
        name: 'InputType',
        fields: () => ({})
      }))).toBe('InputType');
    });
    it('understands compose types', () => {
      expect((0, _typeHelpers.getComposeTypeName)(_.schemaComposer.createObjectTC('TypeTC'))).toBe('TypeTC');
      expect((0, _typeHelpers.getComposeTypeName)(_.schemaComposer.createInputTC('TypeITC'))).toBe('TypeITC');
    });
  });
});