{"version":3,"sources":["webpack:///./static/img/delta.png","webpack:///./src/components/ProductDiagram.tsx","webpack:///./src/libs/browser.ts","webpack:///./src/templates/ProductPage.tsx","webpack:///./static/img/forge.png","webpack:///./static/img/fusion.png"],"names":["module","exports","ProductDiagram","diagram","name","fusion","delta","forge","className","src","isSmall","window","document","body","clientWidth","ProductPage","product","pageContext","slug","tagLine","description","overviewText","overviewItems","featureText","features","additionalInfo","doc","docsLink","pathname","useLocation","object","replace","hasOverviewItems","length","Main","Fun","style","position","top","href","onClick","scrollIntoView","Features","title","subtitle","EmailCatch","id","map","item","index","key"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,qD,oLC8B5BC,EAxBoC,SAAC,GAAa,IAC3DC,EAEJ,OAH+D,EAAXC,MAIlD,IAAK,eACHD,EAAUE,IACV,MACF,IAAK,cACHF,EAAUG,IACV,MACF,IAAK,cACHH,EAAUI,IACV,MACF,QACEJ,EAAUE,IAGd,OACE,uBAAKG,UAAU,mBACb,uBAAKC,IAAKN,M,YCtBHO,EAAU,iBAFH,oBAAXC,QAA8C,oBAAbC,UAEEA,SAASC,KAAKC,aAAe,KCyH1DC,UArGsD,SAAC,GAEhE,IADWC,EACX,EADJC,YAAeD,QAGbZ,EAUEY,EAVFZ,KACAc,EASEF,EATFE,KACAC,EAQEH,EARFG,QACAC,EAOEJ,EAPFI,YACAC,EAMEL,EANFK,aACAC,EAKEN,EALFM,cACAC,EAIEP,EAJFO,YACAC,EAGER,EAHFQ,SACAC,EAEET,EAFFS,eACUC,EACRV,EADFW,SAGMC,EAAaC,wBAAbD,SAEFE,EACK,iBAATZ,EAA0B,MAAiB,gBAATA,EAAyB,MAAQ,UAE/DS,EAAWD,GAAG,kCAEkBR,EAAKa,QAAQ,SAAU,IAFzC,QAIdC,IAAqBV,GAAiBA,EAAcW,OAE1D,OACE,gBAACC,EAAA,EAAD,KACE,2BAAS1B,UAAU,sBACjB,uBAAKA,UAAU,eACb,uBAAKA,UAAU,0BACbE,KAAa,gBAACyB,EAAA,EAAD,CAAKL,OAAQA,KAE9B,uBAAKtB,UAAU,aACb,uBACEA,UAAU,YACV4B,MAAO,CAAEC,SAAU,WAAYC,IAAK,SAEpC,sBAAI9B,UAAU,mBAAmBJ,GACjC,sBAAII,UAAU,YACZ,0BAAKW,IAEP,qBAAGX,UAAU,YAAYY,GACzB,uBAAKZ,UAAU,WACb,uBAAKA,UAAU,UACb,qBACE+B,KAAK,YACLC,QAASC,YAAeb,EAAU,aAElC,0BAAQpB,UAAU,UAAlB,cAGJ,uBAAKA,UAAU,UACb,qBAAG+B,KAAMZ,GACP,0BAAQnB,UAAU,UAAlB,cAOZ,gBAACkC,EAAA,EAAD,CAAUC,MAAM,WAAWC,SAAUrB,EAAaC,SAAUA,IAC5D,gBAACqB,EAAA,EAAD,MACA,2BAASC,GAAG,YACV,uBAAKtC,UAAU,aACb,uBAAKA,UAAS,aAAcwB,GAAoB,aAC9C,sBAAIxB,UAAU,uBACXJ,EAAK2B,QAAQ,SAAU,IAD1B,+BAGCC,EACC,uBAAKxB,UAAU,WACb,uBAAKA,UAAU,UACb,yBAAIa,GACJ,sBAAIb,UAAU,QACXc,aADH,EACGA,EAAeyB,KAAI,SAACC,EAAMC,GAAP,OAClB,sBAAIC,IAAG,YAAcD,GACnB,yBAAID,SAKZ,uBAAKxC,UAAU,UACb,gBAAC,EAAD,CAAgBJ,KAAMc,MAI1B,gCACE,yBAAIG,GACJ,gBAAC,EAAD,CAAgBjB,KAAMc,KAI1B,yBAAIO,S,qBCpHhBzB,EAAOC,QAAU,IAA0B,qD,qBCA3CD,EAAOC,QAAU,IAA0B","file":"component---src-templates-product-page-tsx-99c617d7f799692592b9.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/delta-394ca498f0bc76c6a45b3159ec3fa2fb.png\";","import * as React from \"react\"\n\nimport fusion from \"../../static/img/fusion.png\"\nimport delta from \"../../static/img/delta.png\"\nimport forge from \"../../static/img/forge.png\"\n\nconst ProductDiagram: React.FC<{ name: string }> = ({ name }) => {\n  let diagram\n\n  switch (name) {\n    case \"nexus-fusion\":\n      diagram = fusion\n      break\n    case \"nexus-delta\":\n      diagram = delta\n      break\n    case \"nexus-forge\":\n      diagram = forge\n      break\n    default:\n      diagram = fusion\n  }\n\n  return (\n    <div className=\"product-diagram\">\n      <img src={diagram} />\n    </div>\n  )\n}\n\nexport default ProductDiagram\n","export const isBrowser = () =>\n  typeof window !== \"undefined\" && typeof document !== \"undefined\"\n\nexport const isSmall = () => isBrowser() && document.body.clientWidth <= 600\n","import * as React from \"react\"\nimport { useLocation } from \"@reach/router\"\nimport MainLayout from \"../layouts/Main\"\nimport EmailCatch from \"../containers/EmailCatch\"\nimport { scrollIntoView } from \"../libs/scroll\"\nimport Features from \"../components/Features\"\nimport ProductDiagram from \"../components/ProductDiagram\"\nimport Fun from \"../components/Fun\"\nimport { isSmall } from \"../libs/browser\"\n\nexport type Product = {\n  name: string\n  slug: string\n  features: { title: string; description: string }[]\n  overviewText: string\n  overviewItems?: string[]\n  docsLink?: string\n  featureText: string\n  tagLine: string\n  description: string\n  additionalInfo?: string\n}\n\nconst ProductPage: React.FC<{ pageContext: { product: Product } }> = ({\n  pageContext: { product },\n}) => {\n  const {\n    name,\n    slug,\n    tagLine,\n    description,\n    overviewText,\n    overviewItems,\n    featureText,\n    features,\n    additionalInfo,\n    docsLink: doc,\n  } = product\n\n  const { pathname } = useLocation()\n\n  const object =\n    slug === \"nexus-fusion\" ? \"Ico\" : slug === \"nexus-forge\" ? \"Box\" : \"Pyramid\"\n\n  const docsLink = doc\n    ? doc\n    : `https://bluebrainnexus.io/docs/${slug.replace(\"nexus-\", \"\")}.html`\n\n  const hasOverviewItems = !!overviewItems && overviewItems.length\n\n  return (\n    <MainLayout>\n      <section className=\"hero is-fullheight\">\n        <div className=\"full-height\">\n          <div className=\"gradient subtraction\" />\n          {!isSmall() && <Fun object={object} />}\n        </div>\n        <div className=\"hero-body\">\n          <div\n            className=\"container\"\n            style={{ position: \"relative\", top: \"-2em\" }}\n          >\n            <h1 className=\"title is-spaced\">{name}</h1>\n            <h2 className=\"subtitle\">\n              <em>{tagLine}</em>\n            </h2>\n            <p className=\"subtitle\">{description}</p>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <a\n                  href=\"#features\"\n                  onClick={scrollIntoView(pathname, \"features\")}\n                >\n                  <button className=\"button\">Features</button>\n                </a>\n              </div>\n              <div className=\"column\">\n                <a href={docsLink}>\n                  <button className=\"button\">Docs</button>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Features title=\"Features\" subtitle={featureText} features={features} />\n      <EmailCatch />\n      <section id=\"overview\">\n        <div className=\"container\">\n          <div className={`content ${!hasOverviewItems && \"centered\"}`}>\n            <h2 className=\"title text-centered\">\n              {name.replace(\"Nexus \", \"\")} inside the Nexus ecosystem\n            </h2>\n            {hasOverviewItems ? (\n              <div className=\"columns\">\n                <div className=\"column\">\n                  <p>{overviewText}</p>\n                  <ul className=\"list\">\n                    {overviewItems?.map((item, index) => (\n                      <li key={`list-elm-${index}`}>\n                        <p>{item}</p>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                <div className=\"column\">\n                  <ProductDiagram name={slug} />\n                </div>\n              </div>\n            ) : (\n              <>\n                <p>{overviewText}</p>\n                <ProductDiagram name={slug} />\n              </>\n            )}\n\n            <p>{additionalInfo}</p>\n          </div>\n        </div>\n      </section>\n    </MainLayout>\n  )\n}\n\nexport default ProductPage\n","module.exports = __webpack_public_path__ + \"static/forge-94ced717999e2e1610280a4e7a7238d4.png\";","module.exports = __webpack_public_path__ + \"static/fusion-ca4691f55a08e638b89fbe29afbae8d1.png\";"],"sourceRoot":""}