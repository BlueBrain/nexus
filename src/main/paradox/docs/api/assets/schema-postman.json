{
  "id": "047b8d59-d8cd-4e86-8e0c-0048564b48d1",
  "name": "Schema",
  "description": "",
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": ""
      }
    ]
  },
  "events": null,
  "variables": [],
  "order": [
    "2d58b376-af43-4945-9a16-b2207fa9df91",
    "f9a1d0de-418c-479b-aa24-ff544f7492dd",
    "677f5444-d56e-42d7-8d46-09159a9ee877",
    "f82b34a0-c3a1-4feb-a86c-cb20c7511dd7",
    "030b8075-1e7f-4c36-a42a-b8f0837ce7a9",
    "68475235-a415-41c7-b356-6a2115948a4a",
    "29e27544-da05-42e4-b8ea-75d1e8cd2aa7",
    "d2c04730-d6a9-4473-974d-27568dad00c0",
    "ee17e7ac-4f1b-4ef3-970c-ae0d1c476be5"
  ],
  "folders_order": [],
  "folders": [],
  "requests": [
    {
      "id": "030b8075-1e7f-4c36-a42a-b8f0837ce7a9",
      "name": "Deprecate a schema",
      "url": "{{host}}\/v1\/schemas\/myorg\/myproject\/base:myid\/tags?rev=3",
      "description": "Deprecates the schema with id 'base:myid' on the project 'myproject' inside the organization 'myorg'",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "description": "",
          "key": "Content-Type",
          "name": "Content-Type",
          "type": "text",
          "value": "application\/json"
        }
      ],
      "method": "DELETE",
      "pathVariableData": [],
      "queryParams": [
        {
          "key": "rev",
          "value": "3",
          "equals": true,
          "description": "",
          "enabled": true
        }
      ],
      "auth": null,
      "events": [],
      "folder": null,
      "currentHelper": null,
      "helperAttributes": null,
      "collectionId": "047b8d59-d8cd-4e86-8e0c-0048564b48d1",
      "rawModeData": "",
      "headers": "Content-Type: application\/json\n",
      "pathVariables": []
    },
    {
      "id": "29e27544-da05-42e4-b8ea-75d1e8cd2aa7",
      "name": "Fetch a schema (specific revision)",
      "url": "{{host}}\/v1\/schemas\/myorg\/myproject\/base:myid?rev=1",
      "description": "Fetches the schema with id 'base:myid' with the revision '1' on the project 'myproject' inside the organization 'myorg'",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "description": "",
          "key": "Content-Type",
          "name": "Content-Type",
          "type": "text",
          "value": "application\/json"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [
        {
          "key": "rev",
          "value": "1",
          "equals": true,
          "description": "",
          "enabled": true
        }
      ],
      "auth": null,
      "events": [],
      "folder": null,
      "currentHelper": null,
      "helperAttributes": null,
      "collectionId": "047b8d59-d8cd-4e86-8e0c-0048564b48d1",
      "rawModeData": "",
      "headers": "Content-Type: application\/json\n",
      "pathVariables": []
    },
    {
      "id": "2d58b376-af43-4945-9a16-b2207fa9df91",
      "name": "Create a schema using POST",
      "url": "{{host}}\/v1\/schemas\/myorg\/myproject\/",
      "description": "Creates a schema on the project 'myproject' inside the organization 'myorg'",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Content-Type",
          "name": "Content-Type",
          "value": "application\/json",
          "description": "",
          "type": "text"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [],
      "folder": null,
      "currentHelper": null,
      "helperAttributes": null,
      "collectionId": "047b8d59-d8cd-4e86-8e0c-0048564b48d1",
      "rawModeData": "{\n  \"@context\": [\n    \"https:\/\/bluebrain.github.io\/nexus\/contexts\/shacl-20170720\",\n    {\n      \"this\": \"https:\/\/nexus.example.com\/v1\/schemas\/myorg\/myproj\/e1729302-35b8-4d80-97b2-d63c984e2b5c\/shapes\",\n      \"ex\": \"http:\/\/example.com\/\"\n    }\n  ],\n  \"@id\": \"https:\/\/nexus.example.com\/v1\/myorg\/myproject\/e1729302-35b8-4d80-97b2-d63c984e2b5c\",\n  \"@type\": \"nxv:Schema\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}",
      "headers": "Content-Type: application\/json\n",
      "pathVariables": []
    },
    {
      "id": "677f5444-d56e-42d7-8d46-09159a9ee877",
      "name": "Update a schema",
      "url": "{{host}}\/v1\/schemas\/myorg\/myproject\/base:myid?rev=1",
      "description": "Updates the schema with id 'base:myid' on the project 'myproject' inside the organization 'myorg'",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "description": "",
          "key": "Content-Type",
          "name": "Content-Type",
          "type": "text",
          "value": "application\/json"
        }
      ],
      "method": "PUT",
      "pathVariableData": [],
      "queryParams": [
        {
          "key": "rev",
          "value": "1",
          "equals": true,
          "description": "",
          "enabled": true
        }
      ],
      "auth": null,
      "events": [],
      "folder": null,
      "currentHelper": null,
      "helperAttributes": null,
      "collectionId": "047b8d59-d8cd-4e86-8e0c-0048564b48d1",
      "rawModeData": "{\n  \"@context\": [\n    \"https:\/\/bluebrain.github.io\/nexus\/contexts\/shacl-20170720\",\n    {\n      \"this\": \"https:\/\/nexus.example.com\/v1\/schemas\/myorg\/myproj\/e1729302-35b8-4d80-97b2-d63c984e2b5c\/shapes\",\n      \"ex\": \"http:\/\/example.com\/\"\n    }\n  ],\n  \"@type\": \"nxv:Schema\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 2\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}",
      "headers": "Content-Type: application\/json\n",
      "pathVariables": []
    },
    {
      "id": "68475235-a415-41c7-b356-6a2115948a4a",
      "name": "Fetch a schema (current revision)",
      "url": "{{host}}\/v1\/schemas\/myorg\/myproject\/base:myid",
      "description": "Fetches the schema with id 'base:myid' on the project 'myproject' inside the organization 'myorg'",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "description": "",
          "key": "Content-Type",
          "name": "Content-Type",
          "type": "text",
          "value": "application\/json"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [],
      "folder": null,
      "currentHelper": null,
      "helperAttributes": null,
      "collectionId": "047b8d59-d8cd-4e86-8e0c-0048564b48d1",
      "rawModeData": "",
      "headers": "Content-Type: application\/json\n",
      "pathVariables": []
    },
    {
      "id": "d2c04730-d6a9-4473-974d-27568dad00c0",
      "name": "Fetch a schema (specific tag)",
      "url": "{{host}}\/v1\/schemas\/myorg\/myproject\/base:myid?tag=mytag",
      "description": "Fetches the schema with id 'base:myid' with the tag 'mytag' on the project 'myproject' inside the organization 'myorg'",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "description": "",
          "key": "Content-Type",
          "name": "Content-Type",
          "type": "text",
          "value": "application\/json"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [
        {
          "key": "tag",
          "value": "mytag",
          "equals": true,
          "description": "",
          "enabled": true
        }
      ],
      "auth": null,
      "events": [],
      "folder": null,
      "currentHelper": null,
      "helperAttributes": null,
      "collectionId": "047b8d59-d8cd-4e86-8e0c-0048564b48d1",
      "rawModeData": "",
      "headers": "Content-Type: application\/json\n",
      "pathVariables": []
    },
    {
      "id": "ee17e7ac-4f1b-4ef3-970c-ae0d1c476be5",
      "name": "List schemas",
      "url": "{{host}}\/v1\/schemas\/myorg\/myproject",
      "description": "List the schemas on the project 'myproject' inside the organization 'myorg'",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "description": "",
          "key": "Content-Type",
          "name": "Content-Type",
          "type": "text",
          "value": "application\/json"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [],
      "folder": null,
      "currentHelper": null,
      "helperAttributes": null,
      "collectionId": "047b8d59-d8cd-4e86-8e0c-0048564b48d1",
      "rawModeData": "",
      "headers": "Content-Type: application\/json\n",
      "pathVariables": []
    },
    {
      "id": "f82b34a0-c3a1-4feb-a86c-cb20c7511dd7",
      "name": "Tag a schema",
      "url": "{{host}}\/v1\/schemas\/myorg\/myproject\/base:myid\/tags?rev=2",
      "description": "Tags the schema with id 'base:myid' on the revision '1' with the tag 'mytag' on the project 'myproject' inside the organization 'myorg'",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "description": "",
          "key": "Content-Type",
          "name": "Content-Type",
          "type": "text",
          "value": "application\/json"
        }
      ],
      "method": "PUT",
      "pathVariableData": [],
      "queryParams": [
        {
          "key": "rev",
          "value": "2",
          "equals": true,
          "description": "",
          "enabled": true
        }
      ],
      "auth": null,
      "events": [],
      "folder": null,
      "currentHelper": null,
      "helperAttributes": null,
      "collectionId": "047b8d59-d8cd-4e86-8e0c-0048564b48d1",
      "rawModeData": "{\n  \"tag\": \"mytag\",\n  \"rev\": 1\n}",
      "headers": "Content-Type: application\/json\n",
      "pathVariables": []
    },
    {
      "id": "f9a1d0de-418c-479b-aa24-ff544f7492dd",
      "name": "Create a schema using PUT",
      "url": "{{host}}\/v1\/schemas\/myorg\/myproject\/base:myid",
      "description": "Creates a schema on the project 'myproject' inside the organization 'myorg'",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "description": "",
          "key": "Content-Type",
          "name": "Content-Type",
          "type": "text",
          "value": "application\/json"
        }
      ],
      "method": "PUT",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [],
      "folder": null,
      "currentHelper": null,
      "helperAttributes": null,
      "collectionId": "047b8d59-d8cd-4e86-8e0c-0048564b48d1",
      "rawModeData": "{\n  \"@context\": [\n    \"https:\/\/bluebrain.github.io\/nexus\/contexts\/shacl-20170720\",\n    {\n      \"this\": \"https:\/\/nexus.example.com\/v1\/schemas\/myorg\/myproj\/e1729302-35b8-4d80-97b2-d63c984e2b5c\/shapes\",\n      \"ex\": \"http:\/\/example.com\/\"\n    }\n  ],\n  \"@type\": \"nxv:Schema\",\n  \"shapes\": [\n    {\n      \"@id\": \"this:MyShape\",\n      \"@type\": \"sh:NodeShape\",\n      \"nodeKind\": \"sh:BlankNodeOrIRI\",\n      \"targetClass\": \"ex:Custom\",\n      \"property\": [\n        {\n          \"path\": \"ex:name\",\n          \"datatype\": \"xsd:string\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:number\",\n          \"datatype\": \"xsd:integer\",\n          \"minCount\": 1\n        },\n        {\n          \"path\": \"ex:bool\",\n          \"datatype\": \"xsd:boolean\",\n          \"minCount\": 1\n        }\n      ]\n    }\n  ]\n}",
      "headers": "Content-Type: application\/json\n",
      "pathVariables": []
    }
  ]
}