include required(classpath("default.conf"))

akka {
  persistence {
    journal.plugin = "akka.persistence.cassandra.journal"
    snapshot-store.plugin = "akka.persistence.cassandra.snapshot"
    query-journal-plugin = "akka.persistence.cassandra.query"
    cassandra {
      journal {
        keyspace-autocreate = false
        tables-autocreate = false
        keyspace = ${app.database.cassandra.keyspace}
        pubsub-notification = on
      }
      snapshot {
        keyspace-autocreate = false
        tables-autocreate = false
        keyspace = ${app.database.cassandra.snapshot-keyspace}
      }
      query {
        refresh-interval = 3s
      }
      events-by-tag {
        first-time-bucket = "20181213T00:00"
        # This delay helps to order events. Setting this to anything lower than 2s is highly discouraged.
        eventual-consistency-delay = 4s

        # Tagged events are written to a separate Cassandra table in unlogged batches
        # Max size of these batches. The best value for this will depend on the size of
        # the serialized events. Cassandra logs a warning for batches above a certain
        # size and this should be reduced if that warning is seen.
        max-message-batch-size = 60

        # Max time to buffer events for before writing.
        # Larger valeues will increase cassandra write efficiency but increase the delay before
        # seeing events in EventsByTag queries.
        # Setting this to 0 means that tag writes will get written immediately but will still be asynchronous
        # with respect to the PersistentActor's persist call. However, this will be very bad for throughput.
        flush-interval = 250ms

        # Update the tag_scanning table with this interval. Shouldn't be done too often to
        # avoid unecessary load. The tag_scanning table keeps track of a starting point for tag
        # scanning during recovery of persistent actor.
        scanning-flush-interval = 30s
      }
    }
  }
}

datastax-java-driver {
  basic {
    contact-points = ${app.database.cassandra.contact-points}
    load-balancing-policy.local-datacenter = datacenter1
  }
  advanced {
    reconnect-on-init = true
    protocol.compression = lz4
    auth-provider {
      class = PlainTextAuthProvider
      username = ${?app.database.cassandra.username}
      password = ${?app.database.cassandra.password}
    }
  }
  profiles {
    akka-persistence-cassandra-profile {
      basic.request.consistency = QUORUM
    }
    akka-persistence-cassandra-snapshot-profile {
      basic.request.consistency = QUORUM
    }
  }
}
