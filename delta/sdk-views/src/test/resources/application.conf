akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = on
  loglevel = INFO

  remote {
    artery.canonical.port = 0
    artery.canonical.hostname = 127.0.0.1
  }

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    serialize-messages = on
    allow-java-serialization = off
    testkit.typed.throw-on-shutdown-timeout = false

    serialization-bindings {
      "ch.epfl.bluebrain.nexus.delta.sdk.views.indexing.IndexingStreamBehaviour$IndexingViewCommand" = "kryo"
      "ch.epfl.bluebrain.nexus.delta.sdk.views.indexing.IndexingStreamCoordinatorSpec$ProbeCommand"     = "kryo"
    }
  }

  cluster {
    jmx.multi-mbeans-in-same-jvm = on
    min-nr-of-members = 1

    sharding {
      entity-restart-backoff = 100ms
      distributed-data.durable.keys = []
    }
  }

}