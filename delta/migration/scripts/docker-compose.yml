version: "3.8"
services:
  delta_migration:
    depends_on:
      - cassandra
      - postgres
    image: bluebrain/nexus-delta:latest
    environment:
      KAMON_ENABLED: "false"
      MIGRATE_DATA: "true"
      DISABLE_INDEXING: "true"
      DELTA_PLUGINS: "/opt/docker/plugins/"
      DELTA_EXTERNAL_CONF: "/config/delta-postgres.conf"
      MIGRATION_CONF: "/config/migration.conf"
    entrypoint: [ "bin/wait-for-it.sh", "-s", "-t", "0", "cassandra:9042", "--",
                  "bin/wait-for-it.sh", "-s", "-t", "0", "postgres:5432", "--",
                  "bin/wait-for-it.sh", "-s", "-t", "0", "elasticsearch:9200", "--",
                  "./bin/delta-app",
                  "-Xms3G -Xmx3G",
                  "-Dapp.http.interface=0.0.0.0",
                  "-Dapp.http.base-uri=http://delta:8080/v1",
                  "-Ddatastax-java-driver.basic.contact-points.0=cassandra:9042" ]
    ports:
      - 8080:8080
    volumes:
      - ./config:/config

  blazegraph:
    image: bluebrain/blazegraph-nexus:2.1.6-RC
    environment:
      JAVA_OPTS: "-Djava.awt.headless=true -XX:MaxDirectMemorySize=300m -Xms1g -Xmx1g -XX:+UseG1GC"
    ports:
      - "9999"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
    environment:
      ES_JAVA_OPTS: "-Xmx1G"
      discovery.type: "single-node"
      bootstrap.memory_lock: "true"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200/_cluster/health" ]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - "9200"

  cassandra:
    image: cassandra:3.11.12
    command: "sh /cassandra-init/init.sh"
    environment:
      JVM_OPTS: "-Dcassandra.initial_token=0 -Dcassandra.skip_wait_for_gossip_to_settle=0"
      MAX_HEAP_SIZE: "5G"
      HEAP_NEWSIZE: "200m"
      CASSANDRA_BROADCAST_ADDRESS: cassandra
      CASSANDRA_NUM_TOKENS: 1
    healthcheck:
      test: ["CMD", "cqlsh","-e describe keyspaces"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - "./cassandra-init:/cassandra-init"
      - "~/cassandra-backups:/cassandra-backups"

  postgres:
    image: library/postgres:15.3
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - ./postgres/migration.ddl:/docker-entrypoint-initdb.d/init.sql