akka.actor {

  serializers {
    kryo = "io.altoo.akka.serialization.kryo.KryoSerializer"
    circeElasticSearch = "ch.epfl.bluebrain.nexus.delta.plugins.elasticsearch.serialization.EventSerializer"
  }

  serialization-bindings {
    "ch.epfl.bluebrain.nexus.delta.plugins.elasticsearch.model.ElasticSearchViewEvent"              = "circeElasticSearch"
    "ch.epfl.bluebrain.nexus.delta.plugins.elasticsearch.model.ElasticSearchViewValue"              = "kryo"
  }
}

elasticsearch {
  # the priority of the plugin
  priority = 2
  # the base uri to the Elasticsearch HTTP endpoint
  base = "http://localhost:9200"
  # configuration of the Elasticsearch client
  client {
    # the retry strategy for the http client
    retry = ${app.defaults.constant-retry-strategy}
    # the strategy to decide if it is worth retrying when an Http error occurs.
    # allowed strategies are 'always', 'never' or 'onServerError'.
    is-worth-retrying = "onServerError"
  }
  # the storages aggregate configuration
  aggregate = ${app.defaults.aggregate}
  # the storages cache config
  key-value-store = ${app.defaults.key-value-store}
  # the storages pagination config
  pagination = ${app.defaults.pagination}
  # the configuration concerning indexing documents into Elasticsearch indices
  indexing {
    # the prefix to prepend to created indices
    prefix = "delta"
    # the maximum batching size, corresponding to the maximum number of Elasticsearch documents uploaded on a bulk request.
    # in this window, duplicated persistence ids are discarded
    max-batch-size = 10
    # the maximum batching duration. In this window, duplicated persistence ids are discarded
    max-time-window = 500 millis
    # indexing retry strategy configuration
    retry = ${app.defaults.exponential-retry-strategy}
    # configuration for saving the progress of projections into the primary store
    projection  = ${app.defaults.persist-progress-config}
    # configuration for saving the progress of projections in the cache
    cache  = ${app.defaults.cache-progress-config}
  }
}
