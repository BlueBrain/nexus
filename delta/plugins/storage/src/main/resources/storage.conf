akka.actor {

  serializers {
    kryo = "io.altoo.akka.serialization.kryo.KryoSerializer"
    circeStorage = "ch.epfl.bluebrain.nexus.delta.plugins.storage.serialization.EventSerializer"
  }

  serialization-bindings {
    "ch.epfl.bluebrain.nexus.delta.plugins.storage.storages.model.StorageEvent"     = "circeStorage"
    "ch.epfl.bluebrain.nexus.delta.plugins.storage.files.model.FileEvent"           = "circeStorage"
    "ch.epfl.bluebrain.nexus.delta.rdf.IriOrBNode$Iri"                              = "kryo"
  }
}
storage {
  # The priority of the plugin
  priority = 1
  # storages configuration
  storages {
    # Password and salt used to encrypt credentials at rest
    password = "changeme"
    salt = "salt"

    # Disk storage configuration
    disk {
      # the base path where the files are stored
      default-volume = "/tmp"
      # the allowed set of paths where the files are stored
      allowed-volumes = [${storage.storages.disk.default-volume}]
      # algorithm for checksum calculation
      digest-algorithm = "SHA-256"
      # the default permission required in order to download a file from a disk storage
      default-read-permission = "resources/read"
      # the default permission required in order to upload a file to a disk storage
      default-write-permission = "files/write"
      # flag to decide whether or not to show the absolute location of the files in the metadata response
      show-location = false
      # the default maximum allowed file size (in bytes) for uploaded files. 10 GB 
      default-max-file-size = 10737418240
    }
    # Amazon S3 storage configuration
    amazon {
      # the default digest algorithm
      digest-algorithm = "SHA-256"
      # the default permission required in order to download a file from an S3 storage
      default-read-permission = "resources/read"
      # the default permission required in order to upload a file to a S3 storage
      default-write-permission = "files/write"
      # flag to decide whether or not to show the absolute location of the files in the metadata response
      show-location = true
      # the default maximum allowed file size (in bytes) for uploaded files. 10 GB 
      default-max-file-size = 10737418240
    }
    # Remote disk storage configuration
    remote-disk {
      # the default endpoint
      default-endpoint = "http://localhost:8084/v1"
      # the default credentials for the endpoint
      default-credentials = null
      # the default digest algorithm
      digest-algorithm = "SHA-256"
      # the default permission required in order to download a file from a remote disk storage
      default-read-permission = "resources/read"
      # the default permission required in order to upload a file to a remote disk storage
      default-write-permission = "files/write"
      # flag to decide whether or not to show the absolute location of the files in the metadata response
      show-location = true
      # the default maximum allowed file size (in bytes) for uploaded files. 10 GB 
      default-max-file-size = 10737418240
    }
    # the storages aggregate configuration
    aggregate = ${app.defaults.aggregate}
    # the storages cache config
    key-value-store = ${app.defaults.key-value-store}
    # the storages pagination config
    pagination = ${app.defaults.pagination}
    # the storages indexing config
    indexing = ${app.defaults.indexing}
  }
  files {
    # the files aggregate configuration
    aggregate = ${app.defaults.aggregate}
    # the files indexing config
    indexing = ${app.defaults.indexing}
  }
}