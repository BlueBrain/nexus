<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <servlet>
        <servlet-name>REST API</servlet-name>
        <display-name>REST API</display-name>
        <description>The REST API, including a SPARQL end point, as described at
            https://wiki.blazegraph.com/wiki/index.php/NanoSparqlServer
        </description>
        <servlet-class>com.bigdata.rdf.sail.webapp.RESTServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>
    <servlet>
        <servlet-name>Multi-Tenancy API</servlet-name>
        <display-name>Multi-Tenancy API</display-name>
        <description>The REST API for managing multiple KBs in a single Journal
            or Federation.
        </description>
        <servlet-class>com.bigdata.rdf.sail.webapp.MultiTenancyServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>
    <servlet>
        <servlet-name>Load Balancer</servlet-name>
        <description>
            The HA Load Balancer servlet provides a transparent proxy for
            requests arriving its configured URL pattern (the "external"
            interface for the load balancer) to the root of the web
            application.

            The use of the load balancer is entirely optional.  If the
            security rules permit, then clients MAY make requests directly
            against a specific service. Thus, no specific provision exists
            to disable the load balancer servlet, but you may choose not to
            deploy it.

            When successfully deployed, requests having prefix corresponding to
            the URL pattern for the load balancer are automatically redirected
            to a joined service in the met quorum based on the configured load
            balancer policy.

            Requests directed to /bigdata/LBS/leader are proxied to the quorum
            leader - this URL must be used for non-idempotent requests
            (updates).

            Requests directed to /bigdata/LBS/read are load balanced over the
            services joined with the met quourm.  This URL may only be used
            with idempotent requests (reads).

            For non-HA deployments, requests are simply forwarded to the local
            service after stripping off the /LBS/leader or /LBS/read prefix.
            Thus, it is always safe to use the LBS request URLs.

            The load balancer policies are "HA aware." They will always
            redirect update requests to the quorum leader.  The default
            polices will load balance read requests over the leader and
            followers in a manner that reflects the CPU, IO Wait, and GC
            Time associated with each service.  The PlatformStatsPlugIn
            and GangliaPlugIn MUST be enabled for the default load
            balancer policy to operate. It depends on those plugins to
            maintain a model of the load on the HA replication cluster.
            The GangliaPlugIn should be run only as a listener if you are
            are running the real gmond process on the host.  If you are
            not running gmond, then the GangliaPlugIn should be configured
            as both a listener and a sender.
        </description>
        <servlet-class>com.bigdata.rdf.sail.webapp.HALoadBalancerServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
        <init-param>
            <param-name>policy</param-name>
            <param-value>com.bigdata.rdf.sail.webapp.lbs.policy.RoundRobinLBSPolicy</param-value>
            <description>
                The load balancer policy. This must be an instance of the
                IHALoadBalancerPolicy interface.  A default policy (NOPLBSPolicy) is
                used when no value is specified.

                The policies differ ONLY in how they handle READ requests. All policies
                proxy updates to the leader. If you do not want update proxying, then
                use a URL that does not address the HALoadBalancerServlet.

                The following policies are pre-defined:

                com.bigdata.rdf.sail.webapp.lbs.policy.NOPLBSPolicy:

                Does not load balance read requests.

                com.bigdata.rdf.sail.webapp.lbs.policy.RoundRobinLBSPolicy:

                Round robin for read requests.

                com.bigdata.rdf.sail.webapp.lbs.policy.counters.CountersLBSPolicy:

                Load based proxying for read requests using the build in http
                service for reporting performance counters.  This policy requires
                the PlatformStatsPlugIn and may also require platform specific
                metrics collection dependencies, e.g., sysstat.

                com.bigdata.rdf.sail.webapp.lbs.policy.ganglia.GangliaLBSPolicy:

                Load based proxying for read requests using ganglia. This policy
                requires the requires the PlatformStatsPlugIn.  In addition, either
                gmond must be installed on each node or the embedded GangliaService
                must be enabled such that performance metrics are collected and
                reported.

                Some of these policies can be further configured using additional
                init-param elements that they understand. See the javadoc for the
                individual policies for more information.
            </description>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>Load Balancer</servlet-name>
        <url-pattern>/LBS/*</url-pattern>
    </servlet-mapping>
</web-app>
