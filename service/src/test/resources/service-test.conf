app {
  persistence {
    journal-plugin = "inmemory-journal"
    snapshot-store-plugin = "inmemory-snapshot-store"
    query-journal-plugin = "inmemory-read-journal"
  }
}

akka {
  log-dead-letters = off
  stdout-loglevel = "OFF"
  log-dead-letters-during-shutdown = off
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = INFO
  loglevel = ${?LOG_LEVEL}

  cluster {
    jmx.multi-mbeans-in-same-jvm = on
  }
  actor {
    provider = "cluster"
    serializers {
      kryo = "io.altoo.akka.serialization.kryo.KryoSerializer"
    }
  }
  persistence {
    journal.plugin = "inmemory-journal"
    snapshot-store.plugin = "inmemory-snapshot-store"
  }
  test {
    timefactor = 5.0
  }
  remote {
    artery {
      transport = tcp # See Selecting a transport below
      canonical.hostname = "127.0.0.1"
      canonical.port = 0
      canonical.port = ${?test.remote-port}
    }
  }
}

inmemory-read-journal {
  write-plugin = "inmemory-journal"
  offset-mode = "sequence"
  ask-timeout = "10s"
  refresh-interval = "10ms"
  max-buffer-size = "100"
}

include "test.conf"