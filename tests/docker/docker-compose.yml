version: "3.3"
networks:
  default:
    ipam:
      config:
        # Specify the subnet range for IP address allocation
        - subnet: 10.0.2.0/24
services:
  delta:
    depends_on:
      keycloak:
        condition: service_started
      elasticsearch:
        condition: service_healthy
      blazegraph:
        condition: service_started
      postgres:
        condition: service_started
      storage-service:
        condition: service_started
      localstack:
        condition: service_started
    environment:
      - DELTA_PLUGINS
      - DELTA_EXTERNAL_CONF
      - KAMON_ENABLED
    image: bluebrain/nexus-delta:latest
    entrypoint:
      - '/bin/bash'
      - '-c'
      - |
        ln -sf /opt/docker/plugins/disabled/project-deletion.jar /opt/docker/plugins/project-deletion.jar &&
        /opt/docker/bin/delta-app -Xmx4G -Dapp.projections.cluster.size=${CLUSTER_SIZE}
    ports:
      - 8080:8080
    volumes:
      - ./config:/config
      - /tmp:/default-volume
      - /tmp/ship:/tmp
    extra_hosts:
      - "delta:127.0.0.1"
    dns:
      # Set the DNS server to be the LocalStack container, for host resolution
      - 10.0.2.20

  delta2:
    depends_on:
      - delta
    environment:
      DELTA_PLUGINS: "/opt/docker/plugins/"
      DELTA_EXTERNAL_CONF: "/config/delta-postgres.conf"
      KAMON_ENABLED: "false"
    image: bluebrain/nexus-delta:latest
    profiles:
      - "cluster"
    entrypoint:
      - '/bin/bash'
      - '-c'
      - |
        ln -sf /opt/docker/plugins/disabled/project-deletion.jar /opt/docker/plugins/project-deletion.jar &&
        /opt/docker/bin/delta-app -Xmx4G -Dapp.projections.cluster.size=${CLUSTER_SIZE} -Dapp.projections.cluster.node-index=1 -Dapp.database.tables-autocreate=false
    ports:
      - 8081:8080
    volumes:
      - ./config:/config
      - /tmp:/default-volume
    dns:
      # Set the DNS server to be the LocalStack container, for host resolution
      - 10.0.2.20

  delta3:
    depends_on:
      - delta2
    environment:
      DELTA_PLUGINS: "/opt/docker/plugins/"
      DELTA_EXTERNAL_CONF: "/config/delta-postgres.conf"
      KAMON_ENABLED: "false"
    image: bluebrain/nexus-delta:latest
    profiles:
      - "cluster"
    entrypoint:
      - '/bin/bash'
      - '-c'
      - |
        ln -sf /opt/docker/plugins/disabled/project-deletion.jar /opt/docker/plugins/project-deletion.jar &&
        /opt/docker/bin/delta-app -Xmx4G -Dapp.projections.cluster.size=${CLUSTER_SIZE} -Dapp.projections.cluster.node-index=2 -Dapp.database.tables-autocreate=false
    ports:
      - 8082:8080
    volumes:
      - ./config:/config
      - /tmp:/default-volume
    dns:
      # Set the DNS server to be the LocalStack container, for host resolution
      - 10.0.2.20

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.4
    environment:
      KEYCLOAK_ADMIN: "admin"
      KEYCLOAK_ADMIN_PASSWORD: "admin"
      DB_VENDOR: H2
    command:
      - start-dev
      - --hostname=keycloak
      - --hostname-port=8080
      - --hostname-strict-backchannel=true
    ports:
      - 9090:8080

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.3
    environment:
      ES_JAVA_OPTS: "-Xmx2G"
      discovery.type: "single-node"
      bootstrap.memory_lock: "true"
      xpack.security.enabled: "true"
      ingest.geoip.downloader.enabled: "false"
      ELASTIC_PASSWORD: "password"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://elastic:password@localhost:9200/" ]
      interval: 1s
      timeout: 2s
      retries: 60
    ports:
      - 9200:9200
    deploy:
      resources:
        limits:
          memory: 4G

  blazegraph:
    image: bluebrain/blazegraph-nexus:2.1.6-RC
    environment:
      JAVA_OPTS: "-DjettyXml=/config/jetty.xml -Djava.awt.headless=true -XX:MaxDirectMemorySize=300m -Xms4g -Xmx4g -XX:+UseG1GC"
    ports:
      - 9999:9999
    volumes:
      - ./config:/config

  postgres:
    image: library/postgres:15.7
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"

  storage-service:
    container_name: "nexus-storage-service"
    image: bluebrain/nexus-storage:latest
    environment:
      STORAGE_CONFIG_FILE: "/config/storage.conf"
      KAMON_ENABLED: "false"
    entrypoint: [ "./bin/storage",
                  "-Dkamon.modules.prometheus-reporter.enabled=false",
                  "-Dkamon.modules.jaeger.enabled=false" ]
    ports:
      - 8090:8090
    volumes:
      - ./config:/config

  localstack:
    image: localstack/localstack:3.4
    environment:
      AWS_ACCESS_KEY_ID: "MY_ACCESS_KEY"
      AWS_SECRET_ACCESS_KEY: "CHUTCHUT"
      SERVICES: "s3:4566"
    ports:
      - 4566:4566
    networks:
      default:
        # Set the container IP address in the 10.0.2.0/24 subnet
        ipv4_address: 10.0.2.20

#  fusion:
#    depends_on:
#      - delta
#    image: bluebrain/nexus-web:1.10.0-M2-fix-resource-update
#    environment:
#      BASE_PATH: "/"
#      HOST_NAME: "http://localhost"
#      API_ENDPOINT: "http://localhost/v1"

#  router:
#    depends_on:
#      - fusion
#    image: nginx:stable
#    ports:
#      - target: 80
#        published: 80
#        mode: host
#    deploy:
#      mode: global
#    volumes:
#      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf

#  ship:
#    depends_on:
#      - postgres
#    image: bluebrain/nexus-ship:latest
#    command: run --path "/tmp/export.json" --config "/config/external-ship.conf"
#    volumes:
#      - /tmp/ship:/tmp # put the export file in /tmp/ship locally
#      - ./config:/config