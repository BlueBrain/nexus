akka.persistence.cassandra {
  events-by-tag {
    first-time-bucket = "20211203T00:00"
    eventual-consistency-delay= 2 seconds
    refresh-interval = 500 millis
  }
}

app {
  http {
    base-uri = "http://delta:8080/v1"
    interface = 0.0.0.0
  }
  cluster.seeds = "delta:25520"

  database {
    flavour = "cassandra"
    cassandra {
      contact-points = ["cassandra:9042"]
      keyspace-autocreate = true
      tables-autocreate = true
    }
    deny-cleanup = false
  }

  fusion {
    base = "https://bbp.epfl.ch/nexus/web/"
    enable-redirects = true
  }
}

plugins {
  blazegraph {
    base = "http://blazegraph:9999/blazegraph"

    indexing {
      max-batch-size = 50
      max-time-window = 50 millis
    }
  }

  composite-views {
    min-interval-rebuild = 5 seconds

    sources {
      max-batch-size = 50
      max-time-window = 50 millis
    }
  }

  elasticsearch {
    base = "http://elasticsearch:9200"
    credentials {
      username = "elastic"
      password = "password"
    }

    indexing {
      max-batch-size = 50
      max-time-window = 50 millis
    }
  }

  graph-analytics {
    enabled = true
  }

  search {
    enabled = true
    fields = "/config/fields.json"
    indexing {
      context = "/config/search-context.json"
      mapping = "/config/mapping.json"
      settings = "/config/settings.json"
      query = "/config/construct-query.sparql"
      resource-types = "/config/resource-types.json"
    }
  }

  storage {
    storages {
      disk {
        default-volume= "/default-volume"
      }

      remote-disk {
        enabled = true
        default-endpoint = "http://storage-service:8080/v1"
      }

      amazon {
        enabled = true
      }
    }
  }
}