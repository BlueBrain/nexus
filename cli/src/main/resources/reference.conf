# environment configuration
env {
  # the Nexus service endpoint, including the prefix (if necessary)
  endpoint = "http://localhost:8080/v1"
  # the optional Bearer Token used to connect to the Nexus service
  # token = "mytoken"
  # the HTTP Client configuration
  http-client {
    # the retry strategy (policy and condition)
    retry {
      # the type of strategy; possible options are "never", "once", "constant" and "exponential"
      strategy = "exponential"
      # the initial delay before retrying. Subsequent retries will be based on this value too.
      initial-delay = 100 millis
      # the maximum delay
      max-delay = 20 seconds
      # the maximum number of retries
      max-retries = 10
      # the condition under which is worth retrying; possible options are "never", "on-server-error", "always".
      condition = "on-server-error"
    }
  }
  # the default project sparql view id
  default-sparql-view = "https://bluebrain.github.io/nexus/vocabulary/defaultSparqlIndex"
}

# postgres configuration
postgres {
  # the database host
  host = 127.0.0.1
  # the database port
  port = 5432
  # the database username
  username = "postgres"
  # the database password
  password = "postgres"
  # the database name
  database = "postgres"
  # the location where to store the progress of the projection
  offset-file = ${user.home}/.nexus/postgres.offset
  # the how frequent to save the current offset to a file
  offset-save-interval = 10s
  # the retry strategy (policy and condition)
  retry {
    # the type of strategy; possible options are "never", "once", "constant" and "exponential"
    strategy = "exponential"
    # the initial delay before retrying. Subsequent retries will be based on this value too.
    initial-delay = 100 millis
    # the maximum delay
    max-delay = 20 seconds
    # the maximum number of retries
    max-retries = 10
  }
  offset-save-interval = 1 minute
  # configuration for printing output to the client
  print {
    # the optional number of events between progresses being printed
    progress-interval = 100
  }
  # the projects configuration
  projects {}
}

# influxDB configuration
influx {
  # the influxDB v1.x API endpoint
  endpoint = "http://localhost:8086"
  # the database name
  database = "influxdb"
  # the command used to create an influxDB database
  db-creation-command = """CREATE DATABASE """"${influx.database}"""" WITH DURATION 1000d REPLICATION 1 SHARD DURATION 1h NAME """"${influx.database}"""""""
  # the location where to store the influxdb of the projection
  offset-file = ${user.home}/.nexus/influxdb.offset
  # the how frequent to save the current offset to a file
  offset-save-interval = 1 minute
  # configuration for printing output to the client
  print {
    # the optional number of events between progresses being printed
    progress-interval = 100
  }
  # the projects configuration
  projects {}
}
