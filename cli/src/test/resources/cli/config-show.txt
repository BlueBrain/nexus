env {
    default-sparql-view="https://bluebrain.github.io/nexus/vocabulary/defaultSparqlIndex"
    endpoint="http://localhost:8080/v1"
    http-client {
        retry {
            condition=on-server-error
            initial-delay="100ms"
            max-delay="5s"
            max-retries=1
            strategy=once
        }
    }
    token=mytoken
}
influx {
    database=influxdb
    db-creation-command="CREATE DATABASE \"influxdb\" WITH DURATION 1000d REPLICATION 1 SHARD DURATION 1h NAME \"influxdb\""
    endpoint="http://localhost:8086"
    error-file="{influx-error-file}"
    offset-file="{influx-offset-file}"
    offset-save-interval="1s"
    print {
        progress-interval=100
    }
    projects {}
}
literature {
    blue-brain-search {
        endpoint="http://localhost:32797/v1"
        model-types=[
            {
                dimensions=512
                name=USE
            },
            {
                dimensions=768
                name=SBIOBERT
            },
            {
                dimensions=768
                name=SBERT
            },
            {
                dimensions=700
                name=BSV
            }
        ]
    }
    elastic-search {
        endpoint="http://localhost:9200"
        model-indices=[
            {
                index="my_index_use"
                name=USE
            },
            {
                index="my_index_sbiobert"
                name=SBIOBERT
            },
            {
                index="my_index_sbert"
                name=SBERT
            },
            {
                index="my_index_bsv"
                name=BSV
            }
        ]
    }
    error-file="{literature-error-file}"
    offset-file="{literature-offset-file}"
    offset-save-interval="1m"
    print {
        progress-interval=100
    }
    projects {}
}
postgres {
    database=postgres
    error-file="{postgres-error-file}"
    host="127.0.0.1"
    offset-file="{postgres-offset-file}"
    offset-save-interval="1s"
    password=postgres
    port=5432
    print {
        progress-interval=100
    }
    projects {}
    retry {
        initial-delay="100ms"
        max-delay="5s"
        max-retries=1
        strategy=once
    }
    username=postgres
}