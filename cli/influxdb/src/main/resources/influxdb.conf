{
  influxdb {

    data {
      default-sparql-view = "https://bluebrain.github.io/nexus/vocabulary/defaultSparqlIndex"
      default-sparql-query =
        """
      PREFIX ns:<https://neuroshapes.org/>
      PREFIX schema:<http://schema.org/>
      PREFIX nxv:<https://bluebrain.github.io/nexus/vocabulary/>

      SELECT ?created ?updated ?deprecated ?bytes WHERE {
        <{resource_id}>       nxv:createdAt            ?created .
        <{resource_id}>       nxv:updatedAt            ?updated .
        <{resource_id}>       nxv:deprecated        ?deprecated .
        OPTIONAL {
          <{resource_id}> schema:distribution                  ?d .
          ?d                                a schema:DataDownload .
          ?d               schema:contentSize                 ?cs .
          ?cs                    schema:value              ?bytes .
        }
      }
    """
      default-type-prefix = "https://neuroshapes.org"

      default-project-config {
        sparql-view = ${influxdb.data.default-sparql-view}
        type-prefix = ${influxdb.data.default-type-prefix}
        influxdb-database = "nstats"
        influxdb-database = ${?NEXUS_DEFAULT_INFLUXDB_DATABASE}
        influxdb-measurement = "nstats"
        influxdb-measurement = ${?NEXUS_DEFAULT_INFLUXDB_MEASUREMENT}
        influxdb-values = ["bytes"]
        influxdb-timestamp = "updated"
        types {
          Subject = ${influxdb.data.default-sparql-query}
          Trace = ${influxdb.data.default-sparql-query}
          TraceCollection = ${influxdb.data.default-sparql-query}
          PatchedCell = ${influxdb.data.default-sparql-query}
          LayerThickness = ${influxdb.data.default-sparql-query}
          NeuronDensity = ${influxdb.data.default-sparql-query}
          BoutonDensity = ${influxdb.data.default-sparql-query}
          ReconstructedCell = ${influxdb.data.default-sparql-query}
          SynapticConnectivity = ${influxdb.data.default-sparql-query}
          PSPamplitude = ${influxdb.data.default-sparql-query}
          ImageStack = ${influxdb.data.default-sparql-query}
          MorphologyRelease = ${influxdb.data.default-sparql-query}
          ModelReleaseIndex = ${influxdb.data.default-sparql-query}
          MorphologyDiversification = ${influxdb.data.default-sparql-query}
          SubCellularModel = ${influxdb.data.default-sparql-query}
          EModel = ${influxdb.data.default-sparql-query}
          MEModel = ${influxdb.data.default-sparql-query}
          Circuit = ${influxdb.data.default-sparql-query}
          Organization = ${influxdb.data.default-sparql-query}
          Person = ${influxdb.data.default-sparql-query}
          SoftwareAgent = ${influxdb.data.default-sparql-query}
        }
      }


      projects {
      }
    }

    indexing {
      sparql-concurrency = 3
      sparql-concurrency = ${?INFLUXDB_INDEXER_SPARQL_CONCURRENCY}
      influxdb-concurrency = 3
      influxdb-concurrency = ${?INFLUXDB_INDEXER_INFLUXDB_CONCURRENCY}
      # the base address of InfluxDB
      influxdb-endpoint = "http://localhost:8086"
      influxdb-endpoint = ${?NEXUS_INFLUXDB_ENDPOINT}
      # the influxdb database
      retry {
        strategy = "once"
        initial-delay = 100 millis
        max-delay = 5 seconds
        max-retries = 1
        condition = "onServerError"
      }

    }
  }
}