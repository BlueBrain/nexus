app {
  description {
    env = "production"
  }

  database {
    read = ${app.defaults.database.access} {
      pool-size = 15
      host = ${POSTGRES_READER_ENDPOINT}
    }
    write = ${app.defaults.database.access} {
      pool-size = 15
    }
    streaming = ${app.defaults.database.access} {
      pool-size = 50
      host = ${POSTGRES_READER_ENDPOINT}
    }

    name     = "nexus_user"
    username = "nexus_user"
    password = ${POSTGRES_PASSWORD}

    tables-autocreate = true
  }

  projections {
    batch {
      max-elements = 500
    }
  }

  defaults {
    database {
      access {
        host = ${POSTGRES_HOST}
        port = 5432
      }
    }

    query {
      batch-size = 30
    }

    pagination {
      size-limit = 2000
    }

    indexing {
      prefix = "nexus"
    }
  }

  fusion {
    enable-redirects = true
    base = "https://nexus-fusion.shapes-registry.org/nexus/web"
  }

  http {
    interface = 0.0.0.0
    base-uri = "https://nexus-delta.shapes-registry.org/v1"
  }

  monitoring {
    trace {
      sampler = "never"
    }
  }

  projects {
    deletion {
      enabled = true
    }
  }
}

plugins {
  blazegraph {
    enabled = true
    base = ${BLAZEGRAPH_ENDPOINT}
    batch {
      max-elements = 2
    }
  }

  elasticsearch {
    enabled = true
    base = ${ELASTICSEARCH_ENDPOINT}
    credentials {
      username = "elastic"
      password = ${ELASTICSEARCH_PASSWORD}
    }
    batch {
      max-elements = 10
    }
  }

  composite-views {
    enabled = true
    elasticsearch-batch {
      max-elements = 10
    }
    blazegraph-access = {
      base = ${BLAZEGRAPH_COMPOSITE_ENDPOINT}
    }
    blazegraph-batch {
      max-elements = 2
    }
    sink-config = "batch"
    min-interval-rebuild = 10 minutes
  }

  graph-analytics {
    enabled = false
    batch = {
      max-elements = 10
    }
  }

  project-deletion {
    enabled = false
  }

  search {
    enabled = true
    fields = /opt/search-config/fields.json
    indexing {
      context = /opt/search-config/search-context.json
      mapping = /opt/search-config/mapping.json
      settings = /opt/search-config/settings.json
      query = /opt/search-config/construct-query.sparql
      resource-types = /opt/search-config/resource-types.json
      rebuild-strategy = 10 minutes
    }
    suites = {
      sbo = [
        "public/forge",
        "public/hippocampus",
        "public/hippocampus-hub",
        "public/multi-vesicular-release",
        "public/ngv",
        "public/ngv-anatomy",
        "public/nvg",
        "public/sscx",
        "public/thalamus",
        "public/topological-sampling",
        "bbp/lnmce",
        "bbp/mmb-point-neuron-framework-model",
        "bbp/ncmv3",
        "bbp/hippocampus",
        "bbp-external/seu",
        "bbp/mouselight"
      ]
    }
  }

  storage {
    enabled = true

    # We only rely on S3 storage in this deployment
    enable-default-creation = false
    storages {
      disk {
        default-volume = /opt/disk-storage
      }
      remote-disk {
        enabled = false
      }
      amazon {
        enabled = true
        use-default-credential-provider = true
        default-bucket = "nexus-bucket-production"
        prefix = "/sbo/data/project/"
        delegation {
            private-key = ${DELEGATION_PRIVATE_KEY}
            token-duration = "3 days"
        }
      }
    }
  }

  service-account {
    realm = "SBO"
    subject = "nexus-delta"
  }
}
