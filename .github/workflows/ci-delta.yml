name: Continuous Integration Delta
on:
  push:
    branches:
      - master
    paths:
      - 'sourcing/**'
      - 'rdf/**'
      - 'delta/src/**'
      - 'build.sbt'
      - 'project/**'
  pull_request:
    paths:
      - 'sourcing/**'
      - 'rdf/**'
      - 'delta/src/**'
      - 'build.sbt'
      - 'project/**'
jobs:
  review:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Coursier Cache
        uses: coursier/cache-action@v4
      - name: Setup Scala
        uses: olafurpg/setup-scala@v5
        with:
          java-version: adopt@1.11
      - name: Static Analysis
        run: sbt -Dsbt.color=always -Dsbt.supershell=false "project delta" clean scalafmtCheck test:scalafmtCheck scalafmtSbtCheck scapegoat
      - name: Tests
        run: |
          grep -qF 'bucket.my-domain.com' /etc/hosts || echo "127.0.0.1 bucket.my-domain.com" | sudo tee -a /etc/hosts
          grep -qF 'bucket2.my-domain.com' /etc/hosts || echo "127.0.0.1 bucket2.my-domain.com" | sudo tee -a /etc/hosts
          sbt -Dsbt.color=always -Dsbt.supershell=false "project delta" clean coverage test coverageReport coverageAggregate
  publish:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    env:
      CI: true
      BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
      BINTRAY_PASS: ${{ secrets.BINTRAY_PASS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Coursier Cache
        uses: coursier/cache-action@v4
      - name: Setup Scala
        uses: olafurpg/setup-scala@v5
        with:
          java-version: adopt@1.11
      - name: Publish To Bintray
        run: sbt -Dsbt.color=always -Dsbt.supershell=false "project delta" releaseEarly
      - name: Publish To DockerHub
        run: |
          sbt -Dsbt.color=always -Dsbt.supershell=false "project delta" docker:publishLocal
          echo ${{ secrets.DOCKER_PASS }} | docker login --username ${{ secrets.DOCKER_USER }} --password-stdin
          docker push bluebrain/nexus-delta:latest
      - name: Record Coverage
        run: sbt -Dsbt.color=always -Dsbt.supershell=false "project delta" clean coverage test coverageReport coverageAggregate
      - name: Report Coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}