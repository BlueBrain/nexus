name: Delta Core
on:
  pull_request:
    paths:
      - 'delta/kernel/**'
      - 'delta/plugins/**'
      - 'delta/rdf/**'
      - 'delta/sdk/**'
      - 'delta/sourcing-psql/**'
      - 'delta/testkit/**'
      - 'build.sbt'
      - 'project/**'
      - '.github/workflows/ci-delta-core.yml'
jobs:
  static-analysis:
    if: github.event_name == 'pull_request'
    runs-on: it
    timeout-minutes: 10
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Static Analysis
        run: |
          sbt -Dsbt.color=always -Dsbt.supershell=false \
            "project delta" \
            clean \
            kernel/scalafmtCheck \
            kernel/Test/scalafmtCheck \
            kernel/scalafmtSbtCheck \
            kernel/scapegoat \
            kernel/doc \
            rdf/scalafmtCheck \
            rdf/Test/scalafmtCheck \
            rdf/scalafmtSbtCheck \
            rdf/scapegoat \
            rdf/doc \
            sdk/scalafmtCheck \
            sdk/Test/scalafmtCheck \
            sdk/scalafmtSbtCheck \
            sdk/scapegoat \
            sdk/doc \
            sourcing-psql/scalafmtCheck \
            sourcing-psql/Test/scalafmtCheck \
            sourcing-psql/scalafmtSbtCheck \
            sourcing-psql/scapegoat \
            sourcing-psql/doc \
            testkit/scalafmtCheck \
            testkit/Test/scalafmtCheck \
            testkit/scalafmtSbtCheck \
            testkit/scapegoat \
            testkit/doc

  unit-tests:
    if: github.event_name == 'pull_request'
    runs-on: it
    timeout-minutes: 20
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Tests
        run: |
          sbt -Dsbt.color=always -Dsbt.supershell=false \
            clean \
            coverage \
            kernel/test \
            rdf/test \
            sdk/test \
            sourcingPsql/test \
            testkit/test \
            kernel/coverageReport \
            rdf/coverageReport \
            sdk/coverageReport \
            sourcingPsql/coverageReport \
            testkit/coverageReport
