name: Continuous Integration CLI
on:
  push:
    branches:
      - master
    paths:
      - 'cli/**'
      - 'build.sbt'
      - 'project/**'
  pull_request:
    paths:
      - 'cli/**'
      - 'build.sbt'
      - 'project/**'
jobs:
  review:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Coursier Cache
        uses: coursier/cache-action@v5
      - name: Setup Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.11
      - name: Static Analysis
        run: sbt -Dsbt.color=always -Dsbt.supershell=false "project cli" clean scalafmtCheck test:scalafmtCheck scalafmtSbtCheck scapegoat
      - name: Tests
        run: sbt -Dsbt.color=always -Dsbt.supershell=false "project cli" clean coverage test coverageReport coverageAggregate
  publish:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    env:
      CI: true
      BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
      BINTRAY_PASS: ${{ secrets.BINTRAY_PASS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Coursier Cache
        uses: coursier/cache-action@v5
      - name: Setup Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.11
      - name: Publish
        run: sbt -Dsbt.color=always -Dsbt.supershell=false "project cli" releaseEarly
      - name: Publish To DockerHub
        run: |
          sbt -Dsbt.color=always -Dsbt.supershell=false "project cli" docker:publishLocal
          echo ${{ secrets.DOCKER_PASS }} | docker login --username ${{ secrets.DOCKER_USER }} --password-stdin
          docker push bluebrain/nexus-cli:latest
      - name: Record Coverage
        run: sbt -Dsbt.color=always -Dsbt.supershell=false "project cli" clean coverage test coverageReport coverageAggregate
      - name: Report Coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}