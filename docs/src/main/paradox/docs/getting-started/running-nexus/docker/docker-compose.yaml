version: "3.3"
services:
  delta:
    depends_on:
      - blazegraph
      - elasticsearch
      - postgres
    image: bluebrain/nexus-delta:1.9.0-M10
    environment:
      DELTA_PLUGINS: "/opt/docker/plugins/"
      DELTA_EXTERNAL_CONF: "/config/delta.conf"
      KAMON_ENABLED: "false"
    entrypoint: [ "bin/wait-for-it.sh", "-s", "-t", "0", "postgres:5432", "--",
                  "bin/wait-for-it.sh", "-s", "-t", "0", "elasticsearch:9200", "--",
                  "./bin/delta-app",
                  "-Xmx512m"
    ]
    volumes:
      - ${PWD}/delta.conf:/config/delta.conf
    deploy:
      resources:
        limits:
          memory: 1024M

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.11.0"
    environment:
      discovery.type: "single-node"
      bootstrap.memory_lock: "true"
      xpack.security.enabled: "true"
      ingest.geoip.downloader.enabled: "false"
      ELASTIC_PASSWORD: "password"
    ports:
      - "9200"
    deploy:
      resources:
        limits:
          memory: 512M

  postgres:
    image: library/postgres:15.4
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"

  blazegraph:
    image: bluebrain/blazegraph-nexus:2.1.6-RC
    environment:
      JAVA_OPTS: "-Djava.awt.headless=true  -XX:MaxDirectMemorySize=64m -Xmx512m -XX:+UseG1GC"
    ports:
      - "9999"
    deploy:
      resources:
        limits:
          memory: 1024M

  web:
    depends_on:
      - delta
    image: bluebrain/nexus-web:1.9.9
    environment:
      BASE_PATH: "/"
      HOST_NAME: "http://localhost"
      API_ENDPOINT: "http://localhost/v1"

  router:
    depends_on:
      - web
    image: nginx:stable
    ports:
      - target: 80
        published: 80
        mode: host
    deploy:
      mode: global
    volumes:
      - ${PWD}/nginx.conf:/etc/nginx/conf.d/default.conf
