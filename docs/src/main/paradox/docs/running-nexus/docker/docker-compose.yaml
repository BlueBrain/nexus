services:
  delta:
    depends_on:
      elasticsearch:
        condition: service_healthy
      blazegraph:
        condition: service_healthy
      postgres:
        condition: service_started
    image: bluebrain/nexus-delta:1.10.0
    environment:
      DELTA_PLUGINS: "/opt/docker/plugins/"
      DELTA_EXTERNAL_CONF: "/config/delta.conf"
      KAMON_ENABLED: "false"
    entrypoint:
      - '/bin/bash'
      - '-c'
      - '/opt/docker/bin/delta-app -Xmx512m'
    volumes:
      - ${PWD}/delta.conf:/config/delta.conf
    deploy:
      resources:
        limits:
          memory: 1024M

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.16.1"
    environment:
      discovery.type: "single-node"
      bootstrap.memory_lock: "true"
      xpack.security.enabled: "true"
      ingest.geoip.downloader.enabled: "false"
      ELASTIC_PASSWORD: "password"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://elastic:password@localhost:9200/" ]
      interval: 1s
      timeout: 2s
      retries: 60
    ports:
      - "9200"
    deploy:
      resources:
        limits:
          memory: 512M

  postgres:
    image: library/postgres:16.5
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"

  blazegraph:
    image: bluebrain/blazegraph-nexus:2.1.6-RC-21-jre
    environment:
      JAVA_OPTS: "-Djava.awt.headless=true  -XX:MaxDirectMemorySize=64m -Xmx512m -XX:+UseG1GC"
    ports:
      - "9999"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9999/blazegraph/" ]
      interval: 1s
      timeout: 2s
      retries: 60
    deploy:
      resources:
        limits:
          memory: 1024M

  web:
    depends_on:
      - delta
    image: bluebrain/nexus-web:1.10.0-M2-studio-open-tag-in-drawer
    environment:
      BASE_PATH: "/"
      HOST_NAME: "http://localhost"
      API_ENDPOINT: "http://localhost/v1"

  router:
    depends_on:
      - web
    image: nginx:stable
    ports:
      - target: 80
        published: 80
        mode: host
    deploy:
      mode: global
    volumes:
      - ${PWD}/nginx.conf:/etc/nginx/conf.d/default.conf
